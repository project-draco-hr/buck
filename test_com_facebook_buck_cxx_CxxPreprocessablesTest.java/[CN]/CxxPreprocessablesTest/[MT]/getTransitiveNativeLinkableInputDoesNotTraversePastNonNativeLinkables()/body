{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new CxxBuckConfig(new FakeBuckConfig()));
  String sentinal="bottom";
  CxxPreprocessorInput bottomInput=CxxPreprocessorInput.builder().putPreprocessorFlags(CxxSource.Type.C,sentinal).build();
  BuildRule bottom=createFakeCxxPreprocessorDep("//:bottom",pathResolver,bottomInput);
  BuildRule middle=new FakeBuildRule("//:middle",pathResolver,bottom);
  CxxPreprocessorInput topInput=CxxPreprocessorInput.EMPTY;
  BuildRule top=createFakeCxxPreprocessorDep("//:top",pathResolver,topInput,middle);
  CxxPreprocessorInput totalInput=CxxPreprocessorInput.concat(CxxPreprocessables.getTransitiveCxxPreprocessorInput(cxxPlatform,ImmutableList.of(top)));
  assertTrue(bottomInput.getPreprocessorFlags().get(CxxSource.Type.C).contains(sentinal));
  assertFalse(totalInput.getPreprocessorFlags().get(CxxSource.Type.C).contains(sentinal));
}
