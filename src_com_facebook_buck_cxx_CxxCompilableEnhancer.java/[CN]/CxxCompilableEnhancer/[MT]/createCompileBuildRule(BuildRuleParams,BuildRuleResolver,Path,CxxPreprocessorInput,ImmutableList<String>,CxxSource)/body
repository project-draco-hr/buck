{
  BuildTarget target=createCompileBuildTarget(params.getBuildTarget(),source.getName());
  boolean cxx=!Files.getFileExtension(source.getName()).equals("c");
  BuildRuleParams compileParams=params.copyWithChanges(COMPILE_TYPE,target,ImmutableSortedSet.<BuildRule>of(),ImmutableSortedSet.<BuildRule>naturalOrder().addAll(SourcePaths.filterBuildRuleInputs(ImmutableList.of(source.getSource()))).addAll(BuildRules.toBuildRulesFor(params.getBuildTarget(),resolver,preprocessorInput.getRules(),false)).build());
  return new CxxCompile(compileParams,compiler,ImmutableList.<String>builder().add("-x",cxx ? "c++" : "c").addAll(cxx ? preprocessorInput.getCxxppflags() : preprocessorInput.getCppflags()).addAll(compilerFlags).build(),source.getObject(),source.getSource(),preprocessorInput.getIncludes(),preprocessorInput.getSystemIncludes());
}
