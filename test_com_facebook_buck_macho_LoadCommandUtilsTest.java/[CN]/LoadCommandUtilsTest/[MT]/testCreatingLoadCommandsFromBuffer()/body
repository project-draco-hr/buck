{
  byte[] segmentBytes=SegmentCommandTestData.getBigEndian64Bits();
  byte[] symtabBytes=SymTabCommandTestData.getBigEndian();
  byte[] uuidBytes=UUIDCommandTestData.getBigEndian();
  byte[] unknownBytes={(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x08};
  ByteBuffer byteBuffer=ByteBuffer.allocate(segmentBytes.length + symtabBytes.length + uuidBytes.length+ unknownBytes.length).order(ByteOrder.BIG_ENDIAN);
  byteBuffer.put(segmentBytes).put(symtabBytes).put(uuidBytes).put(unknownBytes);
  byteBuffer.position(0);
  assertThat(LoadCommandUtils.createLoadCommandFromBuffer(byteBuffer),instanceOf(SegmentCommand.class));
  assertThat(LoadCommandUtils.createLoadCommandFromBuffer(byteBuffer),instanceOf(SymTabCommand.class));
  assertThat(LoadCommandUtils.createLoadCommandFromBuffer(byteBuffer),instanceOf(UUIDCommand.class));
  assertThat(LoadCommandUtils.createLoadCommandFromBuffer(byteBuffer),instanceOf(UnknownCommand.class));
}
