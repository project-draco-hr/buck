{
  return FluentIterable.from(rule.getDeps()).filter(DependencyAggregation.class).transformAndConcat(new Function<DependencyAggregation,Iterable<BuildRule>>(){
    @Override public Iterable<BuildRule> apply(    DependencyAggregation input){
      return input.getDeps();
    }
  }
).append(Iterables.filter(rule.getDeps(),Predicates.not(Predicates.instanceOf(DependencyAggregation.class))));
}
