{
  ImmutableMultimap<Path,String> subgroups=ImmutableMultimap.<Path,String>builder().put(Paths.get("root"),"Lib").put(Paths.get("root/Lib"),"Bar").put(Paths.get("root/Lib"),"Foo").build();
  ImmutableMultimap<Path,SourcePath> entries=ImmutableMultimap.<Path,SourcePath>builder().put(Paths.get("root/Lib/Foo"),new TestSourcePath("Lib/Foo/File2.h")).put(Paths.get("root/Lib/Bar"),new TestSourcePath("Lib/Bar/File1.h")).put(Paths.get("root/Lib/Foo"),new TestSourcePath("Lib/Foo/File1.h")).build();
  ImmutableList<GroupedSource> expected=ImmutableList.of(ImmutableGroupedSource.ofSourceGroup("Lib",ImmutableList.of(ImmutableGroupedSource.ofSourceGroup("Bar",ImmutableList.of(ImmutableGroupedSource.ofSourcePath(new TestSourcePath("Lib/Bar/File1.h")))),ImmutableGroupedSource.ofSourceGroup("Foo",ImmutableList.of(ImmutableGroupedSource.ofSourcePath(new TestSourcePath("Lib/Foo/File1.h")),ImmutableGroupedSource.ofSourcePath(new TestSourcePath("Lib/Foo/File2.h")))))));
  ImmutableList<GroupedSource> actual=RuleUtils.createGroupsFromEntryMaps(subgroups,entries,Paths.get("root"));
  assertEquals(expected,actual);
}
