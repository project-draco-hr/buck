{
  ImmutableList<SourceWithFlags> input=ImmutableList.of(SourceWithFlags.of(new FakeSourcePath("Group1/foo.m")),SourceWithFlags.of(new FakeSourcePath("Group1/bar.m"),ImmutableList.of("-Wall")),SourceWithFlags.of(new FakeSourcePath("Group2/baz.m")),SourceWithFlags.of(new FakeSourcePath("Group2/blech.m"),ImmutableList.of("-fobjc-arc")));
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver());
  ImmutableList<GroupedSource> sources=RuleUtils.createGroupsFromSourcePaths(resolver.deprecatedPathFunction(),input,ImmutableSortedSet.<SourcePath>of(),ImmutableSortedSet.<SourcePath>of(),ImmutableSortedSet.<SourcePath>of());
  assertEquals(ImmutableList.of(GroupedSource.ofSourceGroup("Group1",Paths.get("Group1"),ImmutableList.of(GroupedSource.ofSourceWithFlags(SourceWithFlags.of(new FakeSourcePath("Group1/bar.m"),ImmutableList.of("-Wall"))),GroupedSource.ofSourceWithFlags(SourceWithFlags.of(new FakeSourcePath("Group1/foo.m"))))),GroupedSource.ofSourceGroup("Group2",Paths.get("Group2"),ImmutableList.of(GroupedSource.ofSourceWithFlags(SourceWithFlags.of(new FakeSourcePath("Group2/baz.m"))),GroupedSource.ofSourceWithFlags(SourceWithFlags.of(new FakeSourcePath("Group2/blech.m"),ImmutableList.of("-fobjc-arc")))))),sources);
}
