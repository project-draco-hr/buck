{
  ImmutableSortedSet<BuildRule> finalDeps;
  Optional<ComputeExopackageDepsAbi> computeExopackageDepsAbi;
  if (!exopackage) {
    finalDeps=getTotalDeps();
    computeExopackageDepsAbi=Optional.absent();
  }
 else {
    BuildTarget buildTargetForAbiCalculation=createBuildTargetWithFlavor(CALCULATE_ABI_FLAVOR);
    BuildRule abiCalculatorRule=ruleResolver.buildAndAddToIndex(ComputeExopackageDepsAbi.newBuildableBuilder(buildRuleBuilderParams,buildTargetForAbiCalculation,getTotalDeps(),androidResourceDepsFinder,aaptEnhancementResult.getUberRDotJava(),aaptEnhancementResult.getAaptPackageResources(),dexEnhancementResult.getPreDexMerge(),keystore));
    finalDeps=ImmutableSortedSet.of(abiCalculatorRule);
    computeExopackageDepsAbi=Optional.of((ComputeExopackageDepsAbi)abiCalculatorRule.getBuildable());
  }
  return new AbiEnhancementResult(finalDeps,computeExopackageDepsAbi);
}
