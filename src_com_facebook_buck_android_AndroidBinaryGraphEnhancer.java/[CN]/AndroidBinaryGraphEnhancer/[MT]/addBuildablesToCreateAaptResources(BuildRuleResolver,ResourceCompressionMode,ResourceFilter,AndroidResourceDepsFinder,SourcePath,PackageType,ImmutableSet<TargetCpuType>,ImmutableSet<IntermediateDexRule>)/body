{
  BuildTarget originalBuildTarget=originalParams.getBuildTarget();
  BuildTarget buildTargetForResources=createBuildTargetWithFlavor(UBER_R_DOT_JAVA_FLAVOR);
  BuildRule uberRDotJavaBuildRule=ruleResolver.buildAndAddToIndex(UberRDotJavaBuildable.newUberRDotJavaBuildableBuilder(buildRuleBuilderParams).setBuildTarget(buildTargetForResources).setAllParams(buildTargetForResources,resourceCompressionMode,resourceFilter,androidResourceDepsFinder));
  UberRDotJavaBuildable uberRDotJavaBuildable=(UberRDotJavaBuildable)uberRDotJavaBuildRule.getBuildable();
  BuildTarget buildTargetForAapt=createBuildTargetWithFlavor(AAPT_PACKAGE_FLAVOR);
  BuildRule aaptPackageResourcesBuildRule=ruleResolver.buildAndAddToIndex(AaptPackageResources.newAaptPackageResourcesBuildableBuilder(buildRuleBuilderParams).setBuildTarget(buildTargetForAapt).setAllParams(manifest,uberRDotJavaBuildable,androidResourceDepsFinder.getAndroidTransitiveDependencies().nativeTargetsWithAssets,packageType,cpuFilters));
  AaptPackageResources aaptPackageResources=(AaptPackageResources)aaptPackageResourcesBuildRule.getBuildable();
  ImmutableSortedSet<BuildRule> totalDeps=ImmutableSortedSet.<BuildRule>naturalOrder().addAll(originalDeps).addAll(preDexDeps).add(uberRDotJavaBuildRule).add(aaptPackageResourcesBuildRule).build();
  BuildRuleParams buildRuleParams=new BuildRuleParams(originalBuildTarget,totalDeps,originalParams.getVisibilityPatterns(),originalParams.getPathRelativizer(),originalParams.getRuleKeyBuilderFactory());
  return new Result(buildRuleParams,uberRDotJavaBuildable,aaptPackageResources);
}
