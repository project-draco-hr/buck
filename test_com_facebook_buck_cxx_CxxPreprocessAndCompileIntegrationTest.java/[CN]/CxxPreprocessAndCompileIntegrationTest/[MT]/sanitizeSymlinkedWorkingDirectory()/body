{
  TemporaryFolder folder=new TemporaryFolder();
  folder.create();
  ProjectFilesystem filesystem=new ProjectFilesystem(folder.getRoot().toPath());
  Path symlinkedRoot=folder.getRoot().toPath().resolve("symlinked-root");
  java.nio.file.Files.createSymbolicLink(symlinkedRoot,tmp.getRootPath());
  BuildTarget target=BuildTargetFactory.newInstance("//:simple#default,static");
  workspace.runBuckCommandWithEnvironmentOverridesAndContext(tmp.getRootPath(),Optional.<NGContext>absent(),ImmutableMap.<String,String>of("PWD",symlinkedRoot.toString()),"build",target.getFullyQualifiedName()).assertSuccess();
  Path lib=workspace.getPath(BuildTargets.getGenPath(filesystem,target,"%s/libsimple.a"));
  String contents=Files.asByteSource(lib.toFile()).asCharSource(Charsets.ISO_8859_1).read();
  assertFalse(lib.toString(),contents.contains(tmp.getRootPath().toString()));
  assertFalse(lib.toString(),contents.contains(symlinkedRoot.toString()));
  folder.delete();
}
