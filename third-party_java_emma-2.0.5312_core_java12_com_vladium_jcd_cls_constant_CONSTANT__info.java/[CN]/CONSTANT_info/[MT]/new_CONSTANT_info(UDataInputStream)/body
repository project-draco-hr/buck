{
  byte tag=bytes.readByte();
switch (tag) {
case CONSTANT_Utf8_info.TAG:
    return new CONSTANT_Utf8_info(bytes);
case CONSTANT_Integer_info.TAG:
  return new CONSTANT_Integer_info(bytes);
case CONSTANT_Float_info.TAG:
return new CONSTANT_Float_info(bytes);
case CONSTANT_Long_info.TAG:
return new CONSTANT_Long_info(bytes);
case CONSTANT_Double_info.TAG:
return new CONSTANT_Double_info(bytes);
case CONSTANT_Class_info.TAG:
return new CONSTANT_Class_info(bytes);
case CONSTANT_String_info.TAG:
return new CONSTANT_String_info(bytes);
case CONSTANT_Fieldref_info.TAG:
return new CONSTANT_Fieldref_info(bytes);
case CONSTANT_Methodref_info.TAG:
return new CONSTANT_Methodref_info(bytes);
case CONSTANT_InterfaceMethodref_info.TAG:
return new CONSTANT_InterfaceMethodref_info(bytes);
case CONSTANT_NameAndType_info.TAG:
return new CONSTANT_NameAndType_info(bytes);
default :
throw new IllegalStateException("CONSTANT_info: invalid tag value [" + tag + ']');
}
}
