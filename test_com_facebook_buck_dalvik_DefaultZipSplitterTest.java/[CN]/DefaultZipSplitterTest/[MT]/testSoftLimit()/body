{
  DefaultZipSplitter.splitZip(new ProjectFilesystem(tmpDir.getRoot().toPath()),FluentIterable.from(testInZips).transform(new Function<File,Path>(){
    @Override public Path apply(    File file){
      return file.toPath();
    }
  }
).toSet(),outPrimary,tmpDir.getRoot(),secondaryPattern,8,12,processor,ZipSplitter.DexSplitStrategy.MAXIMIZE_PRIMARY_DEX_SIZE,ZipSplitter.CanaryStrategy.DONT_INCLUDE_CANARIES,tmpDir.newFolder("report")).execute();
  assertTrue(primaryZipContains("primary-a-1"));
  assertTrue(primaryZipContains("primary-a-2"));
  assertTrue(primaryZipContains("primary-a-3"));
  assertTrue(nthSecondaryZipContains(1,"secondary-a-1"));
  assertTrue(nthSecondaryZipContains(1,"secondary-a-2"));
  assertTrue(nthSecondaryZipContains(1,"secondary-a-3"));
  assertTrue(nthSecondaryZipContains(2,"secondary-b-1"));
  assertTrue(nthSecondaryZipContains(2,"secondary-b-2"));
  assertTrue(nthSecondaryZipContains(3,"secondary-c-1"));
  assertTrue(nthSecondaryZipContains(3,"secondary-c-2"));
  assertTrue(nthSecondaryZipContains(3,"secondary-c-3"));
}
