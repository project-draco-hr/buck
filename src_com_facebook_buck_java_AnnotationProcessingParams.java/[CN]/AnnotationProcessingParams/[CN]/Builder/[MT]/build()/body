{
  if (names.isEmpty() && rules.isEmpty() && parameters.isEmpty()) {
    return EMPTY;
  }
  Set<Path> searchPathElements=Sets.newHashSet();
  for (  BuildRule rule : this.rules) {
    if (rule.getClass().isAnnotationPresent(BuildsAnnotationProcessor.class)) {
      Path pathToOutput=rule.getPathToOutputFile();
      if (pathToOutput != null) {
        searchPathElements.add(pathToOutput);
      }
    }
 else     if (rule instanceof HasClasspathEntries) {
      searchPathElements.addAll(((HasClasspathEntries)rule).getTransitiveClasspathEntries().values());
    }
 else {
      throw new HumanReadableException("%1$s: Error adding '%2$s' to annotation_processing_deps: " + "must refer only to prebuilt jar, java binary, or java library targets.",ownerTarget,rule.getFullyQualifiedName());
    }
  }
  return new AnnotationProcessingParams(ownerTarget,filesystem,searchPathElements,names,parameters,ImmutableSortedSet.copyOf(this.rules),processOnly);
}
