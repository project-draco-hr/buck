{
  if (DEBUG) {
    System.err.printf("%04x start %s\n",address,startedLocal);
  }
  int regNum=startedLocal.getReg();
  startedLocal=filterSpec(startedLocal);
  aboutToProcess(address,regNum);
  RegisterSpec existingLocal=regs.get(regNum);
  if (startedLocal.equalsUsingSimpleType(existingLocal)) {
    return;
  }
  RegisterSpec movedLocal=regs.findMatchingLocal(startedLocal);
  if (movedLocal != null) {
    addOrUpdateEnd(address,Disposition.END_MOVED,movedLocal);
  }
  int endAt=endIndices[regNum];
  if (existingLocal != null) {
    add(address,Disposition.END_REPLACED,existingLocal);
  }
 else   if (endAt >= 0) {
    Entry endEntry=result.get(endAt);
    if (endEntry.getAddress() == address) {
      if (endEntry.matches(startedLocal)) {
        result.set(endAt,null);
        nullResultCount++;
        regs.put(startedLocal);
        endIndices[regNum]=-1;
        return;
      }
 else {
        endEntry=endEntry.withDisposition(Disposition.END_REPLACED);
        result.set(endAt,endEntry);
      }
    }
  }
  if (regNum > 0) {
    RegisterSpec justBelow=regs.get(regNum - 1);
    if ((justBelow != null) && justBelow.isCategory2()) {
      addOrUpdateEnd(address,Disposition.END_CLOBBERED_BY_NEXT,justBelow);
    }
  }
  if (startedLocal.isCategory2()) {
    RegisterSpec justAbove=regs.get(regNum + 1);
    if (justAbove != null) {
      addOrUpdateEnd(address,Disposition.END_CLOBBERED_BY_PREV,justAbove);
    }
  }
  add(address,Disposition.START,startedLocal);
}
