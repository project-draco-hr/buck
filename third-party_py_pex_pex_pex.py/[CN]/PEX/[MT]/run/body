def run(self, args=(), with_chroot=False, blocking=True, setsid=False, **kw):
    "Run the PythonEnvironment in an interpreter in a subprocess.\n\n    :keyword args: Additional arguments to be passed to the application being invoked by the\n      environment.\n    :keyword with_chroot: Run with cwd set to the environment's working directory.\n    :keyword blocking: If true, return the return code of the subprocess.\n      If false, return the Popen object of the invoked subprocess.\n    :keyword setsid: If true, run the PEX in a separate operating system session.\n\n    Remaining keyword arguments are passed directly to subprocess.Popen.\n    "
    self.clean_environment()
    cmdline = self.cmdline(args)
    TRACER.log(('PEX.run invoking %s' % ' '.join(cmdline)))
    process = subprocess.Popen(cmdline, cwd=(self._pex if with_chroot else os.getcwd()), preexec_fn=(os.setsid if setsid else None), **kw)
    return (process.wait() if blocking else process)
