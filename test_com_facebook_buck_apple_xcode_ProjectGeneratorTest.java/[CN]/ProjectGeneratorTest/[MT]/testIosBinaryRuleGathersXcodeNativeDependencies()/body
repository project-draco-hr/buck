{
  BuildRule fooRule=createBuildRuleWithDefaults(BuildTarget.builder("//external","extFoo").build(),ImmutableSortedSet.<BuildRule>of(),xcodeNativeDescription);
  BuildRule barRule=createBuildRuleWithDefaults(BuildTarget.builder("//external","extBar").build(),ImmutableSortedSet.of(fooRule),xcodeNativeDescription);
  BuildRule binaryRule=createBuildRuleWithDefaults(BuildTarget.builder("//foo","foo").build(),ImmutableSortedSet.of(barRule),iosBinaryDescription);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(fooRule,barRule,binaryRule),ImmutableSet.of(binaryRule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXTarget target=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:foo");
  ProjectGeneratorTestUtils.assertHasSingletonFrameworksPhaseWithFrameworkEntries(target,ImmutableList.of("$BUILT_PRODUCTS_DIR/libextFoo.a","$BUILT_PRODUCTS_DIR/libextBar.a"));
}
