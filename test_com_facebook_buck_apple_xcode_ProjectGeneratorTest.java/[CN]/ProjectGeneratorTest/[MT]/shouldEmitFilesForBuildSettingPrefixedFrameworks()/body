{
  BuildRule rule=createBuildRuleWithDefaults(BuildTarget.builder("//foo","rule").setFlavor(AppleLibraryDescription.DYNAMIC_LIBRARY).build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription,new Function<AppleNativeTargetDescriptionArg,AppleNativeTargetDescriptionArg>(){
    @Override public AppleNativeTargetDescriptionArg apply(    AppleNativeTargetDescriptionArg input){
      input.frameworks=ImmutableSortedSet.of("$BUILT_PRODUCTS_DIR/libfoo.a","$SDKROOT/libfoo.a","$SOURCE_ROOT/libfoo.a");
      return input;
    }
  }
);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(rule),ImmutableSet.of(rule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXProject generatedProject=projectGenerator.getGeneratedProject();
  PBXTarget target=assertTargetExistsAndReturnTarget(generatedProject,"//foo:rule#dynamic");
  assertHasSingletonFrameworksPhaseWithFrameworkEntries(target,ImmutableList.of("$BUILT_PRODUCTS_DIR/libfoo.a","$SDKROOT/libfoo.a","$SOURCE_ROOT/libfoo.a"));
}
