{
  BuildTarget buildTarget=BuildTarget.builder("//foo","rule").setFlavor(AppleLibraryDescription.DYNAMIC_LIBRARY).build();
  TargetNode<?> node=AppleLibraryBuilder.createBuilder(buildTarget).setFrameworks(Optional.of(ImmutableSortedSet.of("$BUILT_PRODUCTS_DIR/libfoo.a","$SDKROOT/libfoo.a","$SOURCE_ROOT/libfoo.a"))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.<TargetNode<?>>of(node));
  projectGenerator.createXcodeProjects();
  PBXProject generatedProject=projectGenerator.getGeneratedProject();
  PBXTarget target=assertTargetExistsAndReturnTarget(generatedProject,"//foo:rule#dynamic");
  assertHasSingletonFrameworksPhaseWithFrameworkEntries(target,ImmutableList.of("$BUILT_PRODUCTS_DIR/libfoo.a","$SDKROOT/libfoo.a","$SOURCE_ROOT/libfoo.a"));
}
