{
  BuildRule modelRule=createBuildRuleWithDefaults(new BuildTarget("//foo","model"),ImmutableSortedSet.<BuildRule>of(),coreDataModelDescription,new Function<CoreDataModelDescription.Arg,CoreDataModelDescription.Arg>(){
    @Override public CoreDataModelDescription.Arg apply(    CoreDataModelDescription.Arg args){
      args.path=new TestSourcePath("foo.xcdatamodel").asReference();
      return args;
    }
  }
);
  BuildRule libraryRule=createBuildRuleWithDefaults(new BuildTarget("//foo","lib"),ImmutableSortedSet.of(modelRule),iosLibraryDescription);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(libraryRule),ImmutableSet.of(libraryRule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXGroup targetGroup=project.getMainGroup().getOrCreateChildGroupByName(libraryRule.getFullyQualifiedName());
  PBXGroup resourcesGroup=targetGroup.getOrCreateChildGroupByName("Resources");
  assertThat(resourcesGroup.getChildren(),hasSize(1));
  PBXFileReference modelReference=(PBXFileReference)Iterables.get(resourcesGroup.getChildren(),0);
  assertEquals("foo.xcdatamodel",modelReference.getName());
}
