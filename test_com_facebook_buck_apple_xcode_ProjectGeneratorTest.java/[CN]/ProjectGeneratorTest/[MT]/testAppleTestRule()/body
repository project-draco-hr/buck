{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildRule dynamicLibraryDep=createBuildRuleWithDefaults(BuildTarget.builder("//dep","dynamic").setFlavor(AppleLibraryDescription.DYNAMIC_LIBRARY).build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription,resolver);
  resolver.addToIndex(dynamicLibraryDep);
  BuildRuleParams xctestParams=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","xctest").build()).setDeps(ImmutableSortedSet.of(dynamicLibraryDep)).setType(AppleBundleDescription.TYPE).build();
  AppleBundleDescription.Arg xctestArg=appleBundleDescription.createUnpopulatedConstructorArg();
  xctestArg.infoPlist=Optional.<SourcePath>of(new TestSourcePath("Info.plist"));
  xctestArg.binary=dynamicLibraryDep.getBuildTarget();
  xctestArg.extension=Either.ofLeft(AppleBundleExtension.XCTEST);
  xctestArg.deps=Optional.absent();
  BuildRule xctestRule=appleBundleDescription.createBuildRule(xctestParams,resolver,xctestArg);
  resolver.addToIndex(xctestRule);
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","test").build()).setDeps(ImmutableSortedSet.of(xctestRule)).setType(AppleTestDescription.TYPE).build();
  AppleTestDescription.Arg arg=appleTestDescription.createUnpopulatedConstructorArg();
  arg.testBundle=xctestRule.getBuildTarget();
  arg.contacts=Optional.of(ImmutableSortedSet.<String>of());
  arg.labels=Optional.of(ImmutableSortedSet.<Label>of());
  arg.deps=Optional.of(ImmutableSortedSet.of(xctestRule.getBuildTarget()));
  arg.sourceUnderTest=Optional.of(ImmutableSortedSet.<BuildTarget>of());
  BuildRule rule=appleTestDescription.createBuildRule(params,resolver,arg);
  resolver.addToIndex(rule);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(rule),ImmutableSet.of(rule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXTarget target=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:xctest");
  assertEquals(target.getProductType(),PBXTarget.ProductType.UNIT_TEST);
  assertThat(target.isa(),equalTo("PBXNativeTarget"));
  PBXFileReference productReference=target.getProductReference();
  assertEquals("xctest.xctest",productReference.getName());
}
