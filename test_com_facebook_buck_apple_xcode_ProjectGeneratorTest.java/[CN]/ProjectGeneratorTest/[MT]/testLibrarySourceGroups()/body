{
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","lib").build()).setType(AppleLibraryDescription.TYPE).build();
  AppleNativeTargetDescriptionArg arg=appleLibraryDescription.createUnpopulatedConstructorArg();
  arg.configs=Optional.of(ImmutableMap.of("Debug",ImmutableList.<Either<SourcePath,ImmutableMap<String,String>>>of()));
  arg.srcs=Optional.of(ImmutableList.of(AppleSource.ofSourceGroup(new Pair<>("Group1",ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("foo.m")),AppleSource.ofSourcePathWithFlags(new Pair<SourcePath,String>(new TestSourcePath("bar.m"),"-Wall"))))),AppleSource.ofSourceGroup(new Pair<>("Group2",ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("baz.m")),AppleSource.ofSourcePathWithFlags(new Pair<SourcePath,String>(new TestSourcePath("blech.m"),"-fobjc-arc")))))));
  arg.frameworks=Optional.of(ImmutableSortedSet.<String>of());
  arg.deps=Optional.absent();
  arg.gid=Optional.absent();
  arg.headerPathPrefix=Optional.absent();
  arg.useBuckHeaderMaps=Optional.of(false);
  BuildRule rule=appleLibraryDescription.createBuildRule(params,new BuildRuleResolver(),arg);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(rule),ImmutableSet.of(rule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXGroup targetGroup=project.getMainGroup().getOrCreateChildGroupByName(rule.getFullyQualifiedName());
  PBXGroup sourcesGroup=targetGroup.getOrCreateChildGroupByName("Sources");
  assertThat(sourcesGroup.getChildren(),hasSize(2));
  PBXGroup group1=(PBXGroup)Iterables.get(sourcesGroup.getChildren(),0);
  assertEquals("Group1",group1.getName());
  assertThat(group1.getChildren(),hasSize(2));
  PBXFileReference fileRefFoo=(PBXFileReference)Iterables.get(group1.getChildren(),0);
  assertEquals("foo.m",fileRefFoo.getName());
  PBXFileReference fileRefBar=(PBXFileReference)Iterables.get(group1.getChildren(),1);
  assertEquals("bar.m",fileRefBar.getName());
  PBXGroup group2=(PBXGroup)Iterables.get(sourcesGroup.getChildren(),1);
  assertEquals("Group2",group2.getName());
  assertThat(group2.getChildren(),hasSize(2));
  PBXFileReference fileRefBaz=(PBXFileReference)Iterables.get(group2.getChildren(),0);
  assertEquals("baz.m",fileRefBaz.getName());
  PBXFileReference fileRefBlech=(PBXFileReference)Iterables.get(group2.getChildren(),1);
  assertEquals("blech.m",fileRefBlech.getName());
}
