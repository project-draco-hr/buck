{
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","lib").build()).setType(AppleLibraryDescription.TYPE).build();
  AppleNativeTargetDescriptionArg arg=createDescriptionArgWithDefaults(appleLibraryDescription);
  arg.configs=Optional.of(ImmutableSortedMap.of("Debug",new XcodeRuleConfiguration(ImmutableList.<XcodeRuleConfigurationLayer>of())));
  arg.srcs=Optional.of(ImmutableList.of(AppleSource.ofSourceGroup(new Pair<>("HeaderGroup1",ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("foo.h")),AppleSource.ofSourcePathWithFlags(new Pair<SourcePath,String>(new TestSourcePath("bar.h"),"public")))))));
  arg.useBuckHeaderMaps=Optional.of(false);
  BuildRule rule=appleLibraryDescription.createBuildRule(params,new BuildRuleResolver(),arg);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(rule),ImmutableSet.of(rule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  List<Path> headerMaps=projectGenerator.getGeneratedHeaderMaps();
  assertThat(headerMaps,hasSize(0));
}
