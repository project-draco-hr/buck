{
  BuildTarget buildTarget=BuildTarget.builder("//foo","lib").build();
  TargetNode<?> node=AppleLibraryBuilder.createBuilder(buildTarget).setConfigs(Optional.of(ImmutableSortedMap.of("Debug",ImmutableMap.of("CUSTOM_SETTING","VALUE")))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.<TargetNode<?>>of(node),ImmutableSet.<ProjectGenerator.Option>of());
  projectGenerator.createXcodeProjects();
  PBXTarget target=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:lib");
  assertThat(target.isa(),equalTo("PBXNativeTarget"));
  assertThat(target.getProductType(),equalTo(PBXTarget.ProductType.STATIC_LIBRARY));
  assertHasConfigurations(target,"Debug");
  XCBuildConfiguration configuration=target.getBuildConfigurationList().getBuildConfigurationsByName().asMap().get("Debug");
  assertEquals(configuration.getBuildSettings().count(),0);
  PBXFileReference xcconfigReference=configuration.getBaseConfigurationReference();
  assertEquals(xcconfigReference.getPath(),"../buck-out/gen/foo/lib-Debug.xcconfig");
  ImmutableMap<String,String> settings=getBuildSettings(buildTarget,target,"Debug");
  assertEquals("$SYMROOT/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME",settings.get("BUILT_PRODUCTS_DIR"));
  assertEquals("$BUILT_PRODUCTS_DIR/F4XWM33PHJWGSYQ",settings.get("CONFIGURATION_BUILD_DIR"));
  assertEquals("VALUE",settings.get("CUSTOM_SETTING"));
}
