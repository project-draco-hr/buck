{
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","lib").build()).setType(AppleLibraryDescription.TYPE).build();
  AppleNativeTargetDescriptionArg arg=appleLibraryDescription.createUnpopulatedConstructorArg();
  arg.configs=ImmutableMap.of();
  arg.srcs=ImmutableList.of();
  arg.frameworks=ImmutableSortedSet.of();
  arg.deps=Optional.absent();
  arg.gid=Optional.of("D00D64738");
  arg.headerPathPrefix=Optional.absent();
  arg.useBuckHeaderMaps=Optional.absent();
  BuildRule rule=appleLibraryDescription.createBuildRule(params,new BuildRuleResolver(),arg);
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(rule),ImmutableSet.of(rule.getBuildTarget()));
  projectGenerator.createXcodeProjects();
  PBXTarget target=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:lib");
  assertThat(target.getGlobalID(),equalTo("D00D64738"));
}
