{
  if ((rhs == null) || rhs.isEmpty() || (rhs == this))   return this;
 else {
    final CoverageData rhscdata=(CoverageData)rhs;
    final Map rhscoverageData=rhscdata.m_coverageMap;
    for (Iterator entries=rhscoverageData.entrySet().iterator(); entries.hasNext(); ) {
      final Map.Entry entry=(Map.Entry)entries.next();
      final String classVMName=(String)entry.getKey();
      final DataHolder rhsdata=(DataHolder)entry.getValue();
      final DataHolder data=(DataHolder)m_coverageMap.get(classVMName);
      if (data == null)       m_coverageMap.put(classVMName,rhsdata);
 else {
        if (rhsdata.m_stamp != data.m_stamp)         m_coverageMap.put(classVMName,rhsdata);
 else {
          final boolean[][] rhscoverage=rhsdata.m_coverage;
          final boolean[][] coverage=data.m_coverage;
          if ($assert.ENABLED)           $assert.ASSERT(coverage.length == rhscoverage.length,"coverage.length [" + coverage.length + "] != rhscoverage.length ["+ rhscoverage.length+ "]");
          for (int m=0, mLimit=coverage.length; m < mLimit; ++m) {
            final boolean[] rhsmcoverage=rhscoverage[m];
            final boolean[] mcoverage=coverage[m];
            if (mcoverage == null) {
              if ($assert.ENABLED)               $assert.ASSERT(rhsmcoverage == null,"mcoverage == null but rhsmcoverage != null");
            }
 else {
              if ($assert.ENABLED)               $assert.ASSERT(rhsmcoverage != null,"mcoverage != null but rhsmcoverage == null");
              if ($assert.ENABLED)               $assert.ASSERT(mcoverage.length == rhsmcoverage.length,"mcoverage.length [" + mcoverage.length + "] != rhsmcoverage.length ["+ rhsmcoverage.length+ "]");
              for (int b=0, bLimit=mcoverage.length; b < bLimit; ++b) {
                if (rhsmcoverage[b])                 mcoverage[b]=true;
              }
            }
          }
        }
      }
    }
    return this;
  }
}
