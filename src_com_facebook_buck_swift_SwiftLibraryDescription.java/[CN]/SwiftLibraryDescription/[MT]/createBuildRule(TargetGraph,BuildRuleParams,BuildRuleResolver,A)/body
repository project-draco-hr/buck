{
  BuildTarget buildTarget=params.getBuildTarget();
  Optional<Map.Entry<Flavor,CxxPlatform>> platform=cxxPlatformFlavorDomain.getFlavorAndValue(buildTarget);
  if (platform.isPresent()) {
    LOG.debug("Build target %s, platform %s",buildTarget,platform);
    return SwiftDescriptions.createSwiftModule(cxxPlatformFlavorDomain,defaultCxxPlatform,appleCxxPlatformFlavorDomain,targetGraph,params,resolver,platform.get().getValue(),args.moduleName.or(buildTarget.getShortName()),args.srcs.get(),args.compilerFlags.get(),args.frameworks.get(),args.libraries.get(),args.enableObjcInterop.or(true));
  }
  return new SwiftLibrary(params,resolver,new SourcePathResolver(resolver),ImmutableList.<BuildRule>of(),args.frameworks.get(),args.libraries.get(),appleCxxPlatformFlavorDomain);
}
