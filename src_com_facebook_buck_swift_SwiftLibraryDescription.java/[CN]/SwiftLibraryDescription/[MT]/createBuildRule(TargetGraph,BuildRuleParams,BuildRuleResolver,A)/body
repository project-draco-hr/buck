{
  BuildTarget buildTarget=params.getBuildTarget();
  AppleCxxPlatform appleCxxPlatform=ApplePlatforms.getAppleCxxPlatformForBuildTarget(cxxPlatformFlavorDomain,defaultCxxPlatform,appleCxxPlatformFlavorDomain,buildTarget,Optional.<MultiarchFileInfo>absent());
  Optional<Tool> swiftCompiler=appleCxxPlatform.getSwift();
  if (!swiftCompiler.isPresent()) {
    throw new HumanReadableException("Platform %s is missing swift compiler",appleCxxPlatform);
  }
  CxxPlatform cxxPlatform=cxxPlatformFlavorDomain.getValue(buildTarget).or(defaultCxxPlatform);
  return new SwiftLibrary(swiftCompiler.get(),params,new SourcePathResolver(resolver),ImmutableList.<BuildRule>of(),args.frameworks.get(),args.libraries.get(),appleCxxPlatformFlavorDomain,BuildTargets.getGenPath(params.getProjectFilesystem(),buildTarget.withFlavors(cxxPlatform.getFlavor()),"%s"),args.moduleName.or(buildTarget.getShortName()),args.srcs.get(),args.enableObjcInterop,args.supportedPlatformsRegex);
}
