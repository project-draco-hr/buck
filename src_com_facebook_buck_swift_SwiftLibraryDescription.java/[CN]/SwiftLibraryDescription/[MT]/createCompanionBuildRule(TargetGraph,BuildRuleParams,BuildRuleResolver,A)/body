{
  BuildTarget buildTarget=params.getBuildTarget();
  if (!isSwiftTarget(buildTarget)) {
    boolean hasSwiftSource=!SwiftDescriptions.filterSwiftSources(new SourcePathResolver(resolver),args.srcs.get()).isEmpty();
    return hasSwiftSource ? Optional.of(resolver.requireRule(buildTarget.withAppendedFlavors(SWIFT_LIBRARY_FLAVOR))) : Optional.<BuildRule>absent();
  }
  final SwiftLibraryDescription.Arg delegateArgs=createUnpopulatedConstructorArg();
  SwiftDescriptions.populateSwiftLibraryDescriptionArg(new SourcePathResolver(resolver),delegateArgs,args,buildTarget);
  if (delegateArgs.srcs.isPresent() && !delegateArgs.srcs.get().isEmpty()) {
    return Optional.of(resolver.addToIndex(createBuildRule(targetGraph,params,resolver,delegateArgs)));
  }
 else {
    return Optional.absent();
  }
}
