{
  super(params,resolver);
  this.extension=extension.isLeft() ? extension.getLeft().toFileExtension() : extension.getRight();
  this.productName=productName;
  this.infoPlist=infoPlist;
  this.infoPlistSubstitutions=ImmutableMap.copyOf(infoPlistSubstitutions);
  this.binary=binary;
  this.destinations=destinations;
  this.resourceDirs=resourceDirs;
  this.resourceFiles=resourceFiles;
  this.dirsContainingResourceDirs=dirsContainingResourceDirs;
  this.extensionBundlePaths=extensionBundlePaths;
  this.resourceVariantFiles=resourceVariantFiles;
  this.frameworks=frameworks;
  this.ibtool=appleCxxPlatform.getIbtool();
  this.assetCatalog=assetCatalog;
  this.binaryName=getBinaryName(getBuildTarget(),this.productName);
  this.bundleRoot=getBundleRoot(getBuildTarget(),this.binaryName,this.extension);
  this.binaryPath=this.destinations.getExecutablesPath().resolve(this.binaryName);
  this.tests=ImmutableSortedSet.copyOf(tests);
  AppleSdk sdk=appleCxxPlatform.getAppleSdk();
  this.platformName=sdk.getApplePlatform().getName();
  this.sdkName=sdk.getName();
  this.sdkVersion=sdk.getVersion();
  this.minOSVersion=appleCxxPlatform.getMinVersion();
  this.platformBuildVersion=appleCxxPlatform.getBuildVersion();
  bundleBinaryPath=bundleRoot.resolve(binaryPath);
  hasBinary=binary.isPresent() && binary.get().getPathToOutput() != null;
  if (needCodeSign()) {
    this.provisioningProfileStore=provisioningProfileStore;
    this.codeSignIdentityStore=codeSignIdentityStore;
  }
 else {
    this.provisioningProfileStore=ProvisioningProfileStore.fromProvisioningProfiles(ImmutableList.<ProvisioningProfileMetadata>of());
    this.codeSignIdentityStore=CodeSignIdentityStore.fromIdentities(ImmutableList.<CodeSignIdentity>of());
  }
  this.codesignAllocatePath=appleCxxPlatform.getCodesignAllocate();
  this.debugFormat=debugFormat;
}
