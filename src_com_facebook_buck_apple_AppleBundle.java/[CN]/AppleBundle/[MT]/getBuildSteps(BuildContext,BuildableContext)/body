{
  ImmutableList.Builder<Step> stepsBuilder=ImmutableList.builder();
  Path metadataPath=bundleRoot.resolve(this.destinations.getMetadataPath());
  stepsBuilder.add(new MakeCleanDirectoryStep(bundleRoot),new MkdirStep(metadataPath),new WriteFileStep("APPLWRUN",metadataPath.resolve("PkgInfo")),new FindAndReplaceStep(getResolver().getPath(infoPlist.get()),metadataPath.resolve("Info.plist"),InfoPlistSubstitution.createVariableExpansionFunction(withDefaults(infoPlistSubstitutions,ImmutableMap.of("EXECUTABLE_NAME",binaryName,"PRODUCT_NAME",binaryName)))));
  if (binary.isPresent()) {
    stepsBuilder.add(new MkdirStep(bundleRoot.resolve(this.destinations.getExecutablesPath())));
    Path bundleBinaryPath=bundleRoot.resolve(binaryPath);
    stepsBuilder.add(CopyStep.forFile(binary.get().getPathToOutput(),bundleBinaryPath));
    stepsBuilder.add(new DsymStep(dsymutil.getCommandPrefix(getResolver()),bundleBinaryPath,bundleBinaryPath.resolveSibling(bundleBinaryPath.getFileName().toString() + ".dSYM")));
  }
  for (  SourcePath dir : resourceDirs) {
    Path bundleDestinationPath=bundleRoot.resolve(this.destinations.getResourcesPath());
    stepsBuilder.add(new MkdirStep(bundleDestinationPath));
    stepsBuilder.add(CopyStep.forDirectory(getResolver().getPath(dir),bundleDestinationPath,CopyStep.DirectoryMode.DIRECTORY_AND_CONTENTS));
  }
  for (  SourcePath file : resourceFiles) {
    Path bundleDestinationPath=bundleRoot.resolve(this.destinations.getResourcesPath());
    stepsBuilder.add(new MkdirStep(bundleDestinationPath));
    Path resolvedFilePath=getResolver().getPath(file);
    Path destinationPath=bundleDestinationPath.resolve(resolvedFilePath.getFileName());
    addResourceProcessingSteps(resolvedFilePath,destinationPath,stepsBuilder);
  }
  for (  AppleAssetCatalog bundledAssetCatalog : bundledAssetCatalogs) {
    Path bundleDir=bundledAssetCatalog.getOutputDir();
    stepsBuilder.add(CopyStep.forDirectory(bundleDir,bundleRoot,CopyStep.DirectoryMode.DIRECTORY_AND_CONTENTS));
  }
  if (mergedAssetCatalog.isPresent()) {
    Path bundleDir=mergedAssetCatalog.get().getOutputDir();
    stepsBuilder.add(CopyStep.forDirectory(bundleDir,bundleRoot,CopyStep.DirectoryMode.CONTENTS_ONLY));
  }
  buildableContext.recordArtifact(bundleRoot);
  return stepsBuilder.build();
}
