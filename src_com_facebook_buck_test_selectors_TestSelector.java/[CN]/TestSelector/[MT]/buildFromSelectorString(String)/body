{
  if (rawSelectorString == null || rawSelectorString.isEmpty()) {
    throw new RuntimeException("Cannot build from a null or empty string!");
  }
  boolean isInclusive=true;
  String remainder;
  if (rawSelectorString.charAt(0) == '!') {
    isInclusive=false;
    remainder=rawSelectorString.substring(1);
  }
 else {
    remainder=rawSelectorString;
  }
  Pattern classPattern=null;
  Pattern methodPattern=null;
  String[] parts=remainder.split("#",-1);
  try {
switch (parts.length) {
case 1:
      classPattern=Pattern.compile(parts[0]);
    break;
case 2:
  classPattern=getPatternOrNull(parts[0]);
methodPattern=getPatternOrNull(parts[1]);
break;
default :
throw new TestSelectorParseException(String.format("Test selector '%s' contains more than one '#'!",rawSelectorString));
}
}
 catch (PatternSyntaxException e) {
throw new TestSelectorParseException(String.format("Regular expression error in '%s': %s",rawSelectorString,e.getMessage()));
}
return new TestSelector(isInclusive,classPattern,methodPattern);
}
