{
  NewNativeTargetProjectMutator mutator=mutatorWithCommonDefaults();
  SourcePath foo=new TestSourcePath("HeaderGroup1/foo.h");
  SourcePath bar=new TestSourcePath("HeaderGroup1/bar.h");
  SourcePath baz=new TestSourcePath("HeaderGroup2/baz.h");
  mutator.setPublicHeaders(ImmutableSet.of(bar,baz));
  mutator.setPrivateHeaders(ImmutableSet.of(foo));
  NewNativeTargetProjectMutator.Result result=mutator.buildTargetAndAddToProject(generatedProject);
  PBXGroup sourcesGroup=result.targetGroup.getOrCreateChildGroupByName("Sources");
  assertThat(sourcesGroup.getChildren(),hasSize(2));
  PBXGroup group1=(PBXGroup)Iterables.get(sourcesGroup.getChildren(),0);
  assertEquals("HeaderGroup1",group1.getName());
  assertThat(group1.getChildren(),hasSize(2));
  PBXFileReference fileRefBar=(PBXFileReference)Iterables.get(group1.getChildren(),0);
  assertEquals("bar.h",fileRefBar.getName());
  PBXFileReference fileRefFoo=(PBXFileReference)Iterables.get(group1.getChildren(),1);
  assertEquals("foo.h",fileRefFoo.getName());
  PBXGroup group2=(PBXGroup)Iterables.get(sourcesGroup.getChildren(),1);
  assertEquals("HeaderGroup2",group2.getName());
  assertThat(group2.getChildren(),hasSize(1));
  PBXFileReference fileRefBaz=(PBXFileReference)Iterables.get(group2.getChildren(),0);
  assertEquals("baz.h",fileRefBaz.getName());
  PBXBuildPhase headersBuildPhase=Iterables.find(result.target.getBuildPhases(),new Predicate<PBXBuildPhase>(){
    @Override public boolean apply(    PBXBuildPhase input){
      return input instanceof PBXHeadersBuildPhase;
    }
  }
);
  PBXBuildFile barHeaderBuildFile=Iterables.get(headersBuildPhase.getFiles(),0);
  assertTrue("bar.h should have settings dictionary",barHeaderBuildFile.getSettings().isPresent());
  NSDictionary barBuildFileSettings=barHeaderBuildFile.getSettings().get();
  NSArray barAttributes=(NSArray)barBuildFileSettings.get("ATTRIBUTES");
  assertArrayEquals(new NSString[]{new NSString("Public")},barAttributes.getArray());
  PBXBuildFile fooHeaderBuildFile=Iterables.get(headersBuildPhase.getFiles(),1);
  assertFalse("foo.h should not have settings dictionary",fooHeaderBuildFile.getSettings().isPresent());
  PBXBuildFile bazHeaderBuildFile=Iterables.get(headersBuildPhase.getFiles(),2);
  assertTrue("baz.h should have settings dictionary",bazHeaderBuildFile.getSettings().isPresent());
  NSDictionary blechBuildFileSettings=bazHeaderBuildFile.getSettings().get();
  NSArray blechAttributes=(NSArray)blechBuildFileSettings.get("ATTRIBUTES");
  assertArrayEquals(new NSString[]{new NSString("Public")},blechAttributes.getArray());
}
