{
  NewNativeTargetProjectMutator mutator=mutatorWithCommonDefaults();
  BuildTarget depBuildTarget=BuildTarget.builder("//foo","dep").build();
  ProjectFilesystem filesystem=new AllExistingProjectFilesystem();
  ReactNativeBuckConfig buckConfig=new ReactNativeBuckConfig(new FakeBuckConfig(ImmutableMap.of("react-native",ImmutableMap.of("packager","react-native/packager.sh")),filesystem));
  TargetNode<?> reactNativeNode=IosReactNativeLibraryBuilder.builder(depBuildTarget,buckConfig).setBundleName("Apps/Foo/FooBundle.js").setEntryPath(new PathSourcePath(filesystem,Paths.get("js/FooApp.js"))).build();
  mutator.setPostBuildRunScriptPhases(ImmutableList.<TargetNode<?>>of(reactNativeNode));
  NewNativeTargetProjectMutator.Result result=mutator.buildTargetAndAddToProject(generatedProject);
  PBXShellScriptBuildPhase phase=getSingletonPhaseByType(result.target,PBXShellScriptBuildPhase.class);
  String shellScript=phase.getShellScript();
  assertThat(shellScript,startsWith("BASE_DIR=${CONFIGURATION_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}" + " && JS_OUT=${BASE_DIR}/Apps/Foo/FooBundle.js && SOURCE_MAP=${TEMP_DIR}/rn_source_map/" + "Apps/Foo/FooBundle.js.map && mkdir -p `dirname ${JS_OUT}` "+ "&& mkdir -p `dirname ${SOURCE_MAP}`"));
}
