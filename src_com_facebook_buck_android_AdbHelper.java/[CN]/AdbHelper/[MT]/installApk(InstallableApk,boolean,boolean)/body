{
  Optional<ExopackageInfo> exopackageInfo=installableApk.getExopackageInfo();
  if (exopackageInfo.isPresent()) {
    return new ExopackageInstaller(context,this,installableApk).install(quiet);
  }
  InstallEvent.Started started=InstallEvent.started(installableApk.getBuildTarget());
  if (!quiet) {
    getBuckEventBus().post(started);
  }
  final File apk=installableApk.getProjectFilesystem().resolve(installableApk.getApkPath()).toFile();
  boolean success=adbCall(new AdbHelper.AdbCallable(){
    @Override public boolean call(    IDevice device) throws Exception {
      return installApkOnDevice(device,apk,installViaSd,quiet);
    }
    @Override @SuppressForbidden public String toString(){
      return String.format("install apk %s",installableApk.getBuildTarget().toString());
    }
  }
,quiet);
  if (!quiet) {
    AdbHelper.tryToExtractPackageNameFromManifest(installableApk);
    getBuckEventBus().post(InstallEvent.finished(started,success,Optional.<Long>absent(),Optional.of(AdbHelper.tryToExtractPackageNameFromManifest(installableApk))));
  }
  return success;
}
