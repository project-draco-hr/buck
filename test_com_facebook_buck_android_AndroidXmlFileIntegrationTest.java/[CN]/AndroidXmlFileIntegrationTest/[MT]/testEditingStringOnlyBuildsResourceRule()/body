{
  String stringsXmlFileContents=workspace.getFileContents(PATH_TO_STRINGS_XML);
  stringsXmlFileContents=stringsXmlFileContents.replace("Hello","Bye");
  workspace.writeContentsToPath(stringsXmlFileContents,PATH_TO_STRINGS_XML);
  workspace.resetBuildLogFile();
  ProjectWorkspace.ProcessResult result=workspace.runBuckCommand("build",MAIN_BUILD_TARGET);
  result.assertSuccess();
  Map<BuildTarget,Optional<BuildRuleSuccess.Type>> successTypes=workspace.getBuildRuleSuccessTypes();
  assertEquals(BuildRuleSuccess.Type.MATCHING_DEPS_ABI_AND_RULE_KEY_NO_DEPS,successTypes.get(BuildTargetFactory.newInstance(MAIN_BUILD_TARGET)).get());
  assertEquals(BuildRuleSuccess.Type.MATCHING_DEPS_ABI_AND_RULE_KEY_NO_DEPS,successTypes.get(BuildTargetFactory.newInstance("//java/com/sample/lib:lib#dummy_r_dot_java")).get());
  assertEquals(BuildRuleSuccess.Type.MATCHING_DEPS_ABI_AND_RULE_KEY_NO_DEPS,successTypes.get(BuildTargetFactory.newInstance("//res/com/sample/top:top")).get());
  assertEquals(BuildRuleSuccess.Type.BUILT_LOCALLY,successTypes.get(BuildTargetFactory.newInstance("//res/com/sample/base:base")).get());
}
