def _is_accepted(self, target_name):
    if (target_name in self._accepted_targets):
        return True
    elif (target_name in self._rejected_targets):
        return False
    target_data = self._context.gen_target_data[target_name]
    target_type = target_data['buck.type']
    extension = None
    if self._process_output_extensions:
        extension = self._get_output_extension(target_data)
    probability = self._choice_probability_by_type_and_extension.get((target_type, extension), 0)
    chosen = (random.uniform(0, 1) < probability)
    if chosen:
        self._accepted_targets.add(target_name)
    else:
        self._rejected_targets.add(target_name)
    return chosen
