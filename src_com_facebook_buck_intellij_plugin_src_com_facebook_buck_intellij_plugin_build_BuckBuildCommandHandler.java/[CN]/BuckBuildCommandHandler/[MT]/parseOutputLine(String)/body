{
  for (  String ignored : IGNORED_OUTPUT_LINES) {
    if (line.startsWith(ignored)) {
      return false;
    }
  }
  Matcher matcher=BUILD_PROGRESS_PATTERN.matcher(line);
  if (matcher.matches()) {
    double finishedJob=Double.parseDouble(matcher.group(1));
    double totalJob=Double.parseDouble(matcher.group(2));
    BuckBuildManager.getInstance(project()).setProgress(finishedJob / totalJob);
    return false;
  }
  for (  Pattern errorPattern : ERROR_PATTERNS) {
    if (errorPattern.matcher(line).lookingAt()) {
      BuckToolWindowFactory.outputConsoleMessage(project(),line,ConsoleViewContentType.ERROR_OUTPUT);
      if (currentErrorMessage == null && line.startsWith(ERROR_PREFIX_FOR_MESSAGE)) {
        currentErrorMessage=line;
      }
      return true;
    }
  }
  for (  String successPrefix : SUCCESS_PREFIXES) {
    if (line.startsWith(successPrefix)) {
      BuckToolWindowFactory.outputConsoleMessage(project(),line,GREEN_OUTPUT);
      return false;
    }
  }
  Matcher compilerErrorMatcher=SOURCE_FILE_PATTERN.matcher(line);
  if (compilerErrorMatcher.matches()) {
    final String sourceFile=compilerErrorMatcher.group(1);
    final String lineNumber=compilerErrorMatcher.group(3);
    final String errorMessage=compilerErrorMatcher.group(4);
    String relativePath=sourceFile.replaceAll(project.getBasePath(),"");
    final VirtualFile virtualFile=pathToVirtualFile(relativePath);
    if (virtualFile == null) {
      BuckToolWindowFactory.outputConsoleMessage(project(),line,ConsoleViewContentType.ERROR_OUTPUT);
    }
 else {
      BuckToolWindowFactory.outputConsoleHyperlink(project(),relativePath + ":" + lineNumber,new HyperlinkInfo(){
        @Override public void navigate(        Project project){
          int lineInteger;
          try {
            lineInteger=Integer.parseInt(lineNumber) - 1;
          }
 catch (          NumberFormatException e) {
            lineInteger=0;
          }
          OpenSourceUtil.navigate(true,new OpenFileDescriptor(project,virtualFile,lineInteger,0));
        }
      }
);
      BuckToolWindowFactory.outputConsoleMessage(project(),errorMessage,ConsoleViewContentType.ERROR_OUTPUT);
    }
  }
 else {
    if (!line.trim().isEmpty()) {
      BuckToolWindowFactory.outputConsoleMessage(project(),line,ConsoleViewContentType.NORMAL_OUTPUT);
    }
  }
  return false;
}
