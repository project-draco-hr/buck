{
  if (that == null)   return false;
  boolean this_present_ruleKeys=true && this.isSetRuleKeys();
  boolean that_present_ruleKeys=true && that.isSetRuleKeys();
  if (this_present_ruleKeys || that_present_ruleKeys) {
    if (!(this_present_ruleKeys && that_present_ruleKeys))     return false;
    if (!this.ruleKeys.equals(that.ruleKeys))     return false;
  }
  boolean this_present_metadata=true && this.isSetMetadata();
  boolean that_present_metadata=true && that.isSetMetadata();
  if (this_present_metadata || that_present_metadata) {
    if (!(this_present_metadata && that_present_metadata))     return false;
    if (!this.metadata.equals(that.metadata))     return false;
  }
  boolean this_present_buildTarget=true && this.isSetBuildTarget();
  boolean that_present_buildTarget=true && that.isSetBuildTarget();
  if (this_present_buildTarget || that_present_buildTarget) {
    if (!(this_present_buildTarget && that_present_buildTarget))     return false;
    if (!this.buildTarget.equals(that.buildTarget))     return false;
  }
  boolean this_present_repository=true && this.isSetRepository();
  boolean that_present_repository=true && that.isSetRepository();
  if (this_present_repository || that_present_repository) {
    if (!(this_present_repository && that_present_repository))     return false;
    if (!this.repository.equals(that.repository))     return false;
  }
  boolean this_present_artifactPayloadCrc32=true && this.isSetArtifactPayloadCrc32();
  boolean that_present_artifactPayloadCrc32=true && that.isSetArtifactPayloadCrc32();
  if (this_present_artifactPayloadCrc32 || that_present_artifactPayloadCrc32) {
    if (!(this_present_artifactPayloadCrc32 && that_present_artifactPayloadCrc32))     return false;
    if (!this.artifactPayloadCrc32.equals(that.artifactPayloadCrc32))     return false;
  }
  boolean this_present_scheduleType=true && this.isSetScheduleType();
  boolean that_present_scheduleType=true && that.isSetScheduleType();
  if (this_present_scheduleType || that_present_scheduleType) {
    if (!(this_present_scheduleType && that_present_scheduleType))     return false;
    if (!this.scheduleType.equals(that.scheduleType))     return false;
  }
  return true;
}
