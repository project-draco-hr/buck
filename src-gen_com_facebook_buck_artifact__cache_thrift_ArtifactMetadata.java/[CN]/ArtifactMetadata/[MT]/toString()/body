{
  StringBuilder sb=new StringBuilder("ArtifactMetadata(");
  boolean first=true;
  if (isSetRuleKeys()) {
    sb.append("ruleKeys:");
    if (this.ruleKeys == null) {
      sb.append("null");
    }
 else {
      sb.append(this.ruleKeys);
    }
    first=false;
  }
  if (isSetMetadata()) {
    if (!first)     sb.append(", ");
    sb.append("metadata:");
    if (this.metadata == null) {
      sb.append("null");
    }
 else {
      sb.append(this.metadata);
    }
    first=false;
  }
  if (isSetBuildTarget()) {
    if (!first)     sb.append(", ");
    sb.append("buildTarget:");
    if (this.buildTarget == null) {
      sb.append("null");
    }
 else {
      sb.append(this.buildTarget);
    }
    first=false;
  }
  if (isSetRepository()) {
    if (!first)     sb.append(", ");
    sb.append("repository:");
    if (this.repository == null) {
      sb.append("null");
    }
 else {
      sb.append(this.repository);
    }
    first=false;
  }
  if (isSetArtifactPayloadCrc32()) {
    if (!first)     sb.append(", ");
    sb.append("artifactPayloadCrc32:");
    if (this.artifactPayloadCrc32 == null) {
      sb.append("null");
    }
 else {
      sb.append(this.artifactPayloadCrc32);
    }
    first=false;
  }
  if (isSetScheduleType()) {
    if (!first)     sb.append(", ");
    sb.append("scheduleType:");
    if (this.scheduleType == null) {
      sb.append("null");
    }
 else {
      sb.append(this.scheduleType);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
