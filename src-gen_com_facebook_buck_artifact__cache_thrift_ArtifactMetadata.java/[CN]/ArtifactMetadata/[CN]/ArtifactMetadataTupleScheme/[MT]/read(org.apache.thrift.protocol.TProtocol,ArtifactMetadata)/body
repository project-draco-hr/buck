{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list11=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.ruleKeys=new ArrayList<RuleKey>(_list11.size);
      RuleKey _elem12;
      for (int _i13=0; _i13 < _list11.size; ++_i13) {
        _elem12=new RuleKey();
        _elem12.read(iprot);
        struct.ruleKeys.add(_elem12);
      }
    }
    struct.setRuleKeysIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TMap _map14=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.metadata=new HashMap<String,String>(2 * _map14.size);
      String _key15;
      String _val16;
      for (int _i17=0; _i17 < _map14.size; ++_i17) {
        _key15=iprot.readString();
        _val16=iprot.readString();
        struct.metadata.put(_key15,_val16);
      }
    }
    struct.setMetadataIsSet(true);
  }
  if (incoming.get(2)) {
    struct.buildTarget=iprot.readString();
    struct.setBuildTargetIsSet(true);
  }
  if (incoming.get(3)) {
    struct.repository=iprot.readString();
    struct.setRepositoryIsSet(true);
  }
  if (incoming.get(4)) {
    struct.artifactPayloadCrc32=iprot.readString();
    struct.setArtifactPayloadCrc32IsSet(true);
  }
}
