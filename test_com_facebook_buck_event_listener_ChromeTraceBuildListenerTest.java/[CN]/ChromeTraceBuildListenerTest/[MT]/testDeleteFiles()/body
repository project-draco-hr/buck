{
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(tmpDir.getRoot().toPath());
  String tracePath=String.format("%s/build.trace",BuckConstant.BUCK_TRACE_DIR);
  File traceFile=new File(tmpDir.getRoot(),tracePath);
  projectFilesystem.createParentDirs(tracePath);
  traceFile.createNewFile();
  traceFile.setLastModified(0);
  for (int i=0; i < 10; ++i) {
    File oldResult=new File(tmpDir.getRoot(),String.format("%s/build.100%d.trace",BuckConstant.BUCK_TRACE_DIR,i));
    oldResult.createNewFile();
    oldResult.setLastModified(TimeUnit.SECONDS.toMillis(i));
  }
  ChromeTraceBuildListener listener=new ChromeTraceBuildListener(projectFilesystem,new FakeClock(1409702151000000000L),new ObjectMapper(),Locale.US,TimeZone.getTimeZone("America/Los_Angeles"),3,false);
  listener.deleteOldTraces();
  ImmutableList<String> files=FluentIterable.from(Arrays.asList(projectFilesystem.listFiles(BuckConstant.BUCK_TRACE_DIR))).transform(new Function<File,String>(){
    @Override public String apply(    File input){
      return input.getName();
    }
  }
).toList();
  assertEquals(4,files.size());
  assertEquals(ImmutableSortedSet.of("build.trace","build.1009.trace","build.1008.trace","build.1007.trace"),ImmutableSortedSet.copyOf(files));
}
