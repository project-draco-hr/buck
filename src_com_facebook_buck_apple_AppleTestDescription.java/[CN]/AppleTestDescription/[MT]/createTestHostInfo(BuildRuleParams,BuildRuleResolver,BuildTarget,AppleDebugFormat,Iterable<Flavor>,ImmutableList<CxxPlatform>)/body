{
  BuildRule rule=resolver.requireRule(BuildTarget.builder(testHostAppBuildTarget).addAllFlavors(additionalFlavors).addFlavors(debugFormat.getFlavor()).addFlavors(StripStyle.NON_GLOBAL_SYMBOLS.getFlavor()).build());
  if (!(rule instanceof AppleBundle)) {
    throw new HumanReadableException("Apple test rule '%s' has test_host_app '%s' not of type '%s'.",params.getBuildTarget(),testHostAppBuildTarget,AppleBundleDescription.TYPE);
  }
  AppleBundle testHostApp=(AppleBundle)rule;
  SourcePath testHostAppBinarySourcePath=new BuildTargetSourcePath(testHostApp.getBinaryBuildRule().getBuildTarget());
  ImmutableMap<BuildTarget,NativeLinkable> roots=NativeLinkables.getNativeLinkableRoots(testHostApp.getBinary().get().getDeps(),Predicates.alwaysTrue());
  ImmutableSet.Builder<BuildTarget> blacklistBuilder=ImmutableSet.builder();
  for (  CxxPlatform platform : cxxPlatforms) {
    blacklistBuilder.addAll(NativeLinkables.getTransitiveNativeLinkables(platform,roots.values()).keySet());
  }
  return TestHostInfo.of(testHostApp,testHostAppBinarySourcePath,blacklistBuilder.build());
}
