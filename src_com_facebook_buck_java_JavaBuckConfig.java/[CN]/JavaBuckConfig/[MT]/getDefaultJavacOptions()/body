{
  Optional<String> sourceLevel=delegate.getValue("java","source_level");
  Optional<String> targetLevel=delegate.getValue("java","target_level");
  Optional<String> extraArgumentsString=delegate.getValue("java","extra_arguments");
  ImmutableList<String> extraArguments=ImmutableList.copyOf(Splitter.on(Pattern.compile("[ ,]+")).omitEmptyStrings().split(extraArgumentsString.or("")));
  ImmutableMap<String,String> allEntries=delegate.getEntriesForSection("java");
  ImmutableMap.Builder<String,String> bootclasspaths=ImmutableMap.builder();
  for (  Map.Entry<String,String> entry : allEntries.entrySet()) {
    if (entry.getKey().startsWith("bootclasspath-")) {
      bootclasspaths.put(entry.getKey().substring("bootclasspath-".length()),entry.getValue());
    }
  }
  return JavacOptions.builderForUseInJavaBuckConfig().setJavacPath(getJavacPath()).setSourceLevel(sourceLevel.or(TARGETED_JAVA_VERSION)).setTargetLevel(targetLevel.or(TARGETED_JAVA_VERSION)).setBootclasspathMap(bootclasspaths.build()).setExtraArguments(extraArguments).build();
}
