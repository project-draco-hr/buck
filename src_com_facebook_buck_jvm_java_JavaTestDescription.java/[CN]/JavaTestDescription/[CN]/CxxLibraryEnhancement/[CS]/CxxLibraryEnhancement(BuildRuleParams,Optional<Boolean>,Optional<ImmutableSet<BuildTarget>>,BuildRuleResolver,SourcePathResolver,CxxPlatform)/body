{
  if (useCxxLibraries.or(false)) {
    SymlinkTree nativeLibsSymlinkTree=buildNativeLibsSymlinkTreeRule(params,pathResolver,cxxPlatform);
    Predicate<BuildRule> shouldInclude=Predicates.alwaysTrue();
    if (cxxLibraryWhitelist.isPresent() && !cxxLibraryWhitelist.get().isEmpty()) {
      shouldInclude=new Predicate<BuildRule>(){
        @Override public boolean apply(        BuildRule input){
          return cxxLibraryWhitelist.get().contains(input.getBuildTarget().withFlavors());
        }
      }
;
    }
    updatedParams=params.appendExtraDeps(ImmutableList.<BuildRule>builder().add(nativeLibsSymlinkTree).addAll(FluentIterable.from(pathResolver.filterBuildRuleInputs(nativeLibsSymlinkTree.getLinks().values())).filter(shouldInclude)).build());
    nativeLibsEnvironment=ImmutableMap.of(cxxPlatform.getLd().resolve(resolver).searchPathEnvVar(),nativeLibsSymlinkTree.getRoot().toString());
  }
 else {
    updatedParams=params;
    nativeLibsEnvironment=ImmutableMap.of();
  }
}
