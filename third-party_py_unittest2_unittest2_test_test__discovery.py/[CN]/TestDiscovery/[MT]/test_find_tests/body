def test_find_tests(self):
    loader = unittest2.TestLoader()
    original_listdir = os.listdir

    def restore_listdir():
        os.listdir = original_listdir
    original_isfile = os.path.isfile

    def restore_isfile():
        os.path.isfile = original_isfile
    original_isdir = os.path.isdir

    def restore_isdir():
        os.path.isdir = original_isdir
    path_lists = [['test1.py', 'test2.py', 'not_a_test.py', 'test_dir', 'test.foo', 'test-not-a-module.py', 'another_dir'], ['test3.py', 'test4.py']]
    os.listdir = (lambda path: path_lists.pop(0))
    self.addCleanup(restore_listdir)

    def isdir(path):
        return path.endswith('dir')
    os.path.isdir = isdir
    self.addCleanup(restore_isdir)

    def isfile(path):
        return ((not path.endswith('dir')) and (not ('another_dir' in path)))
    os.path.isfile = isfile
    self.addCleanup(restore_isfile)
    loader._get_module_from_name = (lambda path: (path + ' module'))
    loader.loadTestsFromModule = (lambda module: (module + ' tests'))
    top_level = os.path.abspath('/foo')
    loader._top_level_dir = top_level
    suite = list(loader._find_tests(top_level, 'test*.py'))
    expected = [(name + ' module tests') for name in ('test1', 'test2')]
    expected.extend([(('test_dir.%s' % name) + ' module tests') for name in ('test3', 'test4')])
    self.assertEqual(suite, expected)
