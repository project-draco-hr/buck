{
  PBXSourcesBuildPhase sourcesBuildPhase=ProjectGeneratorTestUtils.getSingletonPhaseByType(target,PBXSourcesBuildPhase.class);
  assertEquals("Sources build phase should have correct number of sources",sourcesAndFlags.size(),sourcesBuildPhase.getFiles().size());
  ImmutableMap.Builder<String,Optional<String>> absolutePathFlagMapBuilder=ImmutableMap.builder();
  for (  Map.Entry<String,Optional<String>> name : sourcesAndFlags.entrySet()) {
    absolutePathFlagMapBuilder.put(projectFilesystem.getRootPath().resolve(name.getKey()).toAbsolutePath().normalize().toString(),name.getValue());
  }
  ImmutableMap<String,Optional<String>> absolutePathFlagMap=absolutePathFlagMapBuilder.build();
  for (  PBXBuildFile file : sourcesBuildPhase.getFiles()) {
    String filePath=assertFileRefIsRelativeAndResolvePath(file.getFileRef());
    Optional<String> flags=absolutePathFlagMap.get(filePath);
    assertNotNull(String.format("Unexpected file ref '%s' found",filePath),flags);
    if (flags.isPresent()) {
      assertTrue("Build file should have settings dictionary",file.getSettings().isPresent());
      NSDictionary buildFileSettings=file.getSettings().get();
      NSString compilerFlags=(NSString)buildFileSettings.get("COMPILER_FLAGS");
      assertNotNull("Build file settings should have COMPILER_FLAGS entry",compilerFlags);
      assertEquals("Build file settings should be expected value",flags.get(),compilerFlags.getContent());
    }
 else {
      assertFalse("Build file should not have settings dictionary",file.getSettings().isPresent());
    }
  }
}
