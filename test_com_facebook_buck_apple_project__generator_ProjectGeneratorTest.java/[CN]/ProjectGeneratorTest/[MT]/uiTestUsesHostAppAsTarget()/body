{
  BuildTarget hostAppBinaryTarget=BuildTarget.builder(rootPath,"//foo","HostAppBinary").build();
  TargetNode<?> hostAppBinaryNode=AppleBinaryBuilder.createBuilder(hostAppBinaryTarget).build();
  BuildTarget hostAppTarget=BuildTarget.builder(rootPath,"//foo","HostApp").build();
  TargetNode<?> hostAppNode=AppleBundleBuilder.createBuilder(hostAppTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.APP)).setInfoPlist(new FakeSourcePath("Info.plist")).setBinary(hostAppBinaryTarget).build();
  BuildTarget testTarget=BuildTarget.builder(rootPath,"//foo","AppTest").build();
  TargetNode<?> testNode=AppleTestBuilder.createBuilder(testTarget).setConfigs(Optional.of(ImmutableSortedMap.of("Debug",ImmutableMap.<String,String>of()))).setInfoPlist(new FakeSourcePath("Info.plist")).setTestHostApp(Optional.of(hostAppTarget)).isUiTest(Optional.of(true)).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(hostAppBinaryNode,hostAppNode,testNode),ImmutableSet.<ProjectGenerator.Option>of());
  projectGenerator.createXcodeProjects();
  PBXTarget testPBXTarget=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:AppTest");
  assertEquals(testPBXTarget.getProductType(),ProductType.UI_TEST);
  ImmutableMap<String,String> settings=getBuildSettings(testTarget,testPBXTarget,"Debug");
  assertEquals(settings.get("TEST_TARGET_NAME"),"//foo:HostApp");
}
