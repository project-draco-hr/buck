{
  BuildTarget hostAppBinaryTarget=BuildTarget.builder(rootPath,"//foo","HostAppBinary").build();
  TargetNode<?> hostAppBinaryNode=AppleBinaryBuilder.createBuilder(hostAppBinaryTarget).build();
  BuildTarget hostAppTarget=BuildTarget.builder(rootPath,"//foo","HostApp").build();
  TargetNode<?> hostAppNode=AppleBundleBuilder.createBuilder(hostAppTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.APP)).setInfoPlist(new FakeSourcePath("Info.plist")).setBinary(hostAppBinaryTarget).build();
  BuildTarget testTarget=BuildTarget.builder(rootPath,"//foo","AppTest").build();
  TargetNode<?> testNode=AppleTestBuilder.createBuilder(testTarget).setConfigs(Optional.of(ImmutableSortedMap.of("Debug",ImmutableMap.<String,String>of()))).setExtension(AppleBundleExtension.XCTEST).setInfoPlist(new FakeSourcePath("Info.plist")).setTestHostApp(Optional.of(hostAppTarget)).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(hostAppBinaryNode,hostAppNode,testNode),ImmutableSet.<ProjectGenerator.Option>of());
  projectGenerator.createXcodeProjects();
  PBXTarget testPBXTarget=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:AppTest");
  assertThat(testPBXTarget.getBuildPhases().size(),Matchers.equalTo(0));
}
