{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  FakeFileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.<String,String>builder().put(AR.toString(),Strings.repeat("0",40)).put(RANLIB.toString(),Strings.repeat("1",40)).put("a.o",Strings.repeat("a",40)).put("b.o",Strings.repeat("b",40)).put("c.o",Strings.repeat("c",40)).put(Paths.get("different").toString(),Strings.repeat("d",40)).build());
  RuleKey defaultRuleKey=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver).build(Archive.from(target,params,pathResolver,DEFAULT_ARCHIVER,ImmutableList.<String>of(),DEFAULT_RANLIB,ImmutableList.<String>of(),Archive.Contents.NORMAL,DEFAULT_OUTPUT,DEFAULT_INPUTS));
  RuleKey archiverChange=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver).build(Archive.from(target,params,pathResolver,new GnuArchiver(new HashedFileTool(Paths.get("different"))),ImmutableList.<String>of(),DEFAULT_RANLIB,ImmutableList.<String>of(),Archive.Contents.NORMAL,DEFAULT_OUTPUT,DEFAULT_INPUTS));
  assertNotEquals(defaultRuleKey,archiverChange);
  RuleKey outputChange=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver).build(Archive.from(target,params,pathResolver,DEFAULT_ARCHIVER,ImmutableList.<String>of(),DEFAULT_RANLIB,ImmutableList.<String>of(),Archive.Contents.NORMAL,Paths.get("different"),DEFAULT_INPUTS));
  assertNotEquals(defaultRuleKey,outputChange);
  RuleKey inputChange=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver).build(Archive.from(target,params,pathResolver,DEFAULT_ARCHIVER,ImmutableList.<String>of(),DEFAULT_RANLIB,ImmutableList.<String>of(),Archive.Contents.NORMAL,DEFAULT_OUTPUT,ImmutableList.<SourcePath>of(new FakeSourcePath("different"))));
  assertNotEquals(defaultRuleKey,inputChange);
  RuleKey archiverTypeChange=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver).build(Archive.from(target,params,pathResolver,new BsdArchiver(new HashedFileTool(AR)),ImmutableList.<String>of(),DEFAULT_RANLIB,ImmutableList.<String>of(),Archive.Contents.NORMAL,DEFAULT_OUTPUT,DEFAULT_INPUTS));
  assertNotEquals(defaultRuleKey,archiverTypeChange);
}
