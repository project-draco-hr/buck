{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  Genrule genrule1=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:genrule")).setOut("foo/bar.o").build(resolver);
  Genrule genrule2=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:genrule2")).setOut("foo/test.o").build(resolver);
  Archive archive=Archive.from(target,params,new SourcePathResolver(resolver),DEFAULT_ARCHIVER,DEFAULT_RANLIB,DEFAULT_OUTPUT,ImmutableList.<SourcePath>of(new FakeSourcePath("simple.o"),new BuildTargetSourcePath(genrule1.getBuildTarget()),new BuildTargetSourcePath(genrule2.getBuildTarget())));
  assertEquals(ImmutableSortedSet.<BuildRule>of(genrule1,genrule2),archive.getDeps());
}
