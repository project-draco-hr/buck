{
  BuildRuleResolver resolver=new BuildRuleResolver();
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildRule dep=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:dep")).setOut("out").build(resolver,filesystem);
  BuildRule rule=ExportFileBuilder.newExportFileBuilder(BuildTargetFactory.newInstance("//:rule")).setOut("out").setSrc(new BuildTargetSourcePath(filesystem,dep.getBuildTarget())).build(resolver,filesystem);
  FakeFileHashCache hashCache=new FakeFileHashCache(ImmutableMap.of(Preconditions.checkNotNull(dep.getPathToOutput()),HashCode.fromInt(0)));
  RuleKey inputKey1=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver).newInstance(rule).build();
  hashCache=new FakeFileHashCache(ImmutableMap.of(Preconditions.checkNotNull(dep.getPathToOutput()),HashCode.fromInt(1)));
  RuleKey inputKey2=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver).newInstance(rule).build();
  assertThat(inputKey1,Matchers.not(Matchers.equalTo(inputKey2)));
}
