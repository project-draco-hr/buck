{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  Path output=Paths.get("output");
  BuildRule rule=ExportFileBuilder.newExportFileBuilder(BuildTargetFactory.newInstance("//:rule")).setOut("out").setSrc(new PathSourcePath(filesystem,output)).build(resolver,filesystem);
  FakeFileHashCache hashCache=new FakeFileHashCache(ImmutableMap.of(filesystem.resolve(output),HashCode.fromInt(0)));
  RuleKey inputKey1=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver).build(rule);
  hashCache=new FakeFileHashCache(ImmutableMap.of(filesystem.resolve(output),HashCode.fromInt(1)));
  RuleKey inputKey2=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver).build(rule);
  assertThat(inputKey1,Matchers.not(Matchers.equalTo(inputKey2)));
}
