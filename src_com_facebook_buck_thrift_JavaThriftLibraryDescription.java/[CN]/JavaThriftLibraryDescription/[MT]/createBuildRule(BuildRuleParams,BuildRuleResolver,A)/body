{
  ImmutableSet<Flavor> flavor=params.getBuildTarget().getFlavors();
  if (!hasFlavors(flavor)) {
    throw new HumanReadableException("Unrecognized flavor \"%s\"",flavor);
  }
  BuildRuleParams thriftParams=params.copyWithChanges(params.getBuildRuleType(),BuildTargets.createFlavoredBuildTarget(params.getBuildTarget().getUnflavoredTarget(),JAVASRCS_FLAVOR),params.getDeclaredDeps(),params.getExtraDeps());
  JavaThriftLibrary javaThriftLibrary=new JavaThriftLibrary(thriftParams,args.srcs);
  resolver.addToIndex(javaThriftLibrary);
  ImmutableSortedSet.Builder<BuildRule> javaDeps=ImmutableSortedSet.naturalOrder();
  javaDeps.addAll(params.getDeclaredDeps());
  javaDeps.add(javaThriftLibrary);
  javaDeps.addAll(params.getExtraDeps());
  BuildRuleParams javaParams=params.copyWithChanges(params.getBuildRuleType(),params.getBuildTarget(),javaDeps.build(),ImmutableSortedSet.<BuildRule>of());
  JavacOptions javacOptions=JavacOptions.builder().setJavaCompilerEnvironment(javacEnv).build();
  return new DefaultJavaLibrary(javaParams,ImmutableSet.of(new BuildRuleSourcePath(javaThriftLibrary)),ImmutableSet.<SourcePath>of(),Optional.<Path>absent(),ImmutableList.<String>of(),ImmutableSortedSet.<BuildRule>of(),ImmutableSortedSet.<BuildRule>of(),ImmutableSet.<Path>of(),javacOptions,Optional.<Path>absent());
}
