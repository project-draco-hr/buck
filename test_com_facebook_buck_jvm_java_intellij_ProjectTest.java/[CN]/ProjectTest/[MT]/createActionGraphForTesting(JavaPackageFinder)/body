{
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  guava=PrebuiltJarBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/guava:guava")).setBinaryJar(PATH_TO_GUAVA_JAR).build(ruleResolver);
  BuildRule androidResRule=ruleResolver.addToIndex(AndroidResourceRuleBuilder.newBuilder().setResolver(new SourcePathResolver(ruleResolver)).setBuildTarget(BuildTargetFactory.newInstance("//android_res/base:res")).setRes(new FakeSourcePath("android_res/base/res")).setRDotJavaPackage("com.facebook").build());
  ProjectConfig projectConfigForResource=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//android_res/base:project_config")).setSrcRule(androidResRule.getBuildTarget()).setSrcRoots(ImmutableList.of("res")).build(ruleResolver);
  BuildTarget grandchildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/grandchild:grandchild");
  BuildRule grandchild=JavaLibraryBuilder.createBuilder(grandchildTarget).addSrc(Paths.get("Grandchild.java")).build(ruleResolver);
  BuildRule childRule=JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/child:child")).addSrc(Paths.get("Child.java")).addDep(grandchild.getBuildTarget()).build(ruleResolver);
  BuildRule exportLib=JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:exportlib")).addSrc(Paths.get("ExportLib.java")).addDep(guava.getBuildTarget()).addExportedDep(guava.getBuildTarget()).build(ruleResolver);
  BuildRule baseRule=AndroidLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base")).addSrc(Paths.get("Base.java")).addDep(exportLib.getBuildTarget()).addDep(childRule.getBuildTarget()).addDep(androidResRule.getBuildTarget()).build(ruleResolver);
  ProjectConfig projectConfigForLibrary=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/base:project_config")).setSrcRule(baseRule.getBuildTarget()).setSrcRoots(ImmutableList.of("src","src-gen")).build(ruleResolver);
  ProjectConfig projectConfigForExportLibrary=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:project_config")).setSrcRule(exportLib.getBuildTarget()).setSrcRoots(ImmutableList.of("src")).build(ruleResolver);
  BuildTarget keystoreTarget=BuildTargetFactory.newInstance("//keystore:debug");
  BuildRule keystore=KeystoreBuilder.createBuilder(keystoreTarget).setStore(new FakeSourcePath("keystore/debug.keystore")).setProperties(new FakeSourcePath("keystore/debug.keystore.properties")).build(ruleResolver);
  ImmutableSortedSet<BuildTarget> androidBinaryRuleDepsTarget=ImmutableSortedSet.of(baseRule.getBuildTarget());
  AndroidBinary androidBinaryRule=(AndroidBinary)AndroidBinaryBuilder.createBuilder(BuildTargetFactory.newInstance("//foo:app")).setOriginalDeps(androidBinaryRuleDepsTarget).setManifest(new FakeSourcePath("foo/AndroidManifest.xml")).setKeystore(keystore.getBuildTarget()).setBuildTargetsToExcludeFromDex(ImmutableSet.of(BuildTargetFactory.newInstance("//third_party/guava:guava"))).build(ruleResolver);
  ProjectConfig projectConfigUsingNoDx=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//foo:project_config")).setSrcRule(androidBinaryRule.getBuildTarget()).build(ruleResolver);
  ImmutableSortedSet<BuildTarget> barAppBuildRuleDepsTarget=ImmutableSortedSet.of(baseRule.getBuildTarget());
  AndroidBinary barAppBuildRule=(AndroidBinary)AndroidBinaryBuilder.createBuilder(BuildTargetFactory.newInstance("//bar:app")).setOriginalDeps(barAppBuildRuleDepsTarget).setManifest(new FakeSourcePath("foo/AndroidManifest.xml")).setKeystore(keystore.getBuildTarget()).build(ruleResolver);
  ProjectConfig projectConfig=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//bar:project_config")).setSrcRule(barAppBuildRule.getBuildTarget()).build(ruleResolver);
  return getModulesForActionGraph(ruleResolver,ImmutableSortedSet.of(projectConfigForExportLibrary,projectConfigForLibrary,projectConfigForResource,projectConfigUsingNoDx,projectConfig),javaPackageFinder);
}
