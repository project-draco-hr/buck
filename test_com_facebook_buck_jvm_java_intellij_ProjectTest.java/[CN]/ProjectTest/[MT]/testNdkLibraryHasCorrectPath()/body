{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  ProjectFilesystem projectFilesystem=EasyMock.createMock(ProjectFilesystem.class);
  BuildTarget fooJni=BuildTargetFactory.newInstance("//third_party/java/foo/jni:foo-jni");
  NdkLibrary ndkLibrary=(NdkLibrary)new NdkLibraryBuilder(fooJni).build(ruleResolver,projectFilesystem);
  ProjectConfig ndkProjectConfig=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/java/foo/jni:project_config")).setSrcRule(ndkLibrary.getBuildTarget()).build(ruleResolver);
  ProjectWithModules projectWithModules=getModulesForActionGraph(ruleResolver,ImmutableSortedSet.of(ndkProjectConfig),null);
  List<SerializableModule> modules=projectWithModules.modules;
  assertEquals("Should be one module for the ndk_library.",1,modules.size());
  SerializableModule androidLibraryModule=Iterables.getOnlyElement(modules);
  assertListEquals(ImmutableList.of(SerializableDependentModule.newSourceFolder(),SerializableDependentModule.newInheritedJdk()),androidLibraryModule.getDependencies());
  assertEquals(Paths.get(String.format("../../../../%s",ndkLibrary.getLibraryPath())),androidLibraryModule.nativeLibs);
}
