def _format_actions_usage(self, actions, groups):
    group_actions = set()
    inserts = {}
    for group in groups:
        try:
            start = actions.index(group._group_actions[0])
        except ValueError:
            continue
        else:
            end = (start + len(group._group_actions))
            if (actions[start:end] == group._group_actions):
                for action in group._group_actions:
                    group_actions.add(action)
                if (not group.required):
                    if (start in inserts):
                        inserts[start] += ' ['
                    else:
                        inserts[start] = '['
                    inserts[end] = ']'
                else:
                    if (start in inserts):
                        inserts[start] += ' ('
                    else:
                        inserts[start] = '('
                    inserts[end] = ')'
                for i in range((start + 1), end):
                    inserts[i] = '|'
    parts = []
    for (i, action) in enumerate(actions):
        if (action.help is SUPPRESS):
            parts.append(None)
            if (inserts.get(i) == '|'):
                inserts.pop(i)
            elif (inserts.get((i + 1)) == '|'):
                inserts.pop((i + 1))
        elif (not action.option_strings):
            part = self._format_args(action, action.dest)
            if (action in group_actions):
                if ((part[0] == '[') and (part[(-1)] == ']')):
                    part = part[1:(-1)]
            parts.append(part)
        else:
            option_string = action.option_strings[0]
            if (action.nargs == 0):
                part = ('%s' % option_string)
            else:
                default = action.dest.upper()
                args_string = self._format_args(action, default)
                part = ('%s %s' % (option_string, args_string))
            if ((not action.required) and (action not in group_actions)):
                part = ('[%s]' % part)
            parts.append(part)
    for i in sorted(inserts, reverse=True):
        parts[i:i] = [inserts[i]]
    text = ' '.join([item for item in parts if (item is not None)])
    open = '[\\[(]'
    close = '[\\])]'
    text = _re.sub(('(%s) ' % open), '\\1', text)
    text = _re.sub((' (%s)' % close), '\\1', text)
    text = _re.sub(('%s *%s' % (open, close)), '', text)
    text = _re.sub('\\(([^|]*)\\)', '\\1', text)
    text = text.strip()
    return text
