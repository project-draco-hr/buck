def __init__(self, description, prefix_chars, argument_default, conflict_handler):
    super(_ActionsContainer, self).__init__()
    self.description = description
    self.argument_default = argument_default
    self.prefix_chars = prefix_chars
    self.conflict_handler = conflict_handler
    self._registries = {}
    self.register('action', None, _StoreAction)
    self.register('action', 'store', _StoreAction)
    self.register('action', 'store_const', _StoreConstAction)
    self.register('action', 'store_true', _StoreTrueAction)
    self.register('action', 'store_false', _StoreFalseAction)
    self.register('action', 'append', _AppendAction)
    self.register('action', 'append_const', _AppendConstAction)
    self.register('action', 'count', _CountAction)
    self.register('action', 'help', _HelpAction)
    self.register('action', 'version', _VersionAction)
    self.register('action', 'parsers', _SubParsersAction)
    self._get_handler()
    self._actions = []
    self._option_string_actions = {}
    self._action_groups = []
    self._mutually_exclusive_groups = []
    self._defaults = {}
    self._negative_number_matcher = _re.compile('^-\\d+$|^-\\d*\\.\\d+$')
    self._has_negative_number_optionals = []
