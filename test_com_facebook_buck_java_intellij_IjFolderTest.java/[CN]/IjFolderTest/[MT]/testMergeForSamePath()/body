{
  IjFolder.Builder folderBuilder=IjFolder.builder().setPath(Paths.get("src")).setWantsPackagePrefix(false);
  IjFolder sourceFolder=folderBuilder.setType(IjFolder.Type.SOURCE_FOLDER).setInputs(ImmutableSortedSet.of(Paths.get("Source.java"))).build();
  IjFolder testFolder=folderBuilder.setType(IjFolder.Type.TEST_FOLDER).setInputs(ImmutableSortedSet.of(Paths.get("Test.java"))).build();
  IjFolder excludeFolder=folderBuilder.setType(IjFolder.Type.EXCLUDE_FOLDER).setInputs(ImmutableSortedSet.<Path>of()).build();
  assertEquals("Merging the folder with itself is that folder.",sourceFolder,sourceFolder.merge(sourceFolder));
  assertEquals("Merging the folder with itself is that folder.",testFolder,testFolder.merge(testFolder));
  IjFolder mergedSourceAndTest=folderBuilder.setType(IjFolder.Type.SOURCE_FOLDER).setInputs(ImmutableSortedSet.of(Paths.get("Source.java"),Paths.get("Test.java"))).build();
  assertEquals("Merging prod with test means test is promoted to prod.",mergedSourceAndTest,testFolder.merge(sourceFolder));
  assertEquals("Merging prod with test means test is promoted to prod in either order.",mergedSourceAndTest,sourceFolder.merge(testFolder));
  assertEquals("Merging the folder with itself is that folder.",excludeFolder,excludeFolder.merge(excludeFolder));
}
