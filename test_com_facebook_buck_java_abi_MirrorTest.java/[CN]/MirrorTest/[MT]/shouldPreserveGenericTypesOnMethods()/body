{
  Path jar=compileToJar(EMPTY_CLASSPATH,"A.java",Joiner.on("\n").join(ImmutableList.of("package com.example.buck;","public class A<T> {","  public T get(String key) { return null; }","  public <X extends Comparable<T>> X compareWith(T other) { return null; }","}")));
  new StubJar(jar).writeTo(filesystem,stubJar);
  AbiClass original=readClass(jar,"com/example/buck/A.class");
  AbiClass stubbed=readClass(stubJar,"com/example/buck/A.class");
  MethodNode originalGet=original.findMethod("get");
  MethodNode stubbedGet=stubbed.findMethod("get");
  assertEquals(originalGet.signature,stubbedGet.signature);
  assertEquals(originalGet.desc,stubbedGet.desc);
  MethodNode originalCompare=original.findMethod("compareWith");
  MethodNode stubbedCompare=stubbed.findMethod("compareWith");
  assertEquals(originalCompare.signature,stubbedCompare.signature);
  assertEquals(originalCompare.desc,stubbedCompare.desc);
}
