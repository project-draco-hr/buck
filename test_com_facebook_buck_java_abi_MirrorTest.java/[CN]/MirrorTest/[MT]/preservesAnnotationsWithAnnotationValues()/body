{
  Path annotations=buildAnnotationJar();
  Path jar=compileToJar(ImmutableSortedSet.of(annotations),"A.java",Joiner.on("\n").join("package com.example.buck;","import java.lang.annotation.*;","@Foo(annotationValue=@Retention(RetentionPolicy.RUNTIME))","public @interface A {}"));
  new StubJar(jar).writeTo(filesystem,stubJar);
  ClassNode classNode=readClass(stubJar,"com/example/buck/A.class").getClassNode();
  List<AnnotationNode> classAnnotations=classNode.visibleAnnotations;
  assertEquals(1,classAnnotations.size());
  AnnotationNode annotation=classAnnotations.get(0);
  assertNotNull(annotation.values);
  assertEquals(2,annotation.values.size());
  assertEquals("annotationValue",annotation.values.get(0));
  AnnotationNode nestedAnnotation=(AnnotationNode)annotation.values.get(1);
  assertEquals("Ljava/lang/annotation/Retention;",nestedAnnotation.desc);
  assertNotNull(nestedAnnotation.values);
  assertEquals(2,nestedAnnotation.values.size());
  assertEquals("value",nestedAnnotation.values.get(0));
  assertEnumAnnotationValue(nestedAnnotation.values,1,"Ljava/lang/annotation/RetentionPolicy;","RUNTIME");
}
