{
  boolean invalid=false;
  String subcommand="";
  if (args.isEmpty()) {
    console.printBuildFailure("No server command is given.");
    invalid=true;
  }
 else {
    subcommand=args.get(0);
    if (!subcommands.containsKey(subcommand)) {
      console.printBuildFailure("Unknown server subcommand: " + args.get(0));
      invalid=true;
    }
  }
  if (invalid) {
    console.getStdErr().println("buck server <cmd>");
    for (    Map.Entry<String,? extends AbstractCommandRunner<?>> entry : subcommands.entrySet()) {
      console.getStdErr().printf("  %s - %s%n",entry.getKey(),entry.getValue().getUsageIntro());
    }
    return 1;
  }
  AbstractCommandRunner<?> commandRunner=subcommands.get(subcommand);
  return commandRunner.runCommand(buckConfig,args.subList(1,args.size()));
}
