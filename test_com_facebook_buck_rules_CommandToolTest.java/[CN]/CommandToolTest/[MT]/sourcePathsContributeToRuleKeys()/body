{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  SourcePath path=new FakeSourcePath("input");
  CommandTool tool=new CommandTool.Builder().addArg(new SourcePathArg(pathResolver,path)).build();
  FileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.of("input",Strings.repeat("a",40)));
  DefaultRuleKeyBuilderFactory ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver);
  RuleKey ruleKey=new UncachedRuleKeyBuilder(pathResolver,hashCache,ruleKeyBuilderFactory).setReflectively("key",tool).build();
  hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.of("input",Strings.repeat("b",40)));
  ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver);
  RuleKey changedRuleKey=new UncachedRuleKeyBuilder(pathResolver,hashCache,ruleKeyBuilderFactory).setReflectively("key",tool).build();
  assertThat(ruleKey,Matchers.not(Matchers.equalTo(changedRuleKey)));
}
