{
  Preconditions.checkArgument(CxxSourceTypes.isPreprocessableType(source.getType()));
  LOG.verbose("Creating preprocessed InferCapture build rule %s for %s",target,source);
  CxxInferCapture result=new CxxInferCapture(params.copyWithChanges(target,Suppliers.ofInstance(computeSourcePreprocessorAndToolDeps(Optional.<Tool>absent(),source)),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of())),pathResolver,Optional.of(CxxSourceTypes.getPlatformPreprocessFlags(cxxPlatform,source.getType())),Optional.of(preprocessorFlags.getUnchecked(source.getType())),Optional.of(computePlatformCompilerFlags(pic,source)),Optional.of(computeRuleCompilerFlags(source)),source.getPath(),source.getType(),getCompileOutputPath(target,name),includeRoots.get(),systemIncludeRoots.get(),headerMaps.get(),frameworkRoots.get(),includes.get(),inferTools,cxxPlatform.getDebugPathSanitizer());
  resolver.addToIndex(result);
  return result;
}
