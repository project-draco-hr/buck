{
  Preconditions.checkArgument(CxxSourceTypes.isPreprocessableType(source.getType()));
  BuildTarget target=createPreprocessBuildTarget(name,source.getType(),pic);
  Preprocessor tool=CxxSourceTypes.getPreprocessor(cxxPlatform,source.getType());
  ImmutableSortedSet<BuildRule> dependencies=computeSourcePreprocessorAndToolDeps(Optional.of((Tool)tool),source);
  CxxPreprocessAndCompile result=CxxPreprocessAndCompile.preprocess(params.copyWithChanges(target,Suppliers.ofInstance(dependencies),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of())),pathResolver,preprocessorDelegates.getUnchecked(PreprocessAndCompilePreprocessorDelegateKey.of(source.getType(),pic,source.getFlags())),getPreprocessOutputPath(target,source.getType(),name),source.getPath(),source.getType(),cxxPlatform.getDebugPathSanitizer());
  resolver.addToIndex(result);
  return result;
}
