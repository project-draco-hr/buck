{
  SymlinkTree headerSymlinkTree=requireHeaderSymlinkTree(params,ruleResolver,pathResolver,cxxPlatform,lexSources,yaccSources,headers);
  CxxHeaderSourceSpec lexYaccSources=requireLexYaccSources(params,ruleResolver,pathResolver,cxxPlatform,lexSources,yaccSources);
  CxxPreprocessorInput cxxPreprocessorInputFromDependencies=CxxDescriptionEnhancer.combineCxxPreprocessorInput(params,cxxPlatform,preprocessorFlags,headerSymlinkTree,ImmutableMap.<Path,SourcePath>builder().putAll(headers).putAll(lexYaccSources.getCxxHeaders()).build());
  ImmutableMap<String,CxxSource> allSources=ImmutableMap.<String,CxxSource>builder().putAll(sources).putAll(lexYaccSources.getCxxSources()).build();
  ImmutableMap<String,CxxSource> preprocessed=CxxPreprocessables.createPreprocessBuildRules(params,ruleResolver,cxxPlatform,cxxPreprocessorInputFromDependencies,pic,allSources);
  return CxxDescriptionEnhancer.createCompileBuildRules(params,ruleResolver,cxxPlatform,compilerFlags,pic,preprocessed);
}
