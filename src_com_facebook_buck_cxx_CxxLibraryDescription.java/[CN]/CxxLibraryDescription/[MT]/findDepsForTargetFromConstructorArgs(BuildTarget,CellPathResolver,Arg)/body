{
  ImmutableSet.Builder<BuildTarget> deps=ImmutableSet.builder();
  deps.addAll(CxxPlatforms.getParseTimeDeps(cxxPlatforms.getValues()));
  try {
    for (    String val : Iterables.concat(constructorArg.linkerFlags.get(),constructorArg.exportedLinkerFlags.get())) {
      deps.addAll(MACRO_HANDLER.extractParseTimeDeps(buildTarget,cellRoots,val));
    }
    for (    PatternMatchedCollection<ImmutableList<String>> values : ImmutableList.of(constructorArg.platformLinkerFlags.get(),constructorArg.exportedPlatformLinkerFlags.get())) {
      for (      Pair<Pattern,ImmutableList<String>> pav : values.getPatternsAndValues()) {
        for (        String val : pav.getSecond()) {
          deps.addAll(MACRO_HANDLER.extractParseTimeDeps(buildTarget,cellRoots,val));
        }
      }
    }
  }
 catch (  MacroException e) {
    throw new HumanReadableException(e,"%s: %s",buildTarget,e.getMessage());
  }
  return deps.build();
}
