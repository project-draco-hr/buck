{
  Optional<Map.Entry<Flavor,Type>> type;
  Optional<Map.Entry<Flavor,CxxPlatform>> platform;
  try {
    type=LIBRARY_TYPE.getFlavorAndValue(ImmutableSet.copyOf(buildTarget.getFlavors()));
    platform=platforms.getFlavorAndValue(ImmutableSet.copyOf(buildTarget.getFlavors()));
  }
 catch (  FlavorDomainException e) {
    throw new HumanReadableException("%s: %s",buildTarget,e.getMessage());
  }
  return ImmutableCxxLibraryDescription.TypeAndPlatform.of(type,platform);
}
