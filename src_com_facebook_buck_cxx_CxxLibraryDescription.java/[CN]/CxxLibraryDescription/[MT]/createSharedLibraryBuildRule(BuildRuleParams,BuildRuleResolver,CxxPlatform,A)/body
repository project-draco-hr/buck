{
  return createSharedLibrary(params,resolver,new SourcePathResolver(resolver),cxxPlatform,CxxDescriptionEnhancer.parseLexSources(params,resolver,args),CxxDescriptionEnhancer.parseYaccSources(params,resolver,args),ImmutableMultimap.<CxxSource.Type,String>builder().putAll(CxxPreprocessorFlags.fromArgs(args.preprocessorFlags,args.langPreprocessorFlags)).putAll(CxxPreprocessorFlags.fromArgs(args.propagatedPpFlags,args.propagatedLangPpFlags)).build(),CxxDescriptionEnhancer.parseHeaders(params,resolver,args),args.compilerFlags.or(ImmutableList.<String>of()),CxxDescriptionEnhancer.parseCxxSources(params,resolver,args),args.soname);
}
