{
  HeaderSymlinkTree headerSymlinkTree=CxxDescriptionEnhancer.requireHeaderSymlinkTree(params,ruleResolver,pathResolver,cxxPlatform,headers,HeaderVisibility.PRIVATE);
  ImmutableList<CxxPreprocessorInput> cxxPreprocessorInputFromDependencies=CxxDescriptionEnhancer.collectCxxPreprocessorInput(targetGraph,params,cxxPlatform,preprocessorFlags,ImmutableList.of(headerSymlinkTree),ImmutableSet.<FrameworkPath>of(),getTransitiveCxxPreprocessorInput(targetGraph,params,ruleResolver,pathResolver,cxxPlatform,exportedPreprocessorFlags,exportedHeaders,frameworks));
  return CxxSourceRuleFactory.requirePreprocessAndCompileRules(params,ruleResolver,pathResolver,cxxPlatform,cxxPreprocessorInputFromDependencies,compilerFlags,prefixHeader,preprocessMode,sources,pic);
}
