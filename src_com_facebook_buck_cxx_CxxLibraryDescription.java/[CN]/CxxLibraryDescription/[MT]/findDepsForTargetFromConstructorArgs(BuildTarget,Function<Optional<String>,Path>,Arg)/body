{
  ImmutableSet.Builder<BuildTarget> deps=ImmutableSet.builder();
  if (constructorArg.lexSrcs.isPresent() && !constructorArg.lexSrcs.get().isEmpty()) {
    deps.add(cxxBuckConfig.getLexDep());
  }
  try {
    for (    ImmutableList<String> values : Optional.presentInstances(ImmutableList.of(constructorArg.linkerFlags,constructorArg.exportedLinkerFlags))) {
      for (      String val : values) {
        deps.addAll(MACRO_HANDLER.extractParseTimeDeps(buildTarget,cellRoots,val));
      }
    }
    for (    PatternMatchedCollection<ImmutableList<String>> values : Optional.presentInstances(ImmutableList.of(constructorArg.platformLinkerFlags,constructorArg.exportedPlatformLinkerFlags))) {
      for (      Pair<Pattern,ImmutableList<String>> pav : values.getPatternsAndValues()) {
        for (        String val : pav.getSecond()) {
          deps.addAll(MACRO_HANDLER.extractParseTimeDeps(buildTarget,cellRoots,val));
        }
      }
    }
  }
 catch (  MacroException e) {
    throw new HumanReadableException(e,"%s: %s",buildTarget,e.getMessage());
  }
  return deps.build();
}
