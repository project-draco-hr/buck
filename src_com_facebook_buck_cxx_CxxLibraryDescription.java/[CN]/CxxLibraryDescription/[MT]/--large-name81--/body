{
  ImmutableList<SourcePath> objects=requireObjects(params,ruleResolver,pathResolver,cxxPlatform,lexSources,yaccSources,preprocessorFlags,headers,compilerFlags,sources,frameworkSearchPaths,true);
  BuildTarget sharedTarget=CxxDescriptionEnhancer.createSharedLibraryBuildTarget(params.getBuildTarget(),cxxPlatform.getFlavor());
  String sharedLibrarySoname=soname.or(CxxDescriptionEnhancer.getSharedLibrarySoname(params.getBuildTarget(),cxxPlatform));
  Path sharedLibraryPath=CxxDescriptionEnhancer.getSharedLibraryPath(params.getBuildTarget(),cxxPlatform);
  CxxLink sharedLibraryBuildRule=CxxLinkableEnhancer.createCxxLinkableBuildRule(cxxPlatform,params,pathResolver,ImmutableList.<String>of(),linkerFlags,sharedTarget,Linker.LinkType.SHARED,Optional.of(sharedLibrarySoname),sharedLibraryPath,objects,Linker.LinkableDepType.SHARED,params.getDeps());
  return sharedLibraryBuildRule;
}
