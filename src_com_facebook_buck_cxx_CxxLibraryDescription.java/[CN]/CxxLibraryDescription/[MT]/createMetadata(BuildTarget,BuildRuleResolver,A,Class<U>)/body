{
  if (!metadataClass.isAssignableFrom(CxxCompilationDatabaseDependencies.class) || !buildTarget.getFlavors().contains(CxxCompilationDatabase.COMPILATION_DATABASE)) {
    return Optional.absent();
  }
  return CxxDescriptionEnhancer.createCompilationDatabaseDependencies(buildTarget,cxxPlatforms,resolver,args).transform(new Function<CxxCompilationDatabaseDependencies,U>(){
    @Override public U apply(    CxxCompilationDatabaseDependencies input){
      return metadataClass.cast(input);
    }
  }
);
}
