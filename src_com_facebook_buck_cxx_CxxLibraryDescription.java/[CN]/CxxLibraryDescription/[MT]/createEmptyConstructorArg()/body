{
  Arg arg=new Arg();
  arg.deps=Optional.absent();
  arg.srcs=Optional.absent();
  arg.headers=Optional.absent();
  arg.compilerFlags=Optional.absent();
  arg.exportedPreprocessorFlags=Optional.absent();
  arg.exportedLangPreprocessorFlags=Optional.absent();
  arg.preprocessorFlags=Optional.absent();
  arg.langPreprocessorFlags=Optional.absent();
  arg.linkerFlags=Optional.absent();
  arg.platformLinkerFlags=Optional.of(ImmutableList.<Pair<String,ImmutableList<String>>>of());
  arg.linkWhole=Optional.absent();
  arg.lexSrcs=Optional.absent();
  arg.yaccSrcs=Optional.absent();
  arg.headerNamespace=Optional.absent();
  arg.soname=Optional.absent();
  arg.frameworkSearchPaths=Optional.of(ImmutableList.<Path>of());
  return arg;
}
