{
  SourcePathResolver sourcePathResolver=new SourcePathResolver(resolver);
  ImmutableMap<CxxPreprocessAndCompile,SourcePath> objects=CxxDescriptionEnhancer.requireObjects(params,resolver,sourcePathResolver,cxxPlatform,preprocessMode,pic,args);
  BuildTarget staticTarget=CxxDescriptionEnhancer.createStaticLibraryBuildTarget(params.getBuildTarget(),cxxPlatform.getFlavor(),pic);
  if (objects.isEmpty()) {
    return new NoopBuildRule(new BuildRuleParams(staticTarget,Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()),params.getProjectFilesystem(),params.getCellRoots()),sourcePathResolver);
  }
  Path staticLibraryPath=CxxDescriptionEnhancer.getStaticLibraryPath(params.getBuildTarget(),cxxPlatform.getFlavor(),pic);
  return Archive.from(staticTarget,params,sourcePathResolver,cxxPlatform.getAr(),cxxPlatform.getRanlib(),staticLibraryPath,ImmutableList.copyOf(objects.values()));
}
