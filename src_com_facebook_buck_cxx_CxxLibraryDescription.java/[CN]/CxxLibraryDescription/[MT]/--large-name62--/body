{
  SymlinkTree headerSymlinkTree=requireHeaderSymlinkTree(params,ruleResolver,pathResolver,lexSources,yaccSources,headers);
  CxxHeaderSourceSpec lexYaccSources=requireLexYaccSources(params,ruleResolver,pathResolver,lexSources,yaccSources);
  CxxPreprocessorInput cxxPreprocessorInputFromDependencies=CxxDescriptionEnhancer.combineCxxPreprocessorInput(params,preprocessorFlags,headerSymlinkTree,ImmutableMap.<Path,SourcePath>builder().putAll(headers).putAll(lexYaccSources.getCxxHeaders()).build());
  return CxxDescriptionEnhancer.createPreprocessAndCompileBuildRules(params,ruleResolver,cxxPlatform,cxxPreprocessorInputFromDependencies,compilerFlags,pic,ImmutableMap.<String,CxxSource>builder().putAll(sources).putAll(lexYaccSources.getCxxSources()).build());
}
