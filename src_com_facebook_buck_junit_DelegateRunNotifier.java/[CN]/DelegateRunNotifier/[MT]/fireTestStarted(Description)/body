{
  delegate.fireTestStarted(description);
  if (hasJunitTimeout(description)) {
    return;
  }
  TimerTask task=new TimerTask(){
    @Override public void run(){
synchronized (finishedTests) {
        if (finishedTests.contains(description)) {
          return;
        }
        hasTestThatExceededTimeout.set(true);
        Exception exception=new Exception(String.format("test timed out after %d milliseconds",defaultTestTimeoutMillis));
        Failure failure=new Failure(description,exception);
        fireTestFailure(failure);
        fireTestFinished(description);
        if (!finishedTests.contains(description)) {
          throw new IllegalStateException("fireTestFinished() should update finishedTests.");
        }
        onTestRunFinished();
      }
    }
  }
;
  timer.schedule(task,defaultTestTimeoutMillis);
}
