{
  MutableDirectedGraph<String> graph=new MutableDirectedGraph<String>();
  graph.addEdge("A","A");
  assertEquals(1,graph.getNodeCount());
  assertEquals(1,graph.getEdgeCount());
  assertTrue(graph.containsNode("A"));
  assertTrue(graph.containsEdge("A","A"));
  assertEquals(ImmutableSet.of("A"),graph.getOutgoingNodesFor("A"));
  assertEquals(ImmutableSet.of("A"),graph.getIncomingNodesFor("A"));
  assertTrue(graph.hasIncomingEdges("A"));
  assertFalse(graph.isAcyclic());
  assertEquals(ImmutableSet.of(ImmutableSet.of("A")),graph.findCycles());
  graph.removeNode("A");
  assertEquals(0,graph.getNodeCount());
  assertEquals(0,graph.getEdgeCount());
  assertFalse(graph.containsNode("A"));
  assertFalse(graph.containsEdge("A","A"));
  assertEquals(ImmutableSet.of(),graph.getOutgoingNodesFor("A"));
  assertEquals(ImmutableSet.of(),graph.getIncomingNodesFor("A"));
  assertTrue(graph.isAcyclic());
}
