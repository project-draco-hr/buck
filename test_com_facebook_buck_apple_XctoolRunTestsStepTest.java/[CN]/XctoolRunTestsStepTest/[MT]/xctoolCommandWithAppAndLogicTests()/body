{
  FakeProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  XctoolRunTestsStep step=new XctoolRunTestsStep(projectFilesystem,Paths.get("/path/to/xctool"),ImmutableMap.<String,String>of(),Optional.<Long>absent(),"iphonesimulator",Optional.of("name=iPhone 5s,OS=8.2"),ImmutableSet.of(Paths.get("/path/to/FooLogicTest.xctest")),ImmutableMap.of(Paths.get("/path/to/FooAppTest.xctest"),Paths.get("/path/to/Foo.app")),Paths.get("/path/to/output.json"),Optional.<XctoolRunTestsStep.StdoutReadingCallback>absent(),Suppliers.ofInstance(Optional.of(Paths.get("/path/to/developer/dir"))),TestSelectorList.EMPTY,Optional.<String>absent(),Optional.<Path>absent(),Optional.<String>absent(),Optional.<String>absent(),Optional.<Long>absent());
  ProcessExecutorParams xctoolParams=ProcessExecutorParams.builder().setCommand(ImmutableList.of("/path/to/xctool","-reporter","json-stream","-sdk","iphonesimulator","-destination","name=iPhone 5s,OS=8.2","run-tests","-logicTest","/path/to/FooLogicTest.xctest","-appTest","/path/to/FooAppTest.xctest:/path/to/Foo.app")).setEnvironment(ImmutableMap.of("DEVELOPER_DIR","/path/to/developer/dir")).setDirectory(projectFilesystem.getRootPath().toAbsolutePath().toFile()).setRedirectOutput(ProcessBuilder.Redirect.PIPE).build();
  FakeProcess fakeXctoolSuccess=new FakeProcess(0,"","");
  FakeProcessExecutor processExecutor=new FakeProcessExecutor(ImmutableMap.of(xctoolParams,fakeXctoolSuccess));
  ExecutionContext executionContext=TestExecutionContext.newBuilder().setProcessExecutor(processExecutor).setEnvironment(ImmutableMap.<String,String>of()).build();
  assertThat(step.execute(executionContext).getExitCode(),equalTo(0));
}
