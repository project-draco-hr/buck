@classmethod
def run_2to3(cls, path):
    from lib2to3.refactor import get_fixers_from_package, RefactoringTool
    rt = RefactoringTool(get_fixers_from_package('lib2to3.fixes'))
    with TRACER.timed(('Translating %s' % path)):
        for (root, dirs, files) in os.walk(path):
            for fn in files:
                full_fn = os.path.join(root, fn)
                if full_fn.endswith('.py'):
                    with TRACER.timed(('%s' % fn), V=3):
                        try:
                            chmod_plus_w(full_fn)
                            rt.refactor_file(full_fn, write=True)
                        except IOError as e:
                            TRACER.log(('Failed to translate %s: %s' % (fn, e)))
