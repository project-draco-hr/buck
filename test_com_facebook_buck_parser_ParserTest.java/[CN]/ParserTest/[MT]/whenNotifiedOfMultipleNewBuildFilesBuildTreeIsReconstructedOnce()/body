{
  Supplier<BuildFileTree> buildFileTreeSupplier=createStrictMock(Supplier.class);
  expect(buildFileTreeSupplier.get()).andReturn(new BuildFileTree(ImmutableSet.<String>of())).times(2);
  replay(buildFileTreeSupplier);
  Parser parser=createParser(buildFileTreeSupplier,emptyBuildTargets(),new DefaultProjectBuildFileParserFactory(filesystem),new BuildTargetParser(filesystem));
  parser.filterAllTargetsInProject(filesystem,Lists.<String>newArrayList(),alwaysTrue());
  WatchEvent<Path> event=createMock(WatchEvent.class);
  expect(event.kind()).andReturn(StandardWatchEventKinds.ENTRY_CREATE).anyTimes();
  expect(event.context()).andReturn(new File(BuckConstant.BUILD_RULES_FILE_NAME).toPath()).anyTimes();
  replay(event);
  parser.onFileSystemChange(event);
  parser.onFileSystemChange(event);
  parser.filterAllTargetsInProject(filesystem,Lists.<String>newArrayList(),alwaysTrue());
  verify(event,buildFileTreeSupplier);
}
