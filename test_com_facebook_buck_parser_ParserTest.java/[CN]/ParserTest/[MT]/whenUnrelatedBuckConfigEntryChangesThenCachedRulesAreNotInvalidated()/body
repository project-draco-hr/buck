{
  Path buckFile=cellRoot.resolve("BUCK");
  Files.write(buckFile,Joiner.on("").join(ImmutableList.of("read_config('foo', 'bar')\n","genrule(name = 'cake', out = 'file.txt', cmd = 'touch $OUT')\n")).getBytes(UTF_8));
  BuckConfig config=FakeBuckConfig.builder().setSections(ImmutableMap.of("foo",ImmutableMap.of("bar","value","dead","beef"))).setFilesystem(filesystem).build();
  Cell cell=new TestCellBuilder().setFilesystem(filesystem).setBuckConfig(config).build();
  parser.getAllTargetNodes(eventBus,cell,false,executorService,buckFile);
  config=FakeBuckConfig.builder().setSections(ImmutableMap.of("foo",ImmutableMap.of("bar","value","dead","beef different"))).setFilesystem(filesystem).build();
  cell=new TestCellBuilder().setFilesystem(filesystem).setBuckConfig(config).build();
  parser.getAllTargetNodes(eventBus,cell,false,executorService,buckFile);
  assertEquals("Should not have invalidated.",1,counter.calls);
}
