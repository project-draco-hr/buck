{
  Parser parser=createParser(emptyBuildTargets());
  tempDir.newFolder("foo");
  tempDir.newFolder("bar");
  File testFooBuckFile=tempDir.newFile("foo/" + BuckConstant.BUILD_RULES_FILE_NAME);
  Files.write("java_library(name = 'foo', visibility=['PUBLIC'])\n",testFooBuckFile,Charsets.UTF_8);
  File testBarBuckFile=tempDir.newFile("bar/" + BuckConstant.BUILD_RULES_FILE_NAME);
  Files.write("java_library(name = 'bar',\n" + "  deps = ['//foo:foo'])\n",testBarBuckFile,Charsets.UTF_8);
  BuildTarget barTarget=BuildTarget.builder("//bar","bar").setFlavor("src").build();
  Iterable<BuildTarget> buildTargets=ImmutableList.of(barTarget);
  Iterable<String> defaultIncludes=ImmutableList.of();
  parser.buildTargetGraphForBuildTargets(buildTargets,defaultIncludes,BuckEventBusFactory.newInstance(),new TestConsole(),ImmutableMap.<String,String>of(),false);
  testFooBuckFile.delete();
  Files.write("java_library(name = 'bar')\n",testBarBuckFile,Charsets.UTF_8);
  WatchEvent<Path> deleteEvent=createPathEvent(Paths.get("foo").resolve(BuckConstant.BUILD_RULES_FILE_NAME),StandardWatchEventKinds.ENTRY_DELETE);
  parser.onFileSystemChange(deleteEvent);
  WatchEvent<Path> modifyEvent=createPathEvent(Paths.get("bar").resolve(BuckConstant.BUILD_RULES_FILE_NAME),StandardWatchEventKinds.ENTRY_MODIFY);
  parser.onFileSystemChange(modifyEvent);
  parser.buildTargetGraphForBuildTargets(buildTargets,defaultIncludes,BuckEventBusFactory.newInstance(),new TestConsole(),ImmutableMap.<String,String>of(),false);
}
