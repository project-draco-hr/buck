{
  tempDir.newFolder("foo");
  Path testFooBuckFile=tempDir.newFile("foo/BUCK");
  Files.write(testFooBuckFile,"java_library(name = 'lib', srcs=glob(['*.java']), visibility=['PUBLIC'])\n".getBytes(UTF_8));
  BuildTarget fooLibTarget=BuildTarget.builder(cellRoot,"//foo","lib").build();
  HashCode original=buildTargetGraphAndGetHashCodes(parser,fooLibTarget).get(fooLibTarget);
  DefaultTypeCoercerFactory typeCoercerFactory=new DefaultTypeCoercerFactory();
  parser=new Parser(typeCoercerFactory,new ConstructorArgMarshaller(typeCoercerFactory));
  Path testFooJavaFile=tempDir.newFile("foo/Foo.java");
  Files.write(testFooJavaFile,"// Ceci n'est pas une Javafile\n".getBytes(UTF_8));
  HashCode updated=buildTargetGraphAndGetHashCodes(parser,fooLibTarget).get(fooLibTarget);
  assertNotEquals(original,updated);
}
