{
  BuildTarget fooTarget=BuildTarget.builder(cellRoot,"//java/com/facebook","foo").build();
  BuildTarget barTarget=BuildTarget.builder(cellRoot,"//java/com/facebook","bar").build();
  Iterable<BuildTarget> buildTargets=ImmutableList.of(fooTarget,barTarget);
  FakeBuckEventListener listener=new FakeBuckEventListener();
  eventBus.register(listener);
  TargetGraph targetGraph=parser.buildTargetGraph(eventBus,cell,false,executorService,buildTargets);
  BuildRuleResolver resolver=buildActionGraph(eventBus,targetGraph);
  BuildRule fooRule=resolver.requireRule(fooTarget);
  assertNotNull(fooRule);
  BuildRule barRule=resolver.requireRule(barTarget);
  assertNotNull(barRule);
  Iterable<ParseEvent> events=Iterables.filter(listener.getEvents(),ParseEvent.class);
  assertThat(events,Matchers.contains(Matchers.hasProperty("buildTargets",equalTo(buildTargets)),Matchers.allOf(Matchers.hasProperty("buildTargets",equalTo(buildTargets)),Matchers.hasProperty("graph",equalTo(Optional.of(targetGraph))))));
}
