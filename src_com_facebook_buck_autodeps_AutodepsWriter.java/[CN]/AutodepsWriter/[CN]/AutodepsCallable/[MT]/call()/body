{
  int numWritten=0;
  for (  DepsForBuildFiles.BuildFileWithDeps buildFileWithDeps : buildFilesWithDeps) {
    Path generatedFile=buildFileWithDeps.getCellPath().resolve(buildFileWithDeps.getBasePath()).resolve(autodepsFileName);
    SortedMap<String,SortedMap<String,Iterable<String>>> depsForBuildFile=new TreeMap<>();
    for (    DepsForBuildFiles.DepsForRule depsForRule : buildFileWithDeps) {
      SortedMap<String,Iterable<String>> deps=new TreeMap<>();
      for (      DependencyType type : DependencyType.values()) {
        Iterable<BuildTarget> depsAsBuildTargets=depsForRule.depsForDependencyType(type);
        Iterable<String> depsAsStrings=FluentIterable.from(depsAsBuildTargets).transform(Functions.toStringFunction());
        deps.put(type.name().toLowerCase(),depsAsStrings);
      }
      depsForBuildFile.put(depsForRule.getShortName(),deps);
    }
    if (writeSignedFile(depsForBuildFile,generatedFile,mapper)) {
      numWritten++;
    }
  }
  return numWritten;
}
