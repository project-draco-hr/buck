{
  builder.setReflectively("platformPreprocessorFlags",sanitizer.sanitizeFlags(platformPreprocessorFlags));
  builder.setReflectively("rulePreprocessorFlags",sanitizer.sanitizeFlags(rulePreprocessorFlags));
  builder.setReflectively("platformCompilerFlags",sanitizer.sanitizeFlags(platformCompilerFlags));
  builder.setReflectively("ruleCompilerFlags",sanitizer.sanitizeFlags(ruleCompilerFlags));
  ImmutableList<String> frameworkRoots=FluentIterable.from(this.frameworkRoots).transform(Functions.toStringFunction()).transform(sanitizer.sanitize(Optional.<Path>absent())).toList();
  builder.setReflectively("frameworkRoots",frameworkRoots);
  return builder;
}
