def package_iterator(self, resolvable, existing=None):
    iterator = Iterator(fetchers=[Fetcher([self.__cache])])
    packages = self.filter_packages_by_interpreter(resolvable.compatible(iterator), self._interpreter, self._platform)
    if packages:
        if resolvable.exact:
            return packages
        if self.__cache_ttl:
            packages = self.filter_packages_by_ttl(packages, self.__cache_ttl)
            if packages:
                return packages
    return super(CachingResolver, self).package_iterator(resolvable, existing=existing)
