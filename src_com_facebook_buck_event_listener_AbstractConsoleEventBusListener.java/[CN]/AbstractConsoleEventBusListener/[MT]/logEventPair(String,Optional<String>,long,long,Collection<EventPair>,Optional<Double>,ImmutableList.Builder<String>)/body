{
  if (eventPairs.isEmpty()) {
    return UNFINISHED_EVENT_PAIR;
  }
  long completedRunTimesMs=getTotalCompletedTimeFromEventPairs(eventPairs);
  long currentlyRunningTime=getWorkingTimeFromLastStartUntilNow(eventPairs,currentMillis);
  boolean stillRunning=currentlyRunningTime >= 0;
  String parseLine=(stillRunning ? "[+] " : "[-] ") + prefix + "...";
  long elapsedTimeMs=completedRunTimesMs - offsetMs;
  if (stillRunning) {
    elapsedTimeMs+=currentlyRunningTime;
  }
 else {
    parseLine+="FINISHED ";
    if (progress.isPresent()) {
      progress=Optional.of(1.0);
    }
  }
  parseLine+=formatElapsedTime(elapsedTimeMs);
  if (progress.isPresent()) {
    parseLine+=" [" + Math.round(progress.get() * 100) + "%]";
  }
  if (suffix.isPresent()) {
    parseLine+=" " + suffix.get();
  }
  lines.add(parseLine);
  return stillRunning ? UNFINISHED_EVENT_PAIR : elapsedTimeMs;
}
