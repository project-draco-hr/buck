{
  return Futures.transformAsync(getAllNodesJob(cell,cell.getAbsolutePathToBuildFile(buildTarget)),new AsyncFunction<ImmutableSet<Map<String,Object>>,Map<String,Object>>(){
    @Override public ListenableFuture<Map<String,Object>> apply(    ImmutableSet<Map<String,Object>> input) throws NoSuchBuildTargetException, Cell.MissingBuildFileException {
      for (      Map<String,Object> rawNode : input) {
        Object shortName=rawNode.get("name");
        if (buildTarget.getShortName().equals(shortName)) {
          return Futures.immediateFuture(rawNode);
        }
      }
      throw NoSuchBuildTargetException.createForMissingBuildRule(buildTarget,BuildTargetPatternParser.forBaseName(buildTarget.getBaseName()),cell.getBuildFileName(),"Defined in file: " + cell.getAbsolutePathToBuildFile(buildTarget));
    }
  }
,executorService);
}
