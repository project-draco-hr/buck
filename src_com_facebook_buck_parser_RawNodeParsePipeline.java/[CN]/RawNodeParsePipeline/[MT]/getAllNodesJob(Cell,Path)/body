{
  if (shuttingDown()) {
    return Futures.immediateCancelledFuture();
  }
  return cache.getJobWithCacheLookup(cell,buildFile,new JobSupplier<ImmutableSet<Map<String,Object>>>(){
    @Override public ListenableFuture<ImmutableSet<Map<String,Object>>> get() throws BuildTargetException {
      if (shuttingDown()) {
        return Futures.immediateCancelledFuture();
      }
      return projectBuildFileParserPool.getAllRulesAndMetaRules(cell,buildFile,executorService);
    }
  }
);
}
