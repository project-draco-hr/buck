{
  CxxLibraryBuilder cxxLibraryBuilder=new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:lib")).setSoname("libfoo.so.1.0").setSrcs(ImmutableSortedSet.of(SourceWithFlags.of(new FakeSourcePath("hello.c"))));
  LuaBinaryBuilder binaryBuilder=new LuaBinaryBuilder(BuildTargetFactory.newInstance("//:rule"),FakeLuaConfig.DEFAULT.withPackageStyle(LuaConfig.PackageStyle.INPLACE)).setMainModule("main").setDeps(ImmutableSortedSet.of(cxxLibraryBuilder.getTarget()));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraphFactory.newInstance(cxxLibraryBuilder.build(),binaryBuilder.build()),new DefaultTargetNodeToBuildRuleTransformer());
  cxxLibraryBuilder.build(resolver);
  binaryBuilder.build(resolver);
  SymlinkTree tree=resolver.getRuleWithType(LuaBinaryDescription.getNativeLibsSymlinkTreeTarget(binaryBuilder.getTarget()),SymlinkTree.class);
  assertThat(tree.getLinks().keySet(),Matchers.hasItem(tree.getProjectFilesystem().getRootPath().getFileSystem().getPath("libfoo.so")));
}
