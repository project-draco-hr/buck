{
  AcyclicDepthFirstPostOrderTraversal<String> traversal=new AcyclicDepthFirstPostOrderTraversal<>(new GraphTraversable<String>(){
    @Override public Iterator<String> findChildren(    String node){
      ++numFindChildrenCalls;
      return graph.get(node).iterator();
    }
  }
);
  for (  String node : traversal.traverse(initial)) {
    exploredNodes.add(node);
  }
}
