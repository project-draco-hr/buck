{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetPath()).compareTo(other.isSetPath());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPath()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.path,other.path);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHashCode()).compareTo(other.isSetHashCode());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHashCode()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hashCode,other.hashCode);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIsDirectory()).compareTo(other.isSetIsDirectory());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIsDirectory()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.isDirectory,other.isDirectory);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPathIsAbsolute()).compareTo(other.isSetPathIsAbsolute());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPathIsAbsolute()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.pathIsAbsolute,other.pathIsAbsolute);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
