{
  BuildRuleResolver resolver=new BuildRuleResolver();
  Genrule genrule=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:gen")).setOut("blah.py").build(resolver);
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(BuildTargetFactory.newInstance("//:bin"));
  PythonBinaryDescription desc=new PythonBinaryDescription(PYTHON_BUCK_CONFIG,PYTHON_ENV,CXX_PLATFORM,CXX_PLATFORMS);
  PythonBinaryDescription.Arg arg=desc.createUnpopulatedConstructorArg();
  arg.deps=Optional.of(ImmutableSortedSet.<BuildTarget>of());
  arg.mainModule=Optional.absent();
  arg.main=Optional.<SourcePath>of(new BuildTargetSourcePath(genrule.getBuildTarget()));
  arg.baseModule=Optional.absent();
  arg.zipSafe=Optional.absent();
  arg.buildArgs=Optional.absent();
  BuildRule rule=desc.createBuildRule(TargetGraph.EMPTY,params,resolver,arg);
  assertEquals(ImmutableSortedSet.<BuildRule>of(genrule),rule.getDeps());
}
