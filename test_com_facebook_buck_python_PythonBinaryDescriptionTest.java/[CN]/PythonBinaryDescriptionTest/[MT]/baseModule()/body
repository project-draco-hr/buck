{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bin");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  String mainName="main.py";
  PythonBinaryDescription desc=new PythonBinaryDescription(PEX_PATH,PEX_EXECUTER_PATH,PEX_EXTENSION,new PythonEnvironment(Paths.get("python"),PythonVersion.of("2.5")),CXX_PLATFORM,CXX_PLATFORMS);
  PythonBinaryDescription.Arg arg=desc.createUnpopulatedConstructorArg();
  arg.deps=Optional.of(ImmutableSortedSet.<BuildTarget>of());
  arg.mainModule=Optional.absent();
  arg.main=Optional.<SourcePath>of(new TestSourcePath("foo/" + mainName));
  arg.zipSafe=Optional.absent();
  arg.buildArgs=Optional.absent();
  arg.baseModule=Optional.absent();
  PythonBinary normalRule=desc.createBuildRule(TargetGraph.EMPTY,params,resolver,arg);
  assertEquals(PythonUtil.toModuleName(target,target.getBasePath().resolve(mainName).toString()),normalRule.getMainModule());
  arg.baseModule=Optional.of("blah");
  PythonBinary baseModuleRule=desc.createBuildRule(TargetGraph.EMPTY,params,resolver,arg);
  assertEquals(PythonUtil.toModuleName(target,Paths.get(arg.baseModule.get()).resolve(mainName).toString()),baseModuleRule.getMainModule());
}
