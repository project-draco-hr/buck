{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bin");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  PythonBuckConfig config=new PythonBuckConfig(new FakeBuckConfig(ImmutableMap.of("python",ImmutableMap.of("pex_extension",".different_extension"))),new AlwaysFoundExecutableFinder());
  PythonBinaryDescription desc=new PythonBinaryDescription(config,PYTHON_ENV,CXX_PLATFORM,CXX_PLATFORMS);
  PythonBinaryDescription.Arg arg=desc.createUnpopulatedConstructorArg();
  arg.deps=Optional.of(ImmutableSortedSet.<BuildTarget>of());
  arg.mainModule=Optional.of("main");
  arg.main=Optional.absent();
  arg.baseModule=Optional.absent();
  arg.zipSafe=Optional.absent();
  arg.buildArgs=Optional.absent();
  PythonBinary rule=desc.createBuildRule(TargetGraph.EMPTY,params,resolver,arg);
  assertThat(Preconditions.checkNotNull(rule.getPathToOutput()).toString(),Matchers.endsWith(".different_extension"));
}
