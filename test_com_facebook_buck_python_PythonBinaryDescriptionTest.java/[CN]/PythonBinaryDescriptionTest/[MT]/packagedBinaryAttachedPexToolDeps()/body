{
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bin");
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  final Genrule pexTool=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:pex_tool")).setOut("pex-tool").build(resolver);
  PythonBuckConfig config=new PythonBuckConfig(FakeBuckConfig.builder().build(),new AlwaysFoundExecutableFinder()){
    @Override public PackageStyle getPackageStyle(){
      return PackageStyle.STANDALONE;
    }
    @Override public Tool getPexTool(    BuildRuleResolver resolver){
      return new CommandTool.Builder().addArg(new SourcePathArg(new SourcePathResolver(resolver),new BuildTargetSourcePath(pexTool.getBuildTarget()))).build();
    }
  }
;
  PythonBinaryBuilder builder=new PythonBinaryBuilder(target,config,PythonTestUtils.PYTHON_PLATFORMS,CxxPlatformUtils.DEFAULT_PLATFORM,CxxPlatformUtils.DEFAULT_PLATFORMS);
  PythonPackagedBinary binary=(PythonPackagedBinary)builder.setMainModule("main").build(resolver);
  assertThat(binary.getDeps(),Matchers.hasItem(pexTool));
}
