{
  Preconditions.checkArgument(Sets.intersection(baseTarget.getFlavors(),Sets.union(Type.FLAVOR_VALUES,cxxPlatforms.getFlavors())).isEmpty());
  BuildTarget target=baseTarget.withFlavors(depType == Linker.LinkableDepType.STATIC ? Type.STATIC.getFlavor() : Type.STATIC_PIC.getFlavor(),cxxPlatform.getFlavor());
  Optional<Archive> archive=resolver.getRuleOptionalWithType(target,Archive.class);
  if (archive.isPresent()) {
    return archive.get();
  }
  return resolver.addToIndex(createStaticLibrary(target,baseParams,resolver,pathResolver,cxxPlatform,args,depType));
}
