{
  Preconditions.checkArgument(Sets.intersection(baseTarget.getFlavors(),Sets.union(Type.FLAVOR_VALUES,cxxPlatforms.getFlavors())).isEmpty());
  BuildTarget target=baseTarget.withFlavors(Type.SHARED.getFlavor(),cxxPlatform.getFlavor());
  Optional<HaskellLinkRule> linkRule=resolver.getRuleOptionalWithType(target,HaskellLinkRule.class);
  if (linkRule.isPresent()) {
    return linkRule.get();
  }
  return resolver.addToIndex(createSharedLibrary(target,baseParams,resolver,pathResolver,cxxPlatform,args));
}
