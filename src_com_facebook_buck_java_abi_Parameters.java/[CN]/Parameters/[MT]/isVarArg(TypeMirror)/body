{
  if (!(type instanceof ArrayType)) {
    return false;
  }
  try {
    Method isVarargs=type.getClass().getMethod("isVarargs");
    isVarargs.setAccessible(true);
    Object value=isVarargs.invoke(type);
    if (value == null) {
      return false;
    }
    return (Boolean)value;
  }
 catch (  IllegalAccessException|InvocationTargetException|NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
}
