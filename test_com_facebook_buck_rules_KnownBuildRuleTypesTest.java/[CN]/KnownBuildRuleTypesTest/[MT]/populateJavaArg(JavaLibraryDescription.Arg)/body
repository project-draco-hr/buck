{
  arg.srcs=Optional.of(ImmutableSortedSet.<SourcePath>of());
  arg.resources=Optional.of(ImmutableSortedSet.<SourcePath>of());
  arg.source=Optional.absent();
  arg.target=Optional.absent();
  arg.proguardConfig=Optional.absent();
  arg.annotationProcessorDeps=Optional.of(ImmutableSortedSet.<BuildRule>of());
  arg.annotationProcessorParams=Optional.of(ImmutableList.<String>of());
  arg.annotationProcessors=Optional.of(ImmutableSet.<String>of());
  arg.annotationProcessorOnly=Optional.absent();
  arg.postprocessClassesCommands=Optional.of(ImmutableList.<String>of());
  arg.resourcesRoot=Optional.absent();
  arg.providedDeps=Optional.of(ImmutableSortedSet.<BuildRule>of());
  arg.exportedDeps=Optional.of(ImmutableSortedSet.<BuildRule>of());
  arg.deps=Optional.of(ImmutableSortedSet.<BuildRule>of());
}
