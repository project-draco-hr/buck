{
  final File javac=temporaryFolder.newFile();
  assertTrue(javac.setExecutable(true));
  ImmutableMap<String,ImmutableMap<String,String>> sections=ImmutableMap.of("tools",ImmutableMap.of("javac",javac.toString()));
  FakeBuckConfig buckConfig=new FakeBuckConfig(sections);
  KnownBuildRuleTypes buildRuleTypes=DefaultKnownBuildRuleTypes.getDefaultKnownBuildRuleTypes(new FakeProjectFilesystem());
  DefaultJavaLibrary libraryRule=createJavaLibrary(buildRuleTypes);
  ProcessExecutor processExecutor=createExecutor(javac.toString(),"fakeVersion 0.1");
  KnownBuildRuleTypes configuredBuildRuleTypes=KnownBuildRuleTypes.createBuilder(buckConfig,processExecutor,new FakeAndroidDirectoryResolver(),Optional.<Path>absent()).build();
  DefaultJavaLibrary configuredRule=createJavaLibrary(configuredBuildRuleTypes);
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver());
  Path javacPath=javac.toPath();
  DefaultRuleKeyBuilderFactory factory=new DefaultRuleKeyBuilderFactory(new FakeFileHashCache(ImmutableMap.of(javacPath,MorePaths.asByteSource(javacPath).hash(Hashing.sha1()))),resolver);
  RuleKey configuredKey=factory.newInstance(configuredRule).build();
  RuleKey libraryKey=factory.newInstance(libraryRule).build();
  assertNotEquals(libraryKey,configuredKey);
}
