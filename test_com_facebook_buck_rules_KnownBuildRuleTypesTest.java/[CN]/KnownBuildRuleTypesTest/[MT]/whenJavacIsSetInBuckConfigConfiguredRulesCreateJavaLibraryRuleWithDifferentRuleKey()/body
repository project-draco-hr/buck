{
  final Path javac;
  if (Platform.detect() == Platform.WINDOWS) {
    javac=Paths.get("C:/Windows/system32/rundll32.exe");
  }
 else {
    javac=temporaryFolder.newExecutableFile();
  }
  ProjectFilesystem filesystem=new ProjectFilesystem(temporaryFolder.getRoot());
  ImmutableMap<String,ImmutableMap<String,String>> sections=ImmutableMap.of("tools",ImmutableMap.of("javac",javac.toString()));
  BuckConfig buckConfig=FakeBuckConfig.builder().setFilesystem(filesystem).setSections(sections).build();
  KnownBuildRuleTypes buildRuleTypes=DefaultKnownBuildRuleTypes.getDefaultKnownBuildRuleTypes(filesystem,environment);
  DefaultJavaLibrary libraryRule=createJavaLibrary(buildRuleTypes);
  ProcessExecutor processExecutor=createExecutor(javac.toString(),"fakeVersion 0.1");
  KnownBuildRuleTypes configuredBuildRuleTypes=KnownBuildRuleTypes.createBuilder(buckConfig,processExecutor,new FakeAndroidDirectoryResolver()).build();
  DefaultJavaLibrary configuredRule=createJavaLibrary(configuredBuildRuleTypes);
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  FakeFileHashCache hashCache=new FakeFileHashCache(ImmutableMap.of(javac,MorePaths.asByteSource(javac).hash(Hashing.sha1())));
  RuleKey configuredKey=new DefaultRuleKeyBuilderFactory(0,hashCache,resolver).build(configuredRule);
  RuleKey libraryKey=new DefaultRuleKeyBuilderFactory(0,hashCache,resolver).build(libraryRule);
  assertNotEquals(libraryKey,configuredKey);
}
