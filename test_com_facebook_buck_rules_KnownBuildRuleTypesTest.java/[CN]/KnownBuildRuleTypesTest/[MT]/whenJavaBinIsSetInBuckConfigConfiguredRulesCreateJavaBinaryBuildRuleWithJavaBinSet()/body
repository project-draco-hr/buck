{
  String javaBin="/usr/bin/my_java_wrapper.sh";
  ImmutableMap<String,ImmutableMap<String,String>> sections=ImmutableMap.of("java",ImmutableMap.of("java_bin",javaBin));
  FakeBuckConfig buckConfig=new FakeBuckConfig(sections);
  ProcessExecutor processExecutor=createExecutor();
  KnownBuildRuleTypes buildRuleTypes=KnownBuildRuleTypes.createBuilder(buckConfig,processExecutor,new FakeAndroidDirectoryResolver(),Optional.<Path>absent()).build();
  JavaBinaryDescription description=(JavaBinaryDescription)buildRuleTypes.getDescription(JavaBinaryDescription.TYPE);
  JavaBinaryDescription.Args arg=new JavaBinaryDescription.Args();
  arg.deps=Optional.<ImmutableSortedSet<BuildTarget>>absent();
  arg.mainClass=Optional.of("AClass");
  arg.manifestFile=Optional.<SourcePath>absent();
  arg.mergeManifests=Optional.<Boolean>absent();
  arg.metaInfDirectory=Optional.<Path>absent();
  arg.blacklist=Optional.<ImmutableSortedSet<String>>absent();
  JavaBinary rule=(JavaBinary)description.createBuildRule(TargetGraph.EMPTY,buildRuleParams,new BuildRuleResolver(),arg);
  BuildRuleResolver buildResolver=new BuildRuleResolver();
  SourcePathResolver sourceResolver=new SourcePathResolver(buildResolver);
  buildResolver.addToIndex(rule);
  ImmutableList<String> args=rule.getExecutableCommand().getCommandPrefix(sourceResolver);
  assertThat(args.get(0),is(equalTo(javaBin)));
}
