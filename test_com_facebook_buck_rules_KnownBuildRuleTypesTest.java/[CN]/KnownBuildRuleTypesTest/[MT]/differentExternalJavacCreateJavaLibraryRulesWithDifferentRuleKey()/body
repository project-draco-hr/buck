{
  final File javac=temporaryFolder.newFile();
  javac.setExecutable(true);
  Map<String,Map<String,String>> sections=ImmutableMap.of("tools",(Map<String,String>)ImmutableMap.of("javac",javac.toString()));
  FakeBuckConfig buckConfig=new FakeBuckConfig(sections);
  KnownBuildRuleTypes configuredBuildRuleTypes1=KnownBuildRuleTypes.createBuilder(buckConfig,new FakeAndroidDirectoryResolver(),new JavaCompilerEnvironment(buckConfig.getJavac(),Optional.of(new JavacVersion("fakeVersion 0.1")))).build();
  BuildRuleFactory<?> configuredFactory1=configuredBuildRuleTypes1.getFactory(JavaLibraryDescription.TYPE);
  BuildRule configuredRule1=configuredFactory1.newInstance(params).build(new BuildRuleResolver());
  KnownBuildRuleTypes configuredBuildRuleTypes2=KnownBuildRuleTypes.createBuilder(buckConfig,new FakeAndroidDirectoryResolver(),new JavaCompilerEnvironment(buckConfig.getJavac(),Optional.of(new JavacVersion("fakeVersion 0.2")))).build();
  BuildRuleFactory<?> configuredFactory2=configuredBuildRuleTypes2.getFactory(JavaLibraryDescription.TYPE);
  BuildRule configuredRule2=configuredFactory2.newInstance(params).build(new BuildRuleResolver());
  assertNotEquals(configuredRule1.getRuleKey(),configuredRule2.getRuleKey());
}
