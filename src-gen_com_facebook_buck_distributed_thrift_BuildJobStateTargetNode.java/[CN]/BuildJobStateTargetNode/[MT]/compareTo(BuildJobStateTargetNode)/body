{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetFileSystemRootIndex()).compareTo(other.isSetFileSystemRootIndex());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFileSystemRootIndex()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.fileSystemRootIndex,other.fileSystemRootIndex);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRawNode()).compareTo(other.isSetRawNode());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRawNode()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rawNode,other.rawNode);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBuildTarget()).compareTo(other.isSetBuildTarget());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBuildTarget()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.buildTarget,other.buildTarget);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
