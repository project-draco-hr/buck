{
  buildTargetTypeCoercer=new BuildTargetTypeCoercer();
  sourcePathTypeCoercer=new SourcePathTypeCoercer(buildTargetTypeCoercer,pathTypeCoercer);
  sourceWithFlagsTypeCoercer=new SourceWithFlagsTypeCoercer(sourcePathTypeCoercer,new ListTypeCoercer<>(stringTypeCoercer));
  ocamlSourceTypeCoercer=new OCamlSourceTypeCoercer(sourcePathTypeCoercer);
  nonContainerTypeCoercers=new TypeCoercer<?>[]{labelTypeCoercer,pathTypeCoercer,sourcePathTypeCoercer,buildTargetTypeCoercer,buildTargetPatternTypeCoercer,stringTypeCoercer,new IdentityTypeCoercer<>(Boolean.class),new NumberTypeCoercer<>(Integer.class),new NumberTypeCoercer<>(Double.class),new NumberTypeCoercer<>(Float.class),new NumberTypeCoercer<>(Long.class),new NumberTypeCoercer<>(Short.class),new NumberTypeCoercer<>(Byte.class),sourceWithFlagsTypeCoercer,ocamlSourceTypeCoercer,new BuildConfigFieldsTypeCoercer(),new UriTypeCoercer(),new FrameworkPathTypeCoercer(sourcePathTypeCoercer)};
}
