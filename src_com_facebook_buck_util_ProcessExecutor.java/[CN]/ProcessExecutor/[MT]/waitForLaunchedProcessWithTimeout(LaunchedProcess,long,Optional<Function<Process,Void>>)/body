{
  Preconditions.checkState(launchedProcess instanceof LaunchedProcessImpl);
  final Process process=((LaunchedProcessImpl)launchedProcess).process;
  final AtomicBoolean timedOut=new AtomicBoolean(false);
  Thread waiter=new Thread(new Runnable(){
    @Override public void run(){
      try {
        process.waitFor();
      }
 catch (      InterruptedException e) {
        timedOut.set(true);
        if (timeOutHandler.isPresent()) {
          try {
            timeOutHandler.get().apply(process);
          }
 catch (          RuntimeException e2) {
            LOG.error(e2,"timeOutHandler threw an Exception!");
          }
        }
      }
    }
  }
);
  waiter.start();
  waiter.join(millis);
  waiter.interrupt();
  waiter.join();
  int exitCode=1;
  if (!timedOut.get()) {
    exitCode=process.exitValue();
  }
  return new Result(exitCode,timedOut.get(),Optional.<String>absent(),Optional.<String>absent());
}
