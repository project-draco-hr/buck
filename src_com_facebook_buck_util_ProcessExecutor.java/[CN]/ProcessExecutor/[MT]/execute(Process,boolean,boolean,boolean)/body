{
  @SuppressWarnings("resource") PrintStream stdOutToWriteTo=shouldPrintStdOut ? stdOutStream : new CapturingPrintStream();
  InputStreamConsumer stdOut=new InputStreamConsumer(process.getInputStream(),stdOutToWriteTo,ansi);
  @SuppressWarnings("resource") PrintStream stdErrToWriteTo=shouldPrintStdErr ? stdErrStream : new CapturingPrintStream();
  InputStreamConsumer stdErr=new InputStreamConsumer(process.getErrorStream(),stdErrToWriteTo,ansi);
  Thread stdOutConsumer=Threads.namedThread("ProcessExecutor (stdOut)",stdOut);
  stdOutConsumer.start();
  Thread stdErrConsumer=Threads.namedThread("ProcessExecutor (stdErr)",stdErr);
  stdErrConsumer.start();
  try {
    process.waitFor();
    stdOutConsumer.join();
    stdErrConsumer.join();
  }
 catch (  InterruptedException e) {
    return new Result(1,null,null);
  }
  String stdoutText=getDataIfNotPrinted(stdOutToWriteTo,shouldPrintStdOut);
  String stderrText=getDataIfNotPrinted(stdErrToWriteTo,shouldPrintStdErr);
  int exitCode=process.exitValue();
  if (exitCode != 0 && !isSilent) {
    if (!shouldPrintStdOut) {
      stdOutStream.print(stdoutText);
    }
    if (!shouldPrintStdErr) {
      stdErrStream.print(stderrText);
    }
  }
  return new Result(exitCode,stdoutText,stderrText);
}
