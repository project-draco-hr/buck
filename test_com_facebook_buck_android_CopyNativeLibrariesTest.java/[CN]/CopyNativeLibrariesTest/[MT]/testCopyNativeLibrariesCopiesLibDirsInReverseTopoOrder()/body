{
  BuildTarget target=BuildTargetFactory.newInstance("//:test");
  CopyNativeLibraries copyNativeLibraries=new CopyNativeLibraries(new FakeBuildRuleParamsBuilder(target).build(),new SourcePathResolver(new BuildRuleResolver()),ImmutableSet.<SourcePath>of(new TestSourcePath("lib1"),new TestSourcePath("lib2")),ImmutableSet.<TargetCpuType>of(),ImmutableMap.<TargetCpuType,NdkCxxPlatform>of(),ImmutableMap.<Pair<TargetCpuType,String>,SourcePath>of(),ImmutableMap.<Pair<TargetCpuType,String>,SourcePath>of());
  ImmutableList<Step> steps=copyNativeLibraries.getBuildSteps(FakeBuildContext.NOOP_CONTEXT,new FakeBuildableContext());
  Iterable<String> descriptions=Iterables.transform(steps,new Function<Step,String>(){
    @Override public String apply(    Step step){
      return step.getDescription(TestExecutionContext.newInstance());
    }
  }
);
  assertThat("lib1 contents should be copied *after* lib2",Iterables.indexOf(descriptions,Predicates.containsPattern("lib1")),Matchers.greaterThan(Iterables.indexOf(descriptions,Predicates.containsPattern("lib2"))));
}
