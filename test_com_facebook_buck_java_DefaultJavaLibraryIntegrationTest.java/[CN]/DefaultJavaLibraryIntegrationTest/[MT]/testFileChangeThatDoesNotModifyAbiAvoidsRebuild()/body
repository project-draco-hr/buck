{
  workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"rulekey_changed_while_abi_stable",tmp);
  workspace.setUp();
  ProcessResult buildResult=workspace.runBuckCommand("build","//:biz");
  buildResult.assertSuccess("Successful build should exit with 0.");
  String utilRuleKey=getContents("buck-out/bin/.util/metadata/RULE_KEY");
  String utilAbiRuleKey=getContents("buck-out/bin/.util/metadata/ABI_RULE_KEY");
  String utilAbi=getContents("buck-out/bin/.util/metadata/ABI_KEY");
  String bizRuleKey=getContents("buck-out/bin/.biz/metadata/RULE_KEY");
  String bizAbiRuleKey=getContents("buck-out/bin/.biz/metadata/ABI_RULE_KEY");
  String bizAbi=getContents("buck-out/bin/.biz/metadata/ABI_KEY");
  long utilJarSize=Files.size(workspace.getPath("buck-out/gen/lib__util__output/util.jar"));
  FileTime bizJarLastModified=Files.getLastModifiedTime(workspace.getPath("buck-out/gen/lib__biz__output/biz.jar"));
  String originalUtilJava=getContents("Util.java");
  String replacementContents=originalUtilJava.replace("Hello World","Hola Mundo");
  Files.write(workspace.getPath("Util.java"),replacementContents.getBytes(UTF_8));
  ProcessResult buildResult2=workspace.runBuckCommand("build","//:biz");
  buildResult2.assertSuccess("Successful build should exit with 0.");
  assertThat(utilRuleKey,not(equalTo(getContents("buck-out/bin/.util/metadata/RULE_KEY"))));
  assertThat(utilAbiRuleKey,not(equalTo(getContents("buck-out/bin/.util/metadata/ABI_RULE_KEY"))));
  assertEquals(utilAbi,getContents("buck-out/bin/.util/metadata/ABI_KEY"));
  assertThat(bizRuleKey,not(equalTo(getContents("buck-out/bin/.biz/metadata/RULE_KEY"))));
  assertEquals(bizAbiRuleKey,getContents("buck-out/bin/.biz/metadata/ABI_RULE_KEY"));
  assertEquals(bizAbi,getContents("buck-out/bin/.biz/metadata/ABI_KEY"));
  assertThat("util.jar should have been rewritten, so its file size should have changed.",utilJarSize,not(equalTo(Files.size(workspace.getPath("buck-out/gen/lib__util__output/util.jar")))));
  assertEquals("biz.jar should not have been rewritten, so its last-modified time should be the same.",bizJarLastModified,Files.getLastModifiedTime(workspace.getPath("buck-out/gen/lib__biz__output/biz.jar")));
  ProcessResult buildResult3=workspace.runBuckCommand("build","//:biz");
  buildResult3.assertSuccess("Successful build should exit with 0.");
}
