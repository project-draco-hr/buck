{
  Iterator<String> expectedIter=expected.iterator();
  Iterator<Step> observedIter=observed.iterator();
  Joiner joiner=Joiner.on(" ");
  while (expectedIter.hasNext() && observedIter.hasNext()) {
    String expectedShellCommand=expectedIter.next();
    Step observedStep=observedIter.next();
    if (!(observedStep instanceof ShellStep)) {
      failWith(userMessage,"Observed command must be a shell command: " + observedStep);
    }
    ShellStep shellCommand=(ShellStep)observedStep;
    String observedShellCommand=joiner.join(shellCommand.getShellCommand(context));
    assertEquals(userMessage,expectedShellCommand,observedShellCommand);
  }
  if (expectedIter.hasNext()) {
    failWith(userMessage,"Extra expected command: " + expectedIter.next());
  }
  if (observedIter.hasNext()) {
    failWith(userMessage,"Extra observed command: " + observedIter.next());
  }
}
