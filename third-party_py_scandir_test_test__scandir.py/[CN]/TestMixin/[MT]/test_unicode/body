def test_unicode(self):
    path = os.path.join(TEST_PATH, u'subdir')
    if (not IS_PY3):
        path = path.decode(sys.getfilesystemencoding(), u'replace')
    self.assertTrue(isinstance(path, str))
    entries = [e for e in self.scandir_func(path) if e.name.startswith(u'unicod')]
    self.assertEqual(len(entries), 1)
    entry = entries[0]
    self.assertTrue(isinstance(entry.name, str))
    self.assertTrue(isinstance(entry.path, str))
    entry_name = u'unicod\u018f.txt'
    self.assertEqual(entry.name, entry_name)
    self.assertEqual(entry.path, os.path.join(path, u'unicod\u018f.txt'))
    path = os.path.join(TEST_PATH, u'subdir', u'unidir\u018f')
    self.assertTrue(isinstance(path, str))
    entries = list(self.scandir_func(path))
    self.assertEqual(len(entries), 1)
    entry = entries[0]
    self.assertTrue(isinstance(entry.name, str))
    self.assertTrue(isinstance(entry.path, str))
    self.assertEqual(entry.name, u'file1.txt')
    self.assertEqual(entry.path, os.path.join(path, u'file1.txt'))
