{
  Path aFile=tmpDir.newFile().toPath();
  Files.write(aFile,"hello world".getBytes(Charsets.UTF_8));
  AbstractBuildRule modifiedSymlinkTreeBuildRule=new HeaderSymlinkTreeWithHeaderMap(new FakeBuildRuleParamsBuilder(buildTarget).build(),new SourcePathResolver(new BuildRuleResolver()),symlinkTreeRoot,headerMapPath,ImmutableMap.<Path,SourcePath>of(Paths.get("different/link"),new PathSourcePath(projectFilesystem,MorePaths.relativize(tmpDir.getRoot().toPath(),aFile))));
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(ImmutableSet.of(symlinkTreeBuildRule,modifiedSymlinkTreeBuildRule)));
  RuleKeyBuilderFactory ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(FakeFileHashCache.createFromStrings(ImmutableMap.<String,String>of()),resolver);
  RuleKey.Builder builder1=ruleKeyBuilderFactory.newInstance(symlinkTreeBuildRule);
  RuleKey.Builder builder2=ruleKeyBuilderFactory.newInstance(modifiedSymlinkTreeBuildRule);
  RuleKey pair1=builder1.build();
  RuleKey pair2=builder2.build();
  assertNotEquals(pair1,pair2);
}
