{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(9);
  if (incoming.get(0)) {
    struct.wasSuccessful=iprot.readBool();
    struct.setWasSuccessfulIsSet(true);
  }
  if (incoming.get(1)) {
    struct.errorMessage=iprot.readString();
    struct.setErrorMessageIsSet(true);
  }
  if (incoming.get(2)) {
    struct.type=com.facebook.buck.distributed.thrift.FrontendRequestType.findByValue(iprot.readI32());
    struct.setTypeIsSet(true);
  }
  if (incoming.get(3)) {
    struct.startBuild=new StartBuildResponse();
    struct.startBuild.read(iprot);
    struct.setStartBuildIsSet(true);
  }
  if (incoming.get(4)) {
    struct.buildStatus=new BuildStatusResponse();
    struct.buildStatus.read(iprot);
    struct.setBuildStatusIsSet(true);
  }
  if (incoming.get(5)) {
    struct.casContainsResponse=new CASContainsResponse();
    struct.casContainsResponse.read(iprot);
    struct.setCasContainsResponseIsSet(true);
  }
  if (incoming.get(6)) {
    struct.createBuildResponse=new CreateBuildResponse();
    struct.createBuildResponse.read(iprot);
    struct.setCreateBuildResponseIsSet(true);
  }
  if (incoming.get(7)) {
    struct.fetchSourceFilesResponse=new FetchSourceFilesResponse();
    struct.fetchSourceFilesResponse.read(iprot);
    struct.setFetchSourceFilesResponseIsSet(true);
  }
  if (incoming.get(8)) {
    struct.fetchBuildGraphResponse=new FetchBuildGraphResponse();
    struct.fetchBuildGraphResponse.read(iprot);
    struct.setFetchBuildGraphResponseIsSet(true);
  }
}
