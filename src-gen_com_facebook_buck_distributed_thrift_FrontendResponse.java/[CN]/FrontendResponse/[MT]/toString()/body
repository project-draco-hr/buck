{
  StringBuilder sb=new StringBuilder("FrontendResponse(");
  boolean first=true;
  if (isSetWasSuccessful()) {
    sb.append("wasSuccessful:");
    sb.append(this.wasSuccessful);
    first=false;
  }
  if (isSetErrorMessage()) {
    if (!first)     sb.append(", ");
    sb.append("errorMessage:");
    if (this.errorMessage == null) {
      sb.append("null");
    }
 else {
      sb.append(this.errorMessage);
    }
    first=false;
  }
  if (isSetType()) {
    if (!first)     sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    }
 else {
      sb.append(this.type);
    }
    first=false;
  }
  if (isSetStartBuildResponse()) {
    if (!first)     sb.append(", ");
    sb.append("startBuildResponse:");
    if (this.startBuildResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.startBuildResponse);
    }
    first=false;
  }
  if (isSetBuildStatusResponse()) {
    if (!first)     sb.append(", ");
    sb.append("buildStatusResponse:");
    if (this.buildStatusResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.buildStatusResponse);
    }
    first=false;
  }
  if (isSetCasContainsResponse()) {
    if (!first)     sb.append(", ");
    sb.append("casContainsResponse:");
    if (this.casContainsResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.casContainsResponse);
    }
    first=false;
  }
  if (isSetCreateBuildResponse()) {
    if (!first)     sb.append(", ");
    sb.append("createBuildResponse:");
    if (this.createBuildResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.createBuildResponse);
    }
    first=false;
  }
  if (isSetFetchSourceFilesResponse()) {
    if (!first)     sb.append(", ");
    sb.append("fetchSourceFilesResponse:");
    if (this.fetchSourceFilesResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.fetchSourceFilesResponse);
    }
    first=false;
  }
  if (isSetFetchBuildGraphResponse()) {
    if (!first)     sb.append(", ");
    sb.append("fetchBuildGraphResponse:");
    if (this.fetchBuildGraphResponse == null) {
      sb.append("null");
    }
 else {
      sb.append(this.fetchBuildGraphResponse);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
