{
  return FluentIterable.from(targetNodes).transformAndConcat(AppleBuildRules.newRecursiveRuleDependencyTransformer(targetGraph,AppleBuildRules.RecursiveDependenciesMode.LINKING,ImmutableSet.of(AppleLibraryDescription.TYPE,CxxLibraryDescription.TYPE))).append(targetNodes).transformAndConcat(new Function<TargetNode<?>,Iterable<String>>(){
    @Override public Iterable<String> apply(    TargetNode<?> input){
      return input.castArg(AppleNativeTargetDescriptionArg.class).transform(getTargetFrameworkSearchPaths(pathSetExtractor)).or(ImmutableSet.<String>of());
    }
  }
);
}
