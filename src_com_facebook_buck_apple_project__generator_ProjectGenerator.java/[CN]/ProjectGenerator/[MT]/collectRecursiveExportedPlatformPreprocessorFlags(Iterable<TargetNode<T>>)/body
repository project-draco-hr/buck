{
  return FluentIterable.from(targetNodes).transformAndConcat(AppleBuildRules.newRecursiveRuleDependencyTransformer(targetGraph,AppleBuildRules.RecursiveDependenciesMode.BUILDING,ImmutableSet.of(AppleLibraryDescription.TYPE,CxxLibraryDescription.TYPE))).append(targetNodes).transformAndConcat(new Function<TargetNode<?>,Iterable<Pair<Pattern,ImmutableList<String>>>>(){
    @Override public Iterable<Pair<Pattern,ImmutableList<String>>> apply(    TargetNode<?> input){
      return input.castArg(AppleNativeTargetDescriptionArg.class).transform(GET_EXPORTED_PLATFORM_PREPROCESSOR_FLAGS).or(ImmutableSet.<Pair<Pattern,ImmutableList<String>>>of());
    }
  }
);
}
