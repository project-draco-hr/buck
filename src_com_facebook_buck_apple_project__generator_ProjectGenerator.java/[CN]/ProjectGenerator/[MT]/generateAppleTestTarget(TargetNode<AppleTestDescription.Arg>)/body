{
  Optional<TargetNode<AppleBundleDescription.Arg>> testHostBundle;
  if (testTargetNode.getConstructorArg().testHostApp.isPresent()) {
    BuildTarget testHostBundleTarget=testTargetNode.getConstructorArg().testHostApp.get();
    TargetNode<?> testHostBundleNode=targetGraph.get(testHostBundleTarget);
    if (testHostBundleNode.getType() != AppleBundleDescription.TYPE) {
      throw new HumanReadableException("The test host target '%s' has the wrong type (%s), must be apple_bundle",testHostBundleTarget,testHostBundleNode.getType());
    }
    testHostBundle=Optional.of((TargetNode<AppleBundleDescription.Arg>)testHostBundleNode);
  }
 else {
    testHostBundle=Optional.absent();
  }
  if (testsToGenerateAsStaticLibraries.contains(testTargetNode)) {
    return Optional.<PBXTarget>of(generateAppleLibraryTarget(project,testTargetNode,testHostBundle));
  }
 else {
    return Optional.<PBXTarget>of(generateAppleBundleTarget(project,testTargetNode,testTargetNode,testHostBundle));
  }
}
