{
  ImmutableSet.Builder<Path> builder=ImmutableSet.builder();
  for (  TargetNode<?> input : AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,Optional.of(ImmutableSet.<BuildRuleType>of(HalideLibraryDescription.TYPE)))) {
    TargetNode<HalideLibraryDescription.Arg> halideNode=(TargetNode<HalideLibraryDescription.Arg>)input;
    BuildTarget buildTarget=halideNode.getBuildTarget();
    builder.add(pathRelativizer.outputDirToRootRelative(HalideCompile.headerOutputPath(buildTarget.withFlavors(HalideLibraryDescription.HALIDE_COMPILE_FLAVOR,defaultCxxPlatform.getFlavor()),projectFilesystem,halideNode.getConstructorArg().functionName).getParent()));
  }
  return builder.build();
}
