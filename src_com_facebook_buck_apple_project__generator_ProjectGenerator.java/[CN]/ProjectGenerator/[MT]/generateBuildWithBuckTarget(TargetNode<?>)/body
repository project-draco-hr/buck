{
  final BuildTarget buildTarget=targetNode.getBuildTarget();
  String buckTargetProductName=getXcodeTargetName(buildTarget) + BUILD_WITH_BUCK_POSTFIX;
  PBXAggregateTarget buildWithBuckTarget=new PBXAggregateTarget(buckTargetProductName);
  buildWithBuckTarget.setProductName(buckTargetProductName);
  PBXShellScriptBuildPhase buildShellScriptBuildPhase=new PBXShellScriptBuildPhase();
  buildShellScriptBuildPhase.setShellScript(getBuildWithBuckShellScript(targetNode));
  buildWithBuckTarget.getBuildPhases().add(buildShellScriptBuildPhase);
  if (targetNode.getType().equals(AppleBundleDescription.TYPE)) {
    PBXShellScriptBuildPhase codesignPhase=new PBXShellScriptBuildPhase();
    codesignPhase.setShellScript(getCodesignShellScript(targetNode));
    buildWithBuckTarget.getBuildPhases().add(codesignPhase);
  }
  TargetNode<CxxLibraryDescription.Arg> node=getAppleNativeNode(targetGraph,targetNode).get();
  ImmutableMap<String,ImmutableMap<String,String>> configs=getXcodeBuildConfigurationsForTargetNode(node,ImmutableMap.<String,String>of()).get();
  XCConfigurationList configurationList=new XCConfigurationList();
  PBXGroup group=project.getMainGroup().getOrCreateDescendantGroupByPath(FluentIterable.from(buildTarget.getBasePath()).transform(Functions.toStringFunction()).toList()).getOrCreateChildGroupByName(getXcodeTargetName(buildTarget));
  for (  String configurationName : configs.keySet()) {
    XCBuildConfiguration configuration=configurationList.getBuildConfigurationsByName().getUnchecked(configurationName);
    configuration.setBaseConfigurationReference(getConfigurationFileReference(group,getConfigurationNameToXcconfigPath(buildTarget).apply(configurationName)));
    NSDictionary inlineSettings=new NSDictionary();
    inlineSettings.put("HEADER_SEARCH_PATHS","");
    inlineSettings.put("LIBRARY_SEARCH_PATHS","");
    inlineSettings.put("FRAMEWORK_SEARCH_PATHS","");
    configuration.setBuildSettings(inlineSettings);
  }
  buildWithBuckTarget.setBuildConfigurationList(configurationList);
  project.getTargets().add(buildWithBuckTarget);
  targetNodeToGeneratedProjectTargetBuilder.put(targetNode,buildWithBuckTarget);
}
