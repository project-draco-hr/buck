{
  return FluentIterable.from(targetGraph.getNodes()).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      return input.getConstructorArg() instanceof AndroidResourceDescription.Arg;
    }
  }
).transform(new Function<TargetNode<?>,Path>(){
    @Override public Path apply(    TargetNode<?> input){
      return input.getBuildTarget().getBasePath();
    }
  }
).toSet();
}
