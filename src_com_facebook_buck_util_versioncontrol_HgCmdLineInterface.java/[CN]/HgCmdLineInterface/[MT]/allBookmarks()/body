{
  FluentIterable<String> allBookmarks=FluentIterable.of(executeCommand(ALL_BOOKMARKS_COMMAND).replaceAll("\\*","").split(" ")).filter(new Predicate<String>(){
    @Override public boolean apply(    String input){
      return !Strings.isNullOrEmpty(input);
    }
  }
);
  if (allBookmarks.size() % 2 != 0) {
    throw new VersionControlCommandFailedException("Unable to retrieve map of bookmarks");
  }
  ImmutableMap.Builder<String,String> allBookmarksMap=ImmutableMap.builder();
  for (int i=0; i < allBookmarks.size(); i=i + 2) {
    allBookmarksMap.put(allBookmarks.get(i),allBookmarks.get(i + 1));
  }
  return allBookmarksMap.build();
}
