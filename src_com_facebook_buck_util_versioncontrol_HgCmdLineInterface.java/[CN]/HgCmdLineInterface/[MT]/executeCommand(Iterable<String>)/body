{
  command=replaceTemplateValue(command,HG_CMD_TEMPLATE,hgCmd);
  ProcessExecutorParams processExecutorParams=ProcessExecutorParams.builder().setCommand(command).setDirectory(projectRoot).build();
  String commandString=commandAsString(command);
  LOG.debug("Executing command: " + commandString);
  try {
    Optional<String> resultString=processExecutor.launchAndExecute(processExecutorParams,ImmutableSet.of(ProcessExecutor.Option.EXPECTING_STD_OUT),Optional.<String>absent(),Optional.<Long>absent(),Optional.<Function<Process,Void>>absent()).getStdout();
    if (!resultString.isPresent()) {
      throw new VersionControlCommandFailedException("Received no output from launched process for command: " + commandString);
    }
    return cleanResultString(resultString.get());
  }
 catch (  IOException e) {
    throw new VersionControlCommandFailedException(e);
  }
}
