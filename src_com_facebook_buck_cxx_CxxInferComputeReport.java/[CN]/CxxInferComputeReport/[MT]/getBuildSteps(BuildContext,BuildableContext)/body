{
  buildableContext.recordArtifact(reportOutput);
  ImmutableSortedSet<Path> reportsToMergeFromDeps=FluentIterable.from(analysisToReport.getTransitiveAnalyzeRules()).transform(new Function<CxxInferAnalyze,Path>(){
    @Override public Path apply(    CxxInferAnalyze input){
      return input.getAbsolutePathToOutput();
    }
  }
).toSortedSet(Ordering.natural());
  ImmutableSortedSet<Path> reportsToMerge=ImmutableSortedSet.<Path>naturalOrder().addAll(reportsToMergeFromDeps).add(analysisToReport.getAbsolutePathToOutput()).build();
  return ImmutableList.<Step>builder().add(new MkdirStep(projectFilesystem,outputDirectory)).add(new JsonConcatenateStep(projectFilesystem,reportsToMerge,reportOutput,"infer-merge-reports","Merge Infer Reports")).build();
}
