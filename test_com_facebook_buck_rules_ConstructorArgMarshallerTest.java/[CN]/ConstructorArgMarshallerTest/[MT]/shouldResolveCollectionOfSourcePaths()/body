{
class Dto {
    public ImmutableSortedSet<SourcePath> srcs;
  }
  BuildTarget target=BuildTargetFactory.newInstance("//example/path:manifest");
  BuildRule rule=new FakeBuildRule(new BuildRuleType("py"),target);
  BuildRuleResolver resolver=new BuildRuleResolver(ImmutableMap.of(target,rule));
  Dto dto=new Dto();
  marshaller.populate(resolver,buildRuleFactoryParams(ImmutableMap.<String,Object>of("srcs",ImmutableList.of("main.py","lib/__init__.py","lib/manifest.py"))),dto);
  ImmutableSet<String> observedValues=FluentIterable.from(dto.srcs).transform(SourcePath.TO_REFERENCE).toSet();
  assertEquals(ImmutableSet.of("example/path/main.py","example/path/lib/__init__.py","example/path/lib/manifest.py"),observedValues);
}
