{
class Dto {
    public Optional<Set<BuildTarget>> deps;
    public Optional<Set<BuildTarget>> notdeps;
  }
  final String dep="//is/a/declared:dep";
  final String notDep="//is/not/a/declared:dep";
  BuildTarget declaredDep=BuildTargetFactory.newInstance(dep);
  Dto dto=new Dto();
  Map<String,Object> args=Maps.newHashMap();
  args.put("deps",ImmutableList.of(dep));
  args.put("notdeps",ImmutableList.of(notDep));
  ImmutableSet.Builder<BuildTarget> declaredDeps=ImmutableSet.builder();
  marshaller.populate(createCellRoots(filesystem),filesystem,buildRuleFactoryParams(),dto,declaredDeps,ImmutableSet.<VisibilityPattern>builder(),args);
  assertEquals(ImmutableSet.of(declaredDep),declaredDeps.build());
}
