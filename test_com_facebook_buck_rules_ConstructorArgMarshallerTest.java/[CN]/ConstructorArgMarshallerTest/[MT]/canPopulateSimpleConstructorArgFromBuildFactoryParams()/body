{
class Dto implements ConstructorArg {
    public String required;
    public Optional<String> notRequired;
    public int num;
    public boolean needed;
    public SourcePath aSrcPath;
    public Optional<SourcePath> notASrcPath;
    public Path aPath;
    public Optional<Path> notAPath;
  }
  ImmutableMap<String,Object> args=ImmutableMap.<String,Object>builder().put("required","cheese").put("notRequired","cake").put("num",42L).put("needed",true).put("aSrcPath",":path").put("aPath","./File.java").put("notAPath","./NotFile.java").build();
  Dto dto=new Dto();
  marshaller.populate(ruleResolver,filesystem,buildRuleFactoryParams(args),dto);
  assertEquals("cheese",dto.required);
  assertEquals("cake",dto.notRequired.get());
  assertEquals(42,dto.num);
  assertTrue(dto.needed);
  BuildTargetSourcePath expected=new BuildTargetSourcePath(BuildTargetFactory.newInstance("//example/path:path"));
  assertEquals(expected,dto.aSrcPath);
  assertEquals(Paths.get("example/path/NotFile.java"),dto.notAPath.get());
}
