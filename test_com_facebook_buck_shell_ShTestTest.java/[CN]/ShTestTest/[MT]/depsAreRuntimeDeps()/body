{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  BuildRule extraDep=new FakeBuildRule("//:extra_dep",pathResolver);
  BuildRule dep=new FakeBuildRule("//:dep",pathResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  ShTest shTest=new ShTest(new FakeBuildRuleParamsBuilder(target).setDeclaredDeps(ImmutableSortedSet.of(dep)).setExtraDeps(ImmutableSortedSet.of(extraDep)).build(),new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer())),new FakeSourcePath("run_test.sh"),ImmutableList.<Arg>of(),ImmutableMap.<String,Arg>of(),ImmutableSortedSet.<SourcePath>of(),Optional.<Long>absent(),ImmutableSet.<Label>of());
  assertThat(shTest.getRuntimeDeps(),Matchers.containsInAnyOrder(dep,extraDep));
}
