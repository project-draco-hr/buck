@staticmethod
def from_pyc(pyc):
    if (not HAS_MAGIC):
        raise CodeMarshaller.InvalidCode('Interpreter cannot unmarshal .pyc!')
    if ((not isinstance(pyc, compatibility_bytes)) and (not hasattr(pyc, 'read'))):
        raise CodeMarshaller.InvalidCode('CodeMarshaller.from_pyc expects a code or file-like object!')
    if (not isinstance(pyc, compatibility_bytes)):
        pyc = pyc.read()
    pyc_magic = struct.unpack('I', pyc[slice(*CodeMarshaller.MAGIC_RANGE)])[0]
    if (pyc_magic != CodeMarshaller.MAGIC):
        raise CodeMarshaller.InvalidCode(('Bad magic number!  Got 0x%X' % pyc_magic))
    stamp = time.localtime(struct.unpack('I', pyc[slice(*CodeMarshaller.TIMESTAMP_RANGE)])[0])
    try:
        code = marshal.loads(pyc[8:])
    except ValueError as e:
        raise CodeMarshaller.InvalidCode(('Unmarshaling error! %s' % e))
    return CodeMarshaller(code, stamp)
