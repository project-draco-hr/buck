{
  BuildTarget target=BuildTargetFactory.newInstance("//cheese:peas");
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  BuildRule rule=new EmptyRule(target);
  DefaultRuleKeyBuilderFactory factory=new DefaultRuleKeyBuilderFactory(new NullFileHashCache(),pathResolver);
  RuleKeyBuilder<RuleKey> builder=factory.newInstance(rule);
  builder.setReflectively("field","sausages");
  RuleKey expected=builder.build();
class Stringifiable {
    @Override public String toString(){
      return "sausages";
    }
  }
class StringifiedField extends EmptyRule {
    @AddToRuleKey(stringify=true) private Stringifiable field=new Stringifiable();
    public StringifiedField(    BuildTarget target){
      super(target);
    }
  }
  RuleKey seen=factory.build(new StringifiedField(target));
  assertEquals(expected,seen);
}
