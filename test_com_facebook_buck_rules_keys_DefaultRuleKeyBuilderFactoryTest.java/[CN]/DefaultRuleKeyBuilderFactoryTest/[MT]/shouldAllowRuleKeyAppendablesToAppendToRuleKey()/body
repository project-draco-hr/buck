{
  BuildTarget target=BuildTargetFactory.newInstance("//cheese:peas");
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  BuildRule rule=new EmptyRule(target);
  FileHashCache fileHashCache=new NullFileHashCache();
  DefaultRuleKeyBuilderFactory factory=new DefaultRuleKeyBuilderFactory(fileHashCache,pathResolver);
  RuleKey subKey=EmptyRuleKeyBuilder.newInstance(pathResolver,fileHashCache).setReflectively("cheese","brie").build().getRuleKeyWithoutDeps();
  RuleKey.Builder builder=factory.newInstance(rule);
  builder.setReflectively("field.appendableSubKey",subKey);
  RuleKeyPair expected=builder.build();
class AppendingField extends EmptyRule {
    @AddToRuleKey private Appender field=new Appender();
    public AppendingField(    BuildTarget target){
      super(target);
    }
  }
  RuleKey.Builder seen=factory.newInstance(new AppendingField(target));
  assertEquals(expected,seen.build());
}
