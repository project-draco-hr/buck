{
  BuildTarget target=BuildTargetFactory.newInstance("//cheese:peas");
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  BuildRule rule=new EmptyRule(target);
  DefaultRuleKeyBuilderFactory factory=new DefaultRuleKeyBuilderFactory(new NullFileHashCache());
  RuleKey.Builder builder=factory.newInstance(rule,pathResolver);
  builder.setReflectively("key","child");
  builder.setReflectively("key","parent");
  RuleKey.Builder.RuleKeyPair expected=builder.build();
class Parent extends EmptyRule {
    @AddToRuleKey private String key="parent";
    public Parent(    BuildTarget target){
      super(target);
    }
  }
class Child extends Parent {
    @AddToRuleKey private String key="child";
    public Child(    BuildTarget target){
      super(target);
    }
  }
  RuleKey.Builder seen=factory.newInstance(new Child(target),pathResolver);
  assertEquals(expected,seen.build());
}
