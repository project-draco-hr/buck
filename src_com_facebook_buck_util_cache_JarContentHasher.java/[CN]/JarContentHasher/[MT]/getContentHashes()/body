{
  Manifest manifest=filesystem.getJarManifest(jarRelativePath);
  if (manifest == null) {
    throw new UnsupportedOperationException("Cache does not know how to return hash codes for archive members except " + "when the archive contains a META-INF/MANIFEST.MF with " + HashingDeterministicJarWriter.DIGEST_ATTRIBUTE_NAME + " attributes for each file.");
  }
  ImmutableMap.Builder<Path,HashCodeAndFileType> builder=ImmutableMap.builder();
  for (  Map.Entry<String,Attributes> nameAttributesEntry : manifest.getEntries().entrySet()) {
    Path memberPath=Paths.get(nameAttributesEntry.getKey());
    Attributes attributes=nameAttributesEntry.getValue();
    String hashStringValue=attributes.getValue(HashingDeterministicJarWriter.DIGEST_ATTRIBUTE_NAME);
    if (hashStringValue == null) {
      continue;
    }
    HashCode memberHash=HashCode.fromString(hashStringValue);
    HashCodeAndFileType memberHashCodeAndFileType=HashCodeAndFileType.ofFile(memberHash);
    builder.put(memberPath,memberHashCodeAndFileType);
  }
  return builder.build();
}
