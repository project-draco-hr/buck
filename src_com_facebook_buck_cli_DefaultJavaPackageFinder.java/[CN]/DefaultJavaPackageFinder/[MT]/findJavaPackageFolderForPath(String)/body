{
  for (  String pathFromRoot : pathsFromRoot) {
    if (pathRelativeToProjectRoot.startsWith(pathFromRoot)) {
      int lastSlashIndex=pathRelativeToProjectRoot.lastIndexOf('/');
      Preconditions.checkState(lastSlashIndex >= 0,"Because pathFromRoot must end with a slash and is a prefix of " + "pathRelativeToProjectRoot, pathRelativeToProjectRoot must contain a slash.");
      return pathRelativeToProjectRoot.substring(pathFromRoot.length(),lastSlashIndex + 1);
    }
  }
  File directory;
  if (pathRelativeToProjectRoot.endsWith("/")) {
    directory=new File(pathRelativeToProjectRoot);
  }
 else {
    directory=new File(pathRelativeToProjectRoot).getParentFile();
  }
  Deque<String> parts=Lists.newLinkedList();
  while (directory != null && !pathElements.contains(directory.getName())) {
    parts.addFirst(directory.getName());
    directory=directory.getParentFile();
  }
  if (!parts.isEmpty()) {
    return Joiner.on('/').join(parts) + '/';
  }
 else {
    return "";
  }
}
