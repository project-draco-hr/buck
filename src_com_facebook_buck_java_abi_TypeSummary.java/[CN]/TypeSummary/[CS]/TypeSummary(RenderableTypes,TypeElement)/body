{
  StringBuilder builder=new StringBuilder();
  appendTypeSignature(builder,element);
  Set<String> nestedTypes=new TreeSet<>();
  Set<String> contained=new TreeSet<>();
  Set<String> enumValues=new LinkedHashSet<>();
  for (  Element enclosed : element.getEnclosedElements()) {
    StringBuilder elementBuilder=new StringBuilder();
    Renderable renderable=renderables.deriveFor(enclosed);
    renderable.appendTo(elementBuilder);
    if (renderable instanceof TypeSummary) {
      nestedTypes.add(elementBuilder.toString());
    }
 else     if (renderable instanceof EnumConstantSummary) {
      enumValues.add(elementBuilder.toString());
    }
 else {
      contained.add(elementBuilder.toString());
    }
  }
  for (  String value : enumValues) {
    builder.append(value);
  }
  for (  String text : contained) {
    builder.append(text);
  }
  if (!nestedTypes.isEmpty()) {
    builder.append("-----\n");
    Joiner.on("-----\n").appendTo(builder,nestedTypes);
  }
  summary=builder.toString();
}
