{
  int count=argCount();
  if (count == 0) {
    return RegisterSpecList.EMPTY;
  }
  int localIndex=getLocalIndex();
  RegisterSpecList sources;
  if (localIndex >= 0) {
    sources=new RegisterSpecList(1);
    sources.set(0,RegisterSpec.make(localIndex,arg(0)));
  }
 else {
    sources=new RegisterSpecList(count);
    int regAt=stackPointer;
    for (int i=0; i < count; i++) {
      RegisterSpec spec=RegisterSpec.make(regAt,arg(i));
      sources.set(i,spec);
      regAt+=spec.getCategory();
    }
switch (opcode) {
case ByteOps.IASTORE:
{
        if (count != 3) {
          throw new RuntimeException("shouldn't happen");
        }
        RegisterSpec array=sources.get(0);
        RegisterSpec index=sources.get(1);
        RegisterSpec value=sources.get(2);
        sources.set(0,value);
        sources.set(1,array);
        sources.set(2,index);
        break;
      }
case ByteOps.PUTFIELD:
{
      if (count != 2) {
        throw new RuntimeException("shouldn't happen");
      }
      RegisterSpec obj=sources.get(0);
      RegisterSpec value=sources.get(1);
      sources.set(0,value);
      sources.set(1,obj);
      break;
    }
}
}
sources.setImmutable();
return sources;
}
