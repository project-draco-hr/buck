{
  String statusText;
  Ansi.SeverityLevel severityLevel;
  if (isDryRun) {
    severityLevel=Ansi.SeverityLevel.WARNING;
    statusText="DRYRUN";
  }
 else   if (!isSuccess()) {
    if (hasPassingDependencies) {
      severityLevel=Ansi.SeverityLevel.ERROR;
      statusText="FAIL";
    }
 else {
      severityLevel=Ansi.SeverityLevel.WARNING;
      statusText="DROP";
    }
  }
 else {
    if (hasAssumptionViolations) {
      severityLevel=Ansi.SeverityLevel.WARNING;
      statusText="ASSUME";
    }
 else {
      if (testResults.isEmpty()) {
        severityLevel=Ansi.SeverityLevel.WARNING;
        statusText="NOTESTS";
      }
 else {
        severityLevel=Ansi.SeverityLevel.OK;
        statusText="PASS";
      }
    }
  }
  String status=ansi.asHighlightedStatusText(severityLevel,statusText);
  int paddingWidth=MAX_STATUS_WIDTH - statusText.length();
  String padding="";
  for (int position=0; position < paddingWidth; position++) {
    padding+=' ';
  }
  return String.format("%s%s %s %2d Passed  %2d Skipped  %2d Failed   %s",status,padding,!isCached ? TimeFormat.formatForConsole(totalTime,ansi) : ansi.asHighlightedStatusText(severityLevel,"CACHED"),getPassedCount(),skippedCount,failureCount,testCaseName);
}
