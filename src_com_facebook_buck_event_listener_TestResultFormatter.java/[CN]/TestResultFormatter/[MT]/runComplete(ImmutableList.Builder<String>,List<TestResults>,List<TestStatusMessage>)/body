{
  boolean isAllTestsPassed=true;
  boolean isAnyAssumptionViolated=false;
  ListMultimap<TestResults,TestCaseSummary> failingTests=ArrayListMultimap.create();
  int numFailures=0;
  int numTestResults=0;
  ImmutableList.Builder<Path> testLogPathsBuilder=ImmutableList.builder();
  for (  TestResults summary : completedResults) {
    testLogPathsBuilder.addAll(summary.getTestLogPaths());
    if (!summary.isSuccess()) {
      isAllTestsPassed=false;
      numFailures+=summary.getFailureCount();
      failingTests.putAll(summary,summary.getFailures());
    }
    for (    TestCaseSummary testCaseSummary : summary.getTestCases()) {
      numTestResults+=testCaseSummary.getFailureCount() + testCaseSummary.getPassedCount();
      if (testCaseSummary.hasAssumptionViolations()) {
        numTestResults+=testCaseSummary.getSkippedCount();
        isAnyAssumptionViolated=true;
        break;
      }
    }
  }
  ImmutableList<Path> testLogPaths=testLogPathsBuilder.build();
  if (numTestResults == 0) {
    addTo.add(ansi.asHighlightedFailureText("TESTS PASSED (NO TESTS RAN)"));
  }
 else   if (isAllTestsPassed) {
    if (testLogsPath.isPresent() && verbosity != Verbosity.SILENT) {
      try {
        if (MoreFiles.concatenateFiles(testLogsPath.get(),testLogPaths)) {
          addTo.add("Updated test logs: " + testLogsPath.get().toString());
        }
      }
 catch (      IOException e) {
        LOG.warn(e,"Could not concatenate test logs %s to %s",testLogPaths,testLogsPath.get());
      }
    }
    if (isAnyAssumptionViolated) {
      addTo.add(ansi.asHighlightedWarningText("TESTS PASSED (with some assumption violations)"));
    }
 else {
      addTo.add(ansi.asHighlightedSuccessText("TESTS PASSED"));
    }
  }
 else {
    if (!testStatusMessages.isEmpty()) {
      addTo.add("====TEST STATUS MESSAGES====");
      SimpleDateFormat timestampFormat=new SimpleDateFormat("[yyyy-MM-dd HH:mm:ss.SSS]",Locale.US);
      timestampFormat.setTimeZone(timeZone);
      for (      TestStatusMessage testStatusMessage : testStatusMessages) {
        addTo.add(String.format(locale,"%s[%s] %s",timestampFormat.format(new Date(testStatusMessage.getTimestampMillis())),testStatusMessage.getLevel(),testStatusMessage.getMessage()));
      }
    }
    addTo.add(ansi.asHighlightedFailureText(String.format(locale,"TESTS FAILED: %d %s",numFailures,numFailures == 1 ? "FAILURE" : "FAILURES")));
    for (    TestResults results : failingTests.keySet()) {
      addTo.add("Failed target: " + results.getBuildTarget().getFullyQualifiedName());
      for (      TestCaseSummary summary : failingTests.get(results)) {
        addTo.add(summary.toString());
      }
    }
  }
}
