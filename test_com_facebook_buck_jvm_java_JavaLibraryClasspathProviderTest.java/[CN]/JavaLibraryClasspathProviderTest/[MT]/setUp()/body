{
  filesystem=new FakeProjectFilesystem();
  ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  resolver=new SourcePathResolver(ruleResolver);
  basePath=filesystem.getRootPath();
  d=makeRule("//foo:d",ImmutableSet.of("foo","d.java"),ImmutableSet.<BuildRule>of(),ruleResolver,filesystem);
  sourcePathFunction=SourcePaths.toSourcePath(filesystem);
  b=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//foo:b")).setSrcs(ImmutableList.of(sourcePathFunction.apply(Paths.get("foo","b.java")))).setCmd("echo $(classpath //foo:d").setOut("b.out").build(ruleResolver);
  e=makeRule("//foo:e",ImmutableSet.of("foo","e.java"),ImmutableSet.<BuildRule>of(),ruleResolver,filesystem);
  c=makeRule("//foo:c",ImmutableSet.of("foo","c.java"),ImmutableSet.of(e),ImmutableSet.of(e),ruleResolver,filesystem);
  a=makeRule("//foo:a",ImmutableSet.of("foo","a.java"),ImmutableSet.of(b,c),ImmutableSet.of(c),ruleResolver,filesystem);
  z=makeRule("//foo:z",ImmutableSet.of("foo","a.java"),ImmutableSet.of(b,c),ruleResolver,filesystem);
}
