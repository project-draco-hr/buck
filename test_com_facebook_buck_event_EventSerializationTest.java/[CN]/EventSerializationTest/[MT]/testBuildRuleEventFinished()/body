{
  BuildRule rule=generateFakeBuildRule();
  BuildRuleEvent.Finished event=BuildRuleEvent.finished(rule,new FakeRuleKeyBuilderFactory(ImmutableMap.of(rule.getBuildTarget(),new RuleKey("aaaa"))),BuildRuleStatus.SUCCESS,CacheResult.miss(),Optional.<BuildRuleSuccessType>absent(),Optional.<HashCode>absent(),Optional.<Long>absent());
  event.configure(timestamp,nanoTime,threadId,buildId);
  String message=new ObjectMapper().writeValueAsString(event);
  assertJsonEquals("{\"timestamp\":%d,\"nanoTime\":%d,\"threadId\":%d,\"buildId\":\"%s\"," + "\"status\":\"SUCCESS\",\"cacheResult\":{\"type\":\"MISS\",\"cacheSource\":{" + "\"present\":false},\"cacheError\":{\"present\":false},"+ "\"metadata\":{\"present\":false}}, \"buildRule\":{\"type\":"+ "\"fake_build_rule\",\"name\":\"//fake:rule\"},"+ "\"type\":\"BuildRuleFinished\","+ "\"eventKey\":{\"value\":1024186770}}",message);
}
