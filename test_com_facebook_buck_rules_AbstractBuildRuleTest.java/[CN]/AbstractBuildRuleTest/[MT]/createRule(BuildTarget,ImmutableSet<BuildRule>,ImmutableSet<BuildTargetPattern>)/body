{
  Comparator<BuildRule> comparator=RetainOrderComparator.createComparator(deps);
  ImmutableSortedSet<BuildRule> sortedDeps=ImmutableSortedSet.copyOf(comparator,deps);
  BuildRuleParams buildRuleParams=new FakeBuildRuleParamsBuilder(buildTarget).setDeps(sortedDeps).setVisibility(visibilityPatterns).build();
  return new AbstractBuildRule(buildRuleParams){
    @Override public ImmutableList<Step> getBuildSteps(    BuildContext context,    BuildableContext buildableContext){
      return null;
    }
    @Override public Path getPathToOutputFile(){
      return null;
    }
    @Override protected Iterable<Path> getInputsToCompareToOutput(){
      return null;
    }
    @Override protected RuleKey.Builder appendDetailsToRuleKey(    RuleKey.Builder builder){
      return null;
    }
  }
;
}
