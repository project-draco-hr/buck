{
  BuildTarget libTarget=new BuildTarget("//lib","lib");
  BuildTarget targetInSpecifiedDirectory=new BuildTarget("//src/com/facebook","test");
  BuildTarget targetUnderSpecifiedDirectory=new BuildTarget("//src/com/facebook/buck","test");
  BuildTarget targetInOtherDirectory=new BuildTarget("//src/com/instagram","test");
  BuildTarget targetInParentDirectory=new BuildTarget("//","test");
  BuildRule directoryBuildRule=createRule(libTarget,noDeps,ImmutableSet.<BuildTargetPattern>of(new SubdirectoryBuildTargetPattern("src/com/facebook/")));
  assertTrue(directoryBuildRule.isVisibleTo(targetInSpecifiedDirectory));
  assertTrue(directoryBuildRule.isVisibleTo(targetUnderSpecifiedDirectory));
  assertFalse(directoryBuildRule.isVisibleTo(targetInOtherDirectory));
  assertFalse(directoryBuildRule.isVisibleTo(targetInParentDirectory));
  BuildRule pubicBuildRule=createRule(libTarget,noDeps,ImmutableSet.<BuildTargetPattern>of(new SubdirectoryBuildTargetPattern("")));
  assertTrue(pubicBuildRule.isVisibleTo(targetInSpecifiedDirectory));
  assertTrue(pubicBuildRule.isVisibleTo(targetUnderSpecifiedDirectory));
  assertTrue(pubicBuildRule.isVisibleTo(targetInOtherDirectory));
  assertTrue(pubicBuildRule.isVisibleTo(targetInParentDirectory));
}
