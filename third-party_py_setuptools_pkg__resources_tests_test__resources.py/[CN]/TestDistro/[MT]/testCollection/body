def testCollection(self):
    ad = pkg_resources.Environment([], platform=None, python=None)
    assert (list(ad) == [])
    assert (ad['FooPkg'] == [])
    ad.add(dist_from_fn('FooPkg-1.3_1.egg'))
    ad.add(dist_from_fn('FooPkg-1.4-py2.4-win32.egg'))
    ad.add(dist_from_fn('FooPkg-1.2-py2.4.egg'))
    assert ad['FooPkg']
    assert (list(ad) == ['foopkg'])
    assert ([dist.version for dist in ad['FooPkg']] == ['1.4', '1.3-1', '1.2'])
    ad.remove(ad['FooPkg'][1])
    assert ([dist.version for dist in ad['FooPkg']] == ['1.4', '1.2'])
    ad.add(dist_from_fn('FooPkg-1.9.egg'))
    assert ([dist.version for dist in ad['FooPkg']] == ['1.9', '1.4', '1.2'])
    ws = WorkingSet([])
    foo12 = dist_from_fn('FooPkg-1.2-py2.4.egg')
    foo14 = dist_from_fn('FooPkg-1.4-py2.4-win32.egg')
    (req,) = parse_requirements('FooPkg>=1.3')
    assert (ad.best_match(req, ws).version == '1.9')
    ws.add(foo14)
    assert (ad.best_match(req, ws).version == '1.4')
    ws = WorkingSet([])
    ws.add(foo12)
    ws.add(foo14)
    with pytest.raises(VersionConflict):
        ad.best_match(req, ws)
    ws = WorkingSet([])
    ws.add(foo14)
    ws.add(foo12)
    ws.add(foo14)
    assert (ad.best_match(req, ws).version == '1.4')
