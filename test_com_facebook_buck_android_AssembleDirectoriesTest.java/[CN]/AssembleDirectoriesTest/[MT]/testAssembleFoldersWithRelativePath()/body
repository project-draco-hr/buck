{
  tmp.newFolder("folder_a");
  tmp.newFile("folder_a/a.txt");
  tmp.newFile("folder_a/b.txt");
  tmp.newFolder("folder_b");
  tmp.newFile("folder_b/c.txt");
  tmp.newFile("folder_b/d.txt");
  BuildRuleParams buildRuleParams=BuildRuleParamsFactory.createTrivialBuildRuleParams(BuildTarget.builder("//","output_folder").build());
  ImmutableList<SourcePath> directories=ImmutableList.<SourcePath>of(new TestSourcePath("folder_a"),new TestSourcePath("folder_b"));
  AssembleDirectories assembleDirectories=new AssembleDirectories(buildRuleParams,new SourcePathResolver(new BuildRuleResolver()),directories);
  ImmutableList<Step> steps=assembleDirectories.getBuildSteps(FakeBuildContext.NOOP_CONTEXT,new FakeBuildableContext());
  for (  Step step : steps) {
    assertEquals(0,step.execute(context));
  }
  File outputFile=filesystem.resolve(assembleDirectories.getPathToOutputFile()).toFile();
  assertEquals(4,outputFile.list().length);
}
