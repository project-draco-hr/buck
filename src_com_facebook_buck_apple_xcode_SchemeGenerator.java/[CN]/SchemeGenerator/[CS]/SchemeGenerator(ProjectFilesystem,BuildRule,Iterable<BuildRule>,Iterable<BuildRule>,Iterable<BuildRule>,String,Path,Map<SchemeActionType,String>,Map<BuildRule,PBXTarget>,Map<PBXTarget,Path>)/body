{
  this.projectFilesystem=Preconditions.checkNotNull(projectFilesystem);
  this.primaryRule=Preconditions.checkNotNull(primaryRule);
  this.orderedBuildRules=ImmutableSet.copyOf(orderedBuildRules);
  this.orderedTestBuildRules=ImmutableSet.copyOf(orderedTestBuildRules);
  this.orderedTestBundleRules=ImmutableSet.copyOf(orderedTestBundleRules);
  this.schemeName=Preconditions.checkNotNull(schemeName);
  this.outputDirectory=Preconditions.checkNotNull(outputDirectory);
  this.actionConfigNames=ImmutableMap.copyOf(actionConfigNames);
  this.buildRuleToTargetMap=ImmutableMap.copyOf(buildRuleToTargetMap);
  this.targetToProjectPathMap=ImmutableMap.copyOf(targetToProjectPathMap);
  LOG.debug("Generating scheme with build rules %s, test build rules %s, test bundle rules %s",orderedBuildRules,orderedTestBuildRules,orderedTestBundleRules);
  for (  BuildRule rule : orderedBuildRules) {
    expectTargetMapContainsRule(rule);
  }
  for (  BuildRule rule : orderedTestBuildRules) {
    expectTargetMapContainsRule(rule);
  }
  for (  BuildRule rule : orderedTestBundleRules) {
    expectTargetMapContainsRule(rule);
  }
}
