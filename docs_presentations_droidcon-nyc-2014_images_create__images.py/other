'\nThis exports a bunch of images from the base-dependency-diagram.graffle file\nusing py-appscript:\nhttp://appscript.sourceforge.net/py-appscript/doc/appscript-manual/index.html\n\nThis example from GitHub was particularly helpful as a template:\nhttps://github.com/fikovnik/omnigraffle-export/blob/master/omnigraffle_export/omnigraffle.py\n\nI tried doing this in AppleScript, but that failed miserably:\nhttp://stackoverflow.com/questions/25876467/how-to-read-a-property-of-a-value-passed-by-reference\n'
import appscript
import os.path
"\nEach entry must have the following properties:\n  - canvas name of canvas, one of: {'full build', 'circular deps', 'android_binary'}\n  - layers list of indices of layers to include. 1-based, starting from bottom to top\n           as displayed in the Canvases column in OmniGraffle.\n  - out name of file where image should be exported.\n"
IMAGE_DATA = [{'canvas': 'gradle', 'layers': [1], 'out': 'gradle-rearranged.png', }, {'canvas': 'gradle', 'layers': [1, 2], 'out': 'gradle-r-dot-java.png', }, {'canvas': 'gradle', 'layers': [1, 2, 3], 'out': 'gradle-android-library-1.png', }, {'canvas': 'gradle', 'layers': [1, 2, 3, 4], 'out': 'gradle-android-library-2.png', }, {'canvas': 'gradle', 'layers': [1, 2, 3, 4, 5], 'out': 'gradle-classes-dot-dex.png', }, {'canvas': 'gradle', 'layers': [1, 2, 3, 4, 5, 6], 'out': 'gradle-android-binary.png', }, {'canvas': 'full build', 'layers': [1, 2, 3], 'out': 'boxes-and-arrows.png', }, {'canvas': 'full build', 'layers': [1, 2, 3, 4], 'out': 'gen-r-txt.png', }, {'canvas': 'full build', 'layers': [1, 2, 4, 5], 'out': 'gen-r-dot-java.png', }, {'canvas': 'full build', 'layers': [1, 2, 4, 5, 6], 'out': 'gen-jar-files.png', }, {'canvas': 'full build', 'layers': [1, 2, 4, 5, 6, 7], 'out': 'gen-dex-files.png', }, {'canvas': 'android_binary', 'layers': [1], 'out': 'android-binary-rules-only.png', }, {'canvas': 'android_binary', 'layers': [1, 2], 'out': 'android-binary-gen-resources.png', }, {'canvas': 'android_binary', 'layers': [1, 2, 3], 'out': 'android-binary-intermediate-dex.png', }, {'canvas': 'android_binary', 'layers': [1, 2, 3, 4], 'out': 'android-binary-uber-classes-dex.png', }, {'canvas': 'android_binary', 'layers': [1, 2, 3, 4, 5], 'out': 'android-binary-done.png', }, {'canvas': 'build trace', 'layers': [2, 3], 'out': 'build-trace.png', }, {'canvas': 'abi', 'layers': [1], 'out': 'abi-graph.png', }, {'canvas': 'abi', 'layers': [1, 2, 4], 'out': 'abi-change-method-body.png', }, {'canvas': 'abi', 'layers': [1, 2, 3, 4, 5], 'out': 'abi-change-method-signature.png', }, {'canvas': 'abi', 'layers': [1, 2, 3, 4], 'out': 'abi-add-unused-public-method.png', }]
if (__name__ == '__main__'):
    main()
