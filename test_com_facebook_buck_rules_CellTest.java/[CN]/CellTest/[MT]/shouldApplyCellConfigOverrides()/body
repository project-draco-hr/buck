{
  FileSystem vfs=Jimfs.newFileSystem(Configuration.unix());
  Path root=vfs.getPath("/opt/local/");
  Path cell1Root=root.resolve("repo1");
  Files.createDirectories(cell1Root);
  Path cell2Root=root.resolve("repo2");
  Files.createDirectories(cell2Root);
  Path cell3Root=root.resolve("repo3");
  Files.createDirectories(cell3Root);
  ProjectFilesystem filesystem1=new ProjectFilesystem(cell1Root.toAbsolutePath());
  ProjectFilesystem filesystem2=new ProjectFilesystem(cell2Root.toAbsolutePath());
  ProjectFilesystem filesystem3=new ProjectFilesystem(cell3Root.toAbsolutePath());
  BuckConfig config=FakeBuckConfig.builder().setFilesystem(filesystem1).setSections("[repositories]","second = " + cell2Root.toString(),"third = " + cell3Root.toString()).build();
  Files.write(cell2Root.resolve(".buckconfig"),ImmutableList.of("[repositories]","third = " + cell3Root.toString()),StandardCharsets.UTF_8);
  Cell cell1=new TestCellBuilder().setBuckConfig(config).setFilesystem(filesystem1).setCellConfigOverride(CellConfig.builder().put(RelativeCellName.fromComponents("second"),"test","value","cell2").put(CellConfig.ALL_CELLS_OVERRIDE,"test","common_value","all").build()).build();
  BuildTarget target=BuildTargetFactory.newInstance(filesystem2,"//does/not:matter");
  Cell cell2=cell1.getCell(target);
  assertThat(cell2.getBuckConfig().getValue("test","value"),Matchers.equalTo(Optional.of("cell2")));
  BuildTarget target3=BuildTargetFactory.newInstance(filesystem3,"//does/not:matter");
  Cell cell3=cell1.getCell(target3);
  assertThat(cell3.getBuckConfig().getValue("test","common_value"),Matchers.equalTo(Optional.of("all")));
}
