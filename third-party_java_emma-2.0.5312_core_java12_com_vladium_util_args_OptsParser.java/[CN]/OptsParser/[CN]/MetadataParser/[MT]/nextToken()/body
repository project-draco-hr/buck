{
  consumeWS();
switch (m_currentChar) {
case -1:
    m_token=Token.EOF;
  break;
case ':':
{
  nextChar();
  m_token=Token.COLON;
}
break;
case ';':
{
nextChar();
m_token=Token.SEMICOLON;
}
break;
case ',':
{
nextChar();
m_token=Token.COMMA;
}
break;
case '{':
{
nextChar();
m_token=Token.LBRACKET;
}
break;
case '}':
{
nextChar();
m_token=Token.RBRACKET;
}
break;
case '0':
{
nextChar();
m_token=new Token(Token.CARD_ID,"0");
}
break;
case '1':
{
nextChar();
m_token=new Token(Token.CARD_ID,"1");
}
break;
case '?':
{
nextChar();
m_token=new Token(Token.CARD_ID,"?");
}
break;
case '\'':
{
final StringBuffer value=new StringBuffer();
nextChar();
while (m_currentChar != '\'') {
value.append((char)m_currentChar);
nextChar();
}
nextChar();
m_token=new Token(Token.STRING_ID,value.toString());
}
break;
case '\"':
{
final StringBuffer value=new StringBuffer();
nextChar();
while (m_currentChar != '\"') {
value.append((char)m_currentChar);
nextChar();
}
nextChar();
m_token=new Token(Token.TEXT_ID,value.toString());
}
break;
default :
{
final StringBuffer value=new StringBuffer();
while (Character.isLetter((char)m_currentChar)) {
value.append((char)m_currentChar);
nextChar();
}
final Token token=(Token)KEYWORDS.get(value.toString());
if (token == null) throw new IllegalArgumentException("parse error: unrecognized keyword [" + value + "]");
m_token=token;
}
}
}
