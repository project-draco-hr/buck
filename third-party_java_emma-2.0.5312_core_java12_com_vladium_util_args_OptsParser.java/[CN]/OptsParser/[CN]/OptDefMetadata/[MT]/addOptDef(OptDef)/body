{
  if (optdef == null)   throw new IllegalArgumentException("null input: optdef");
  final Map map=optdef.isPattern() ? m_patternOptDefMap : m_optdefMap;
  final String[] names=optdef.getNames();
  for (int n=0; n < names.length; ++n) {
    if (map.containsKey(names[n]))     throw new IllegalArgumentException("duplicate option name [" + names[n] + "]");
    map.put(names[n],optdef);
  }
  m_optdefs.add(optdef);
  if (optdef.isRequired())   m_requiredOpts.add(optdef.getCanonicalName());
  if (optdef.isUsage()) {
    if (m_usageOptDef != null)     throw new IllegalArgumentException("usage optdef set already");
    m_usageOptDef=optdef;
  }
}
