{
  Object result;
  if (value == null) {
    if (isOptional) {
      result=typeCoercer.getOptionalValue();
    }
 else     if (Number.class.isAssignableFrom(typeCoercer.getOutputClass())) {
      result=0;
    }
 else     if (Boolean.class.isAssignableFrom(typeCoercer.getOutputClass())) {
      result=false;
    }
 else {
      throw new IllegalArgumentException(String.format("Field '%s %s' of object '%s' cannot be null. Build file can be found in %s.",typeCoercer.getOutputClass(),name,dto,pathRelativeToProjectRoot));
    }
  }
 else {
    try {
      result=typeCoercer.coerce(ruleResolver,filesystem,pathRelativeToProjectRoot,value);
    }
 catch (    CoerceFailedException e) {
      throw new RuntimeException(String.format("Failed to coerce field named: %s, %s",name,e.getMessage()),e);
    }
    if (isOptional) {
      result=Optional.of(result);
    }
  }
  try {
    field.set(dto,result);
  }
 catch (  ReflectiveOperationException e) {
    throw new RuntimeException(e);
  }
}
