{
  if (BuildRule.class.isAssignableFrom(type)) {
    BuildTarget target=asBuildTarget(value);
    return ruleResolver.get(target);
  }
  if (BuildTarget.class.isAssignableFrom(type)) {
    return asBuildTarget(value);
  }
  if (Path.class.isAssignableFrom(type)) {
    return asNormalizedPath(value);
  }
  if (SourcePath.class.isAssignableFrom(type)) {
    BuildTarget target=asBuildTarget(value);
    if (target != null) {
      return new BuildTargetSourcePath(target);
    }
    Path path=asNormalizedPath(value);
    return new FileSourcePath(pathRelativeToProjectRoot.relativize(path).toString());
  }
  if (value instanceof Number) {
    Number num=(Number)value;
    if (Double.class.equals(type)) {
      return num.doubleValue();
    }
 else     if (Integer.class.equals(type)) {
      return num.intValue();
    }
 else     if (Float.class.equals(type)) {
      return num.floatValue();
    }
 else     if (Long.class.equals(type)) {
      return num.longValue();
    }
 else     if (Short.class.equals(type)) {
      return num.shortValue();
    }
  }
  if (String.class.equals(type) && !String.class.equals(value.getClass())) {
    throw new IllegalArgumentException(String.format("Unable to convert '%s' to %s",value,type));
  }
  return value;
}
