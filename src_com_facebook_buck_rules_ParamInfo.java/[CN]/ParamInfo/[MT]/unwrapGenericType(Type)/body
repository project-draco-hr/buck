{
  if (!(type instanceof ParameterizedType)) {
    return (Class<?>)type;
  }
  Type[] types=((ParameterizedType)type).getActualTypeArguments();
  if (types.length != 1) {
    throw new IllegalArgumentException("Unable to determine generic type");
  }
  if (types[0] instanceof WildcardType) {
    throw new IllegalStateException("Generic types must be specific: " + type);
  }
  if (types[0] instanceof ParameterizedType) {
    return unwrapGenericType(types[0]);
  }
  return (Class<?>)types[0];
}
