def _resolvesockname(self):
    path = os.getenv('WATCHMAN_SOCK')
    if path:
        return path
    cmd = ['watchman', '--output-encoding=bser', 'get-sockname']
    try:
        p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, close_fds=(os.name != 'nt'))
    except OSError as e:
        raise WatchmanError('"watchman" executable not in PATH (%s)', e)
    (stdout, stderr) = p.communicate()
    exitcode = p.poll()
    if exitcode:
        raise WatchmanError(('watchman exited with code %d' % exitcode))
    result = bser.loads(stdout)
    if ('error' in result):
        raise WatchmanError(('get-sockname error: %s' % result['error']))
    return result['sockname']
