{
  String name=fileLike.getRelativePath();
  if (!containsEntry(fileLike)) {
    entryNames.add(name);
    outStream.putNextEntry(new ZipEntry(name));
    try (InputStream in=fileLike.getInput()){
      ByteStreams.copy(in,outStream);
    }
     LinearAllocEstimator.Stats stats=getStats(fileLike);
    Preconditions.checkState(!isEntryTooBig(fileLike),"Putting entry %s (%s) exceeded maximum size of %s",name,stats.estimatedLinearAllocSize,linearAllocLimit);
    currentLinearAllocSize+=stats.estimatedLinearAllocSize;
    currentMethodReferences.addAll(stats.methodReferences);
    String report=String.format("%d %d %s\n",stats.estimatedLinearAllocSize,stats.methodReferences.size(),name);
    Files.append(report,reportFile,Charsets.UTF_8);
  }
}
