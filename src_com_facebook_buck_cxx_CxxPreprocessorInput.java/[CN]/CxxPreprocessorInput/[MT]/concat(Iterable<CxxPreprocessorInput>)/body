{
  ImmutableSet.Builder<BuildTarget> rules=ImmutableSet.builder();
  ImmutableMultimap.Builder<CxxSource.Type,String> preprocessorFlags=ImmutableMultimap.builder();
  ImmutableCxxHeaders.Builder includes=ImmutableCxxHeaders.builder();
  ImmutableList.Builder<Path> includeRoots=ImmutableList.builder();
  ImmutableList.Builder<Path> systemIncludeRoots=ImmutableList.builder();
  ImmutableList.Builder<Path> frameworkRoots=ImmutableList.builder();
  for (  CxxPreprocessorInput input : inputs) {
    rules.addAll(input.getRules());
    preprocessorFlags.putAll(input.getPreprocessorFlags());
    includes.putAllNameToPathMap(input.getIncludes().nameToPathMap());
    includes.putAllFullNameToPathMap(input.getIncludes().fullNameToPathMap());
    includeRoots.addAll(input.getIncludeRoots());
    systemIncludeRoots.addAll(input.getSystemIncludeRoots());
    frameworkRoots.addAll(input.getFrameworkRoots());
  }
  return new CxxPreprocessorInput(rules.build(),preprocessorFlags.build(),includes.build(),includeRoots.build(),systemIncludeRoots.build(),frameworkRoots.build());
}
