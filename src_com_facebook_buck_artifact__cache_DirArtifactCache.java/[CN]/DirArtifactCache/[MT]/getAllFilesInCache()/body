{
  final List<File> allFiles=new ArrayList<>();
  Files.walkFileTree(filesystem.resolve(cacheDir),ImmutableSet.<FileVisitOption>of(),Integer.MAX_VALUE,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult preVisitDirectory(    Path dir,    BasicFileAttributes attrs) throws IOException {
      if (dir.equals(getPathToTempFolder())) {
        return FileVisitResult.SKIP_SUBTREE;
      }
      return super.preVisitDirectory(dir,attrs);
    }
    @Override public FileVisitResult visitFile(    Path file,    BasicFileAttributes attrs) throws IOException {
      allFiles.add(file.toFile());
      return super.visitFile(file,attrs);
    }
  }
);
  return allFiles.toArray(new File[0]);
}
