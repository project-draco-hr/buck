{
  Preconditions.checkState(maxCacheSizeBytes.isPresent());
  long maxSizeBytes=maxCacheSizeBytes.get();
  File[] files=filesystem.resolve(cacheDir).toFile().listFiles();
  MoreFiles.sortFilesByAccessTime(files);
  long currentSizeBytes=0;
  Optional<Integer> maxTrimMark=Optional.absent();
  for (int i=0; i < files.length; ++i) {
    File file=files[i];
    currentSizeBytes+=file.length();
    if (!maxTrimMark.isPresent() && currentSizeBytes > maxSizeBytes * MAX_BYTES_TRIM_RATIO) {
      maxTrimMark=Optional.of(i);
    }
    if (currentSizeBytes > maxSizeBytes) {
      return ArrayIterable.of(files,maxTrimMark.get(),files.length);
    }
  }
  return ImmutableList.of();
}
