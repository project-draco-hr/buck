{
  CacheResult result;
  try {
    ImmutableMap.Builder<String,String> metadata=ImmutableMap.builder();
    try (DataInputStream in=new DataInputStream(filesystem.newFileInputStream(cacheDir.resolve(ruleKey.toString() + ".metadata")))){
      int sz=in.readInt();
      for (int i=0; i < sz; i++) {
        String key=in.readUTF();
        int valSize=in.readInt();
        byte[] val=new byte[valSize];
        ByteStreams.readFully(in,val);
        metadata.put(key,new String(val,Charsets.UTF_8));
      }
    }
     filesystem.copyFile(cacheDir.resolve(ruleKey.toString()),output.get());
    result=CacheResult.hit(name,metadata.build());
  }
 catch (  NoSuchFileException e) {
    result=CacheResult.miss();
  }
catch (  IOException e) {
    LOG.warn(e,"Artifact fetch(%s, %s) error",ruleKey,output);
    result=CacheResult.error(name,String.format("%s: %s",e.getClass(),e.getMessage()));
  }
  LOG.debug("Artifact fetch(%s, %s) cache %s",ruleKey,output,(result.getType().isSuccess() ? "hit" : "miss"));
  return result;
}
