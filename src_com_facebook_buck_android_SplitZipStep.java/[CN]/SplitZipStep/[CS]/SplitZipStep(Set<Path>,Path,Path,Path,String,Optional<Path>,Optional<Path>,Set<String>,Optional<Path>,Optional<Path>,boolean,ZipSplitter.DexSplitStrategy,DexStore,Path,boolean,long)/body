{
  this.inputPathsToSplit=ImmutableSet.copyOf(inputPathsToSplit);
  this.secondaryJarMetaPath=Preconditions.checkNotNull(secondaryJarMetaPath);
  this.primaryJarPath=Preconditions.checkNotNull(primaryJarPath);
  this.secondaryJarDir=Preconditions.checkNotNull(secondaryJarDir);
  this.secondaryJarPattern=Preconditions.checkNotNull(secondaryJarPattern);
  this.proguardFullConfigFile=Preconditions.checkNotNull(proguardFullConfigFile);
  this.proguardMappingFile=Preconditions.checkNotNull(proguardMappingFile);
  this.primaryDexPatterns=ImmutableSet.copyOf(primaryDexPatterns);
  this.primaryDexClassesFile=Preconditions.checkNotNull(primaryDexClassesFile);
  this.primaryDexScenarioFile=Preconditions.checkNotNull(primaryDexScenarioFile);
  this.isPrimaryDexScenarioOverflowAllowed=isPrimaryDexScenarioOverflowAllowed;
  this.dexSplitStrategy=Preconditions.checkNotNull(dexSplitStrategy);
  this.dexStore=Preconditions.checkNotNull(dexStore);
  this.pathToReportDir=Preconditions.checkNotNull(pathToReportDir);
  this.useLinearAllocSplitDex=useLinearAllocSplitDex;
  this.linearAllocHardLimit=linearAllocHardLimit;
  this.stepFinished=false;
  Preconditions.checkArgument(proguardFullConfigFile.isPresent() == proguardMappingFile.isPresent(),"ProGuard configuration and mapping must both be present or absent.");
}
