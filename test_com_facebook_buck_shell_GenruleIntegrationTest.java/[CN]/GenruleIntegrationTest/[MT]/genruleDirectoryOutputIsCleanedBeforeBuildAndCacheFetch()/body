{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"genrule_directory_output_cleaned",temporaryFolder);
  workspace.setUp();
  workspace.copyFile("BUCK.1","BUCK");
  workspace.runBuckCommand("build","//:mkdir_another").assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally("//:mkdir_another");
  assertTrue("mkdir_another should be built",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir_another/another_directory/file")));
  workspace.runBuckCommand("build","//:mkdir").assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally("//:mkdir");
  assertTrue("BUCK.1 should create its output",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/one")));
  assertFalse("BUCK.1 should not touch the output of BUCK.2",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/two")));
  assertTrue("output of mkdir_another should still exist",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir_another/another_directory/file")));
  workspace.copyFile("BUCK.2","BUCK");
  workspace.runBuckCommand("build","//:mkdir").assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally("//:mkdir");
  assertFalse("Output of BUCK.1 should be deleted before output of BUCK.2 is built",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/one")));
  assertTrue("BUCK.2 should create its output",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/two")));
  assertTrue("output of mkdir_another should still exist",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir_another/another_directory/file")));
  workspace.copyFile("BUCK.1","BUCK");
  workspace.runBuckCommand("build","//:mkdir").assertSuccess();
  workspace.getBuildLog().assertTargetWasFetchedFromCache("//:mkdir");
  assertTrue("Output of BUCK.1 should be fetched from the cache",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/one")));
  assertFalse("Output of BUCK.2 should be deleted before output of BUCK.1 is fetched from cache",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir/directory/two")));
  assertTrue("output of mkdir_another should still exist",Files.isRegularFile(workspace.resolve("buck-out/gen/mkdir_another/another_directory/file")));
  assertThat(Files.isDirectory(workspace.resolve("buck-out/gen/mkdir/directory")),equalTo(true));
}
