{
  Path storagePath=getStorageForTest();
  Map<String,Object> storageContents=ImmutableSortedMap.<String,Object>naturalOrder().put("project arg1 arg2",ImmutableSortedMap.<String,Number>naturalOrder().put(ProgressEstimator.EXPECTED_NUMBER_OF_PARSED_RULES,100).put(ProgressEstimator.EXPECTED_NUMBER_OF_PARSED_BUCK_FILES,10).build()).build();
  String contents=MAPPER.writeValueAsString(storageContents);
  Files.createDirectories(storagePath.getParent());
  Files.write(storagePath,contents.getBytes(StandardCharsets.UTF_8));
  ProgressEstimator estimator=new ProgressEstimator(storagePath.getParent().getParent(),getBuckEventBus(),MAPPER);
  estimator.setCurrentCommand("project",ImmutableList.of("arg1","arg2"));
  estimator.didParseBuckRules(10);
  estimator.didParseBuckRules(30);
  estimator.didParseBuckRules(10);
  estimator.didFinishParsing();
  Map<String,Map<String,Number>> jsonObject=MAPPER.readValue(Files.readAllBytes(storagePath),new TypeReference<HashMap<String,Map<String,Number>>>(){
  }
);
  Map<String,Number> storedValues=jsonObject.get("project arg1 arg2");
  assertThat(storedValues.get(ProgressEstimator.EXPECTED_NUMBER_OF_PARSED_BUCK_FILES).intValue(),Matchers.equalTo(3));
  assertThat(storedValues.get(ProgressEstimator.EXPECTED_NUMBER_OF_PARSED_RULES).intValue(),Matchers.equalTo(50));
}
