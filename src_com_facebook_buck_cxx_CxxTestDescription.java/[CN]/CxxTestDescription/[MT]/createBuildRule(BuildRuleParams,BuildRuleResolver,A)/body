{
  CxxLink cxxLink=CxxDescriptionEnhancer.createBuildRulesForCxxBinaryDescriptionArg(params,resolver,cxxBuckConfig,args);
  BuildRuleParams testParams=params.copyWithDeps(ImmutableSortedSet.<BuildRule>naturalOrder().addAll(params.getDeclaredDeps()).add(cxxLink).build(),params.getExtraDeps());
  CxxTest test;
  CxxTestType type=args.framework.or(getDefaultTestType());
switch (type) {
case GTEST:
{
      test=new CxxGtestTest(testParams,cxxLink.getOutput(),args.labels.or(ImmutableSet.<Label>of()),args.contacts.or(ImmutableSet.<String>of()),args.sourceUnderTest.or(ImmutableSet.<BuildRule>of()));
      break;
    }
case BOOST:
{
    test=new CxxBoostTest(testParams,cxxLink.getOutput(),args.labels.or(ImmutableSet.<Label>of()),args.contacts.or(ImmutableSet.<String>of()),args.sourceUnderTest.or(ImmutableSet.<BuildRule>of()));
    break;
  }
default :
{
  Preconditions.checkState(false,"Unhandled C++ test type: %s",type);
  throw new RuntimeException();
}
}
return test;
}
