{
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  CxxLink cxxLink=CxxDescriptionEnhancer.createBuildRulesForCxxBinaryDescriptionArg(params,resolver,cxxPlatform,args);
  BuildRuleParams testParams=params.copyWithDeps(ImmutableSortedSet.<BuildRule>naturalOrder().addAll(params.getDeclaredDeps()).add(cxxLink).build(),params.getExtraDeps());
  CxxTest test;
  CxxTestType type=args.framework.or(getDefaultTestType());
switch (type) {
case GTEST:
{
      test=new CxxGtestTest(testParams,pathResolver,cxxLink.getOutput(),args.labels.get(),args.contacts.get(),resolver.getAllRules(args.sourceUnderTest.get()));
      break;
    }
case BOOST:
{
    test=new CxxBoostTest(testParams,pathResolver,cxxLink.getOutput(),args.labels.get(),args.contacts.get(),resolver.getAllRules(args.sourceUnderTest.get()));
    break;
  }
default :
{
  Preconditions.checkState(false,"Unhandled C++ test type: %s",type);
  throw new RuntimeException();
}
}
return test;
}
