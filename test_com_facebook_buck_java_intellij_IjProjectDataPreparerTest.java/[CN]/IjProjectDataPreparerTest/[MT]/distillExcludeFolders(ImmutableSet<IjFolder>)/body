{
  Preconditions.checkArgument(!FluentIterable.from(folders).anyMatch(new Predicate<IjFolder>(){
    @Override public boolean apply(    IjFolder input){
      return !input.getType().equals(IjFolder.Type.EXCLUDE_FOLDER);
    }
  }
));
  return FluentIterable.from(folders).uniqueIndex(new Function<IjFolder,Path>(){
    @Override public Path apply(    IjFolder input){
      return input.getPath();
    }
  }
).keySet();
}
