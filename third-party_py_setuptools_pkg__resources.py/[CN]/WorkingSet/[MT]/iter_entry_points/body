def iter_entry_points(self, group, name=None):
    'Yield entry point objects from `group` matching `name`\n\n        If `name` is None, yields all entry points in `group` from all\n        distributions in the working set, otherwise only ones matching\n        both `group` and `name` are yielded (in distribution order).\n        '
    for dist in self:
        entries = dist.get_entry_map(group)
        if (name is None):
            for ep in entries.values():
                yield ep
        elif (name in entries):
            yield entries[name]
