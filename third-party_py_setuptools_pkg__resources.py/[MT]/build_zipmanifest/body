def build_zipmanifest(path):
    '\n    This builds a similar dictionary to the zipimport directory\n    caches.  However instead of tuples, ZipInfo objects are stored.\n\n    The translation of the tuple is as follows:\n      * [0] - zipinfo.filename on stock pythons this needs "/" --> os.sep\n              on pypy it is the same (one reason why distribute did work\n              in some cases on pypy and win32).\n      * [1] - zipinfo.compress_type\n      * [2] - zipinfo.compress_size\n      * [3] - zipinfo.file_size\n      * [4] - len(utf-8 encoding of filename) if zipinfo & 0x800\n              len(ascii encoding of filename) otherwise\n      * [5] - (zipinfo.date_time[0] - 1980) << 9 |\n               zipinfo.date_time[1] << 5 | zipinfo.date_time[2]\n      * [6] - (zipinfo.date_time[3] - 1980) << 11 |\n               zipinfo.date_time[4] << 5 | (zipinfo.date_time[5] // 2)\n      * [7] - zipinfo.CRC\n    '
    zipinfo = dict()
    zfile = zipfile.ZipFile(path)
    try:
        for zitem in zfile.namelist():
            zpath = zitem.replace('/', os.sep)
            zipinfo[zpath] = zfile.getinfo(zitem)
            assert (zipinfo[zpath] is not None)
    finally:
        zfile.close()
    return zipinfo
