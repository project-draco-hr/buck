def _handle_ns(packageName, path_item):
    'Ensure that named package includes a subpath of path_item (if needed)'
    importer = get_importer(path_item)
    if (importer is None):
        return None
    loader = importer.find_module(packageName)
    if (loader is None):
        return None
    module = sys.modules.get(packageName)
    if (module is None):
        module = sys.modules[packageName] = imp.new_module(packageName)
        module.__path__ = []
        _set_parent_ns(packageName)
    elif (not hasattr(module, '__path__')):
        raise TypeError('Not a package:', packageName)
    handler = _find_adapter(_namespace_handlers, importer)
    subpath = handler(importer, path_item, packageName, module)
    if (subpath is not None):
        path = module.__path__
        path.append(subpath)
        loader.load_module(packageName)
        for path_item in path:
            if (path_item not in module.__path__):
                module.__path__.append(path_item)
    return subpath
