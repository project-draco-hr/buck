{
  try {
    Optional<String> result;
    ProcessExecutor.LaunchedProcess watchmanVersionProcess=processExecutor.launchProcess(ProcessExecutorParams.builder().addCommand("watchman","version").build());
    Map<String,String> watchmanVersionOutput=objectMapper.readValue(watchmanVersionProcess.getInputStream(),new TypeReference<Map<String,String>>(){
    }
);
    int exitCode=processExecutor.waitForLaunchedProcess(watchmanVersionProcess);
    if (exitCode != 0) {
      LOG.error("Error %d executing watchman version",exitCode);
      return Optional.absent();
    }
 else {
      result=Optional.fromNullable(watchmanVersionOutput.get("version"));
      LOG.debug("Watchman version: %s",result);
      return result;
    }
  }
 catch (  IOException e) {
    LOG.error(e,"Could not check if Watchman is available");
    return Optional.absent();
  }
}
