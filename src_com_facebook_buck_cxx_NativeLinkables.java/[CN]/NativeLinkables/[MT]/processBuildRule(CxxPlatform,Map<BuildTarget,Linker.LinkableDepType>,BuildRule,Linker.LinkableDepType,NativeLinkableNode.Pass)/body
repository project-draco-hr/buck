{
  if (!(rule instanceof NativeLinkable)) {
    return NativeLinkableNode.of(rule,pass);
  }
  NativeLinkable linkable=(NativeLinkable)rule;
  Linker.LinkableDepType depType=linkable.getPreferredLinkage(cxxPlatform).or(type);
  if (pass == AbstractNativeLinkableNode.Pass.ANY || depType == Linker.LinkableDepType.SHARED) {
    Linker.LinkableDepType oldType=wanted.put(rule.getBuildTarget(),depType);
    Preconditions.checkState(oldType == null || oldType == depType);
  }
  if (depType == Linker.LinkableDepType.SHARED) {
    pass=AbstractNativeLinkableNode.Pass.SHARED_ONLY;
  }
  return NativeLinkableNode.of(rule,pass);
}
