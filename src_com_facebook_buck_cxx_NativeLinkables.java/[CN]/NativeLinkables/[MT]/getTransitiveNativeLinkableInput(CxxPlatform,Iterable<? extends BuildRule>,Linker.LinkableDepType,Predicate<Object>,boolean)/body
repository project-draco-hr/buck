{
  final DirectedAcyclicGraph<BuildRule> graph=BuildRuleDependencyVisitors.getBuildRuleDirectedGraphFilteredBy(inputs,Predicates.instanceOf(NativeLinkable.class),traverse);
  final ImmutableList<BuildRule> sorted=TopologicalSort.sort(graph,Predicates.<BuildRule>alwaysTrue());
  return NativeLinkableInput.concat(FluentIterable.from(reverse ? sorted.reverse() : sorted).filter(NativeLinkable.class).transform(getNativeLinkableInput(cxxPlatform,depType)));
}
