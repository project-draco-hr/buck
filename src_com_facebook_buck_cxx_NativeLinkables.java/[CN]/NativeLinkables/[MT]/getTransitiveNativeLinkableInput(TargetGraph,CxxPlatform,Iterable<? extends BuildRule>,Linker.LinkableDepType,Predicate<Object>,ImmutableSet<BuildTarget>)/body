{
  ImmutableMap<BuildTarget,NativeLinkable> roots=getNativeLinkableRoots(inputs,traverse);
  ImmutableMap<BuildTarget,NativeLinkable> nativeLinkables=getNativeLinkables(cxxPlatform,roots.values(),depType);
  List<NativeLinkable> filtered=Lists.newArrayListWithExpectedSize(nativeLinkables.size());
  for (  Map.Entry<BuildTarget,NativeLinkable> entry : nativeLinkables.entrySet()) {
    if (!blacklist.contains(entry.getKey())) {
      filtered.add(entry.getValue());
    }
  }
  return NativeLinkableInput.concat(FluentIterable.from(filtered).transform(getNativeLinkableInputFunction(targetGraph,cxxPlatform,depType)));
}
