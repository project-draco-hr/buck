{
  final ImmutableDirectedAcyclicGraph<BuildRule> graph=AbstractDependencyVisitors.getBuildRuleDirectedGraphFilteredBy(inputs,NativeLinkable.class);
  final ImmutableList<BuildRule> sorted=TopologicalSort.sort(graph,Predicates.<BuildRule>alwaysTrue());
  return NativeLinkableInput.concat(FluentIterable.from(reverse ? sorted.reverse() : sorted).filter(NativeLinkable.class).transform(getNativeLinkableInput(linker,depType)));
}
