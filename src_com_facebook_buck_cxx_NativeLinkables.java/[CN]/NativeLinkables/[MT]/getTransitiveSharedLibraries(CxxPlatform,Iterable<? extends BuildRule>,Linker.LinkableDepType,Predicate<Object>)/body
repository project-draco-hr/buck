{
  Pair<MutableDirectedGraph<BuildRule>,Map<BuildTarget,Linker.LinkableDepType>> result=getTransitiveNativeLinkableInput(cxxPlatform,inputs,depType,traverse);
  ImmutableSortedMap.Builder<String,SourcePath> libraries=ImmutableSortedMap.naturalOrder();
  for (  BuildRule buildRule : result.getFirst().getNodes()) {
    if (buildRule instanceof NativeLinkable) {
      Linker.LinkableDepType type=result.getSecond().get(buildRule.getBuildTarget());
      if (type != null && type == Linker.LinkableDepType.SHARED) {
        NativeLinkable linkable=(NativeLinkable)buildRule;
        libraries.putAll(linkable.getSharedLibraries(cxxPlatform));
      }
    }
  }
  return libraries.build();
}
