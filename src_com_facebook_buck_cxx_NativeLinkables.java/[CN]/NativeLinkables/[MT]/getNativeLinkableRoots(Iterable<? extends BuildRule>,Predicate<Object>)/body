{
  final ImmutableMap.Builder<BuildTarget,NativeLinkable> nativeLinkables=ImmutableMap.builder();
  AbstractBreadthFirstTraversal<BuildRule> visitor=new AbstractBreadthFirstTraversal<BuildRule>(from){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule rule){
      if (rule instanceof NativeLinkable) {
        NativeLinkable nativeLinkable=(NativeLinkable)rule;
        nativeLinkables.put(nativeLinkable.getBuildTarget(),nativeLinkable);
        return ImmutableSet.of();
      }
      if (traverse.apply(rule)) {
        return rule.getDeps();
      }
      return ImmutableSet.of();
    }
  }
;
  visitor.start();
  return nativeLinkables.build();
}
