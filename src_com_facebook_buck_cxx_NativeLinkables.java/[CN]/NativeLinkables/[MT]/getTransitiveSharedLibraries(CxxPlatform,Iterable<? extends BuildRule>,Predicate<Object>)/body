{
  ImmutableMap<BuildTarget,NativeLinkable> roots=getNativeLinkableRoots(inputs,traverse);
  ImmutableMap<BuildTarget,NativeLinkable> nativeLinkables=getTransitiveNativeLinkables(cxxPlatform,roots.values());
  Map<String,SourcePath> libraries=new LinkedHashMap<>();
  for (  NativeLinkable nativeLinkable : nativeLinkables.values()) {
    NativeLinkable.Linkage linkage=nativeLinkable.getPreferredLinkage(cxxPlatform);
    if (linkage != NativeLinkable.Linkage.STATIC) {
      ImmutableMap<String,SourcePath> libs=nativeLinkable.getSharedLibraries(cxxPlatform);
      for (      Map.Entry<String,SourcePath> lib : libs.entrySet()) {
        SourcePath prev=libraries.put(lib.getKey(),lib.getValue());
        if (prev != null && !prev.equals(lib.getValue())) {
          throw new HumanReadableException("conflicting libraries for key %s: %s != %s",lib.getKey(),lib.getValue(),prev);
        }
      }
    }
  }
  return ImmutableSortedMap.copyOf(libraries);
}
