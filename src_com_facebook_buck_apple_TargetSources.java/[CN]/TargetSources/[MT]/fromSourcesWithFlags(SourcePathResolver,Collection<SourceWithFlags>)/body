{
  ImmutableSortedSet.Builder<SourcePath> allSourcesBuilder=ImmutableSortedSet.naturalOrder();
  ImmutableSortedMap.Builder<SourcePath,ImmutableList<String>> perFileFlagsBuilder=ImmutableSortedMap.naturalOrder();
  ImmutableSortedSet.Builder<SourcePath> srcPathsBuilder=ImmutableSortedSet.naturalOrder();
  ImmutableSortedSet.Builder<SourcePath> publicHeaderPathsBuilder=ImmutableSortedSet.naturalOrder();
  ImmutableSortedSet.Builder<SourcePath> privateHeaderPathsBuilder=ImmutableSortedSet.naturalOrder();
  RuleUtils.extractSourcePaths(resolver,allSourcesBuilder,perFileFlagsBuilder,srcPathsBuilder,publicHeaderPathsBuilder,privateHeaderPathsBuilder,sourcesWithFlags);
  ImmutableSortedSet<SourcePath> allSources=allSourcesBuilder.build();
  ImmutableSortedMap<SourcePath,ImmutableList<String>> perFileFlags=perFileFlagsBuilder.build();
  ImmutableSortedSet<SourcePath> srcPaths=srcPathsBuilder.build();
  ImmutableSortedSet<SourcePath> publicHeaderPaths=publicHeaderPathsBuilder.build();
  ImmutableSortedSet<SourcePath> privateHeaderPaths=privateHeaderPathsBuilder.build();
  ImmutableList<GroupedSource> groupedSource=RuleUtils.createGroupsFromSourcePaths(resolver,allSources);
  return ImmutableTargetSources.of(groupedSource,perFileFlags,srcPaths,publicHeaderPaths,privateHeaderPaths);
}
