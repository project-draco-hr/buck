{
  Optional<String> initialErr=Optional.absent();
  Optional<String> initialErrorMsg=Optional.absent();
  Optional<String> errorMsg=Optional.absent();
  Throwable throwable=getRecord().getThrown();
  if (throwable != null) {
    initialErr=Optional.of(getInitialCause(throwable).getClass().getName());
    if (throwable.getMessage() != null) {
      initialErrorMsg=Optional.of(getInitialCause(throwable).getLocalizedMessage());
    }
  }
  String message=getRecord().getMessage();
  if (message != null) {
    errorMsg=Optional.of(message);
  }
  StringBuilder sb=new StringBuilder();
  for (  Optional<String> field : ImmutableList.of(initialErr,initialErrorMsg,errorMsg)) {
    sb.append(field.or(""));
    if (field.isPresent()) {
      sb.append(": ");
    }
  }
  sb.append(getRecord().getLoggerName());
  return sb.toString();
}
