{
  return FluentIterable.from(getHasClasspathEntries(resolve(target,cellNames,resolver,input)).getTransitiveClasspathDeps()).filter(new Predicate<JavaLibrary>(){
    @Override public boolean apply(    JavaLibrary input){
      return input.getPathToOutput() != null;
    }
  }
).transform(SourcePaths.getToBuildTargetSourcePath()).toSortedSet(Ordering.natural());
}
