{
  return Joiner.on(File.pathSeparator).join(FluentIterable.from(getHasClasspathEntries(rule).getTransitiveClasspathDeps()).transform(new Function<JavaLibrary,Path>(){
    @Nullable @Override public Path apply(    JavaLibrary input){
      return input.getPathToOutput();
    }
  }
).filter(Predicates.notNull()).transform(filesystem.getAbsolutifier()).transform(Functions.toStringFunction()).toSortedSet(Ordering.natural()));
}
