{
  Step mkdir=new MakeCleanDirectoryStep(getPathToAbiOutputDir());
  commands.add(mkdir);
  final JavacStep javacStep;
  if (!getJavaSrcs().isEmpty()) {
    Path pathToSrcsList=BuildTargets.getGenPath(getBuildTarget(),"__%s__srcs");
    commands.add(new MkdirStep(pathToSrcsList.getParent()));
    if (javacOptions.getJavaCompilerEnvironment().getJavacPath().isPresent()) {
      Path workingDirectory=BuildTargets.getGenPath(target,"lib__%s____working_directory");
      commands.add(new MakeCleanDirectoryStep(workingDirectory));
      javacStep=new ExternalJavacStep(outputDirectory,getJavaSrcs(),transitiveClasspathEntries,declaredClasspathEntries,javacOptions,Optional.of(target),buildDependencies,suggestBuildRules,Optional.of(pathToSrcsList),target,Optional.of(workingDirectory));
    }
 else {
      javacStep=new JavacInMemoryStep(outputDirectory,getJavaSrcs(),transitiveClasspathEntries,declaredClasspathEntries,javacOptions,Optional.of(target),buildDependencies,suggestBuildRules,Optional.of(pathToSrcsList));
    }
    commands.add(javacStep);
  }
}
