{
  Optional<Map.Entry<Flavor,ThriftLanguageSpecificEnhancer>> enhancerFlavor;
  try {
    enhancerFlavor=enhancers.getFlavorAndValue(ImmutableSet.copyOf(buildTarget.getFlavors()));
  }
 catch (  FlavorDomainException e) {
    throw new HumanReadableException("%s: %s",buildTarget,e.getMessage());
  }
  if (!enhancerFlavor.isPresent()) {
    return ImmutableList.of();
  }
  List<BuildTarget> deps=Lists.newArrayList();
  deps.add(buildTarget.getUnflavoredTarget());
  deps.addAll(BuildTargets.propagateFlavorDomains(buildTarget,ImmutableList.<FlavorDomain<?>>of(enhancers),arg.deps.get()));
  SourcePath compiler=thriftBuckConfig.getCompiler();
  if (compiler instanceof BuildTargetSourcePath) {
    deps.add(((BuildTargetSourcePath)compiler).getTarget());
  }
  ThriftLanguageSpecificEnhancer enhancer=enhancerFlavor.get().getValue();
  ImmutableSet<BuildTarget> implicitDeps=enhancer.getImplicitDepsForTargetFromConstructorArg(buildTarget,arg);
  deps.addAll(implicitDeps);
  return deps;
}
