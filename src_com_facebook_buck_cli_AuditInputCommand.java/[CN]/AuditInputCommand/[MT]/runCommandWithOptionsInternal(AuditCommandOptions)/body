{
  final ImmutableSet<String> fullyQualifiedBuildTargets=ImmutableSet.copyOf(options.getArgumentsFormattedAsBuildTargets());
  if (fullyQualifiedBuildTargets.isEmpty()) {
    console.printBuildFailure("Please specify at least one build target.");
    return 1;
  }
  ImmutableSet<BuildTarget> targets=FluentIterable.from(options.getArgumentsFormattedAsBuildTargets()).transform(new Function<String,BuildTarget>(){
    @Override public BuildTarget apply(    String input){
      return getParser().getBuildTargetParser().parse(input,BuildTargetPatternParser.fullyQualified());
    }
  }
).toSet();
  TargetGraph graph;
  try {
    graph=getParser().buildTargetGraphForBuildTargets(targets,options.getDefaultIncludes(),getBuckEventBus(),console,environment,options.getEnableProfiling());
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (options.shouldGenerateJsonOutput()) {
    return printJsonInputs(graph);
  }
  return printInputs(graph);
}
