{
  final ImmutableSet<String> fullyQualifiedBuildTargets=ImmutableSet.copyOf(options.getArgumentsFormattedAsBuildTargets());
  if (fullyQualifiedBuildTargets.isEmpty()) {
    console.printBuildFailure("Please specify at least one build target.");
    return 1;
  }
  RuleJsonPredicate predicate=new RuleJsonPredicate(){
    @Override public boolean isMatch(    Map<String,Object> rawParseData,    BuildRuleType buildRuleType,    BuildTarget buildTarget){
      return fullyQualifiedBuildTargets.contains(buildTarget.getFullyQualifiedName());
    }
  }
;
  PartialGraph partialGraph;
  try {
    partialGraph=PartialGraph.createPartialGraph(predicate,getProjectFilesystem(),options.getDefaultIncludes(),getParser(),getBuckEventBus(),console,environment,false);
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (options.shouldGenerateJsonOutput()) {
    return printJsonInputs(partialGraph);
  }
  return printInputs(partialGraph);
}
