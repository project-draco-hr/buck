{
  ImmutableMap.Builder<String,Path> externalCratesBuilder=ImmutableMap.builder();
  ImmutableSet.Builder<Path> externalDepsBuilder=ImmutableSet.builder();
  for (  BuildRule buildRule : getDeps()) {
    if (!(buildRule instanceof RustLinkable)) {
      throw new HumanReadableException("%s (dep of %s) is not an instance of rust_library or prebuilt_rust_library!",buildRule.getBuildTarget().getFullyQualifiedName(),getBuildTarget().getFullyQualifiedName());
    }
    RustLinkable linkable=(RustLinkable)buildRule;
    Path ruleOutput=linkable.getLinkPath();
    externalCratesBuilder.put(linkable.getLinkTarget(),ruleOutput);
    externalDepsBuilder.addAll(linkable.getDependencyPaths());
  }
  return ImmutableList.of(new MakeCleanDirectoryStep(getProjectFilesystem(),scratchDir),new SymlinkFilesIntoDirectoryStep(getProjectFilesystem(),getProjectFilesystem().getRootPath(),getResolver().deprecatedAllPaths(srcs),scratchDir),new MakeCleanDirectoryStep(getProjectFilesystem(),output.getParent()),new RustCompileStep(getProjectFilesystem().getRootPath(),compiler.getEnvironment(getResolver()),compiler.getCommandPrefix(getResolver()),flags,features,output,externalCratesBuilder.build(),externalDepsBuilder.build(),getCrateRoot()));
}
