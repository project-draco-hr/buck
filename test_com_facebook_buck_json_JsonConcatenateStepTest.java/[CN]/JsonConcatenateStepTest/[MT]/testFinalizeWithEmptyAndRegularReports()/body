{
  jsonConcatenator.initializeArray();
  jsonConcatenator.appendArray("\n[ ] \n\n");
  jsonConcatenator.appendArray("\n [{ \"file\":\"aFile.c\", \"type\":\"NULL_DEREFERENCE\", \"line\":123} ]\n ");
  jsonConcatenator.appendArray("[]");
  jsonConcatenator.appendArray("[{ \"file\":\"aFile.c\", \"type\":\"RESOURCE_LEAK\", \"line\":456}] ");
  jsonConcatenator.appendArray("\n [{ \"file\":\"aFile.c\", \"type\":\"NULL_DEREFERENCE\", \"line\":789 } ]\n ");
  jsonConcatenator.finalizeArray();
  Object[] records=new GsonBuilder().create().fromJson(filesystem.readFileIfItExists(mergedReport).get(),Object[].class);
  List<Object> bugs=Arrays.asList(records);
  assertThat("3 bugs expected in " + mergedReport + " not found",bugs.size(),Matchers.equalTo(3));
  String result=filesystem.readFileIfItExists(mergedReport).get();
  assertThat("Should be an array with three objects",result,Matchers.equalTo("[" + "{ \"file\":\"aFile.c\", \"type\":\"NULL_DEREFERENCE\", \"line\":123} ," + "{ \"file\":\"aFile.c\", \"type\":\"RESOURCE_LEAK\", \"line\":456},"+ "{ \"file\":\"aFile.c\", \"type\":\"NULL_DEREFERENCE\", \"line\":789 } "+ "]"));
}
