def testBufferOutputStartTestAddSuccess(self):
    real_out = self._real_out
    real_err = self._real_err
    result = unittest2.TestResult()
    self.assertFalse(result.buffer)
    result.buffer = True
    self.assertIs(real_out, sys.stdout)
    self.assertIs(real_err, sys.stderr)
    result.startTest(self)
    self.assertIsNot(real_out, sys.stdout)
    self.assertIsNot(real_err, sys.stderr)
    self.assertIsInstance(sys.stdout, StringIO)
    self.assertIsInstance(sys.stderr, StringIO)
    self.assertIsNot(sys.stdout, sys.stderr)
    out_stream = sys.stdout
    err_stream = sys.stderr
    result._original_stdout = StringIO()
    result._original_stderr = StringIO()
    print 'foo'
    print  >> sys.stderr, 'bar'
    self.assertEqual(out_stream.getvalue(), 'foo\n')
    self.assertEqual(err_stream.getvalue(), 'bar\n')
    self.assertEqual(result._original_stdout.getvalue(), '')
    self.assertEqual(result._original_stderr.getvalue(), '')
    result.addSuccess(self)
    result.stopTest(self)
    self.assertIs(sys.stdout, result._original_stdout)
    self.assertIs(sys.stderr, result._original_stderr)
    self.assertEqual(result._original_stdout.getvalue(), '')
    self.assertEqual(result._original_stderr.getvalue(), '')
    self.assertEqual(out_stream.getvalue(), '')
    self.assertEqual(err_stream.getvalue(), '')
