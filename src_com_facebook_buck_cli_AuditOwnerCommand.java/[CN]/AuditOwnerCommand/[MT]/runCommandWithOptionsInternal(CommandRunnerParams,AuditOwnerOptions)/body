{
  OwnersReport report=OwnersReport.emptyReport();
  Map<Path,List<TargetNode<?>>> targetNodes=Maps.newHashMap();
  ParserConfig parserConfig=new ParserConfig(options.getBuckConfig());
  BuildFileTree buildFileTree=new FilesystemBackedBuildFileTree(params.getRepository().getFilesystem(),parserConfig.getBuildFileName());
  for (  Path filePath : options.getArgumentsAsPaths(params.getRepository().getFilesystem().getRootPath())) {
    Optional<Path> basePath=buildFileTree.getBasePathOfAncestorTarget(filePath);
    if (!basePath.isPresent()) {
      report=report.updatedWith(new OwnersReport(ImmutableSetMultimap.<TargetNode<?>,Path>of(),ImmutableSet.of(filePath),Sets.<String>newHashSet(),Sets.<String>newHashSet()));
      continue;
    }
    Path buckFile=basePath.get().resolve(parserConfig.getBuildFileName());
    Preconditions.checkState(params.getRepository().getFilesystem().exists(buckFile));
    Path targetBasePath=MorePaths.relativize(params.getRepository().getFilesystem().getRootPath().toAbsolutePath(),buckFile.toAbsolutePath().getParent());
    String targetBaseName="//" + targetBasePath.toString();
    if (!targetNodes.containsKey(buckFile)) {
      try {
        List<Map<String,Object>> buildFileTargets=params.getParser().parseBuildFile(buckFile,parserConfig,params.getEnvironment(),params.getConsole(),params.getBuckEventBus());
        for (        Map<String,Object> buildFileTarget : buildFileTargets) {
          if (!buildFileTarget.containsKey("name")) {
            continue;
          }
          BuildTarget target=BuildTarget.builder(targetBaseName,(String)buildFileTarget.get("name")).build();
          if (!targetNodes.containsKey(buckFile)) {
            targetNodes.put(buckFile,Lists.<TargetNode<?>>newArrayList());
          }
          TargetNode<?> parsedTargetNode=params.getParser().getTargetNode(target);
          if (parsedTargetNode != null) {
            targetNodes.get(buckFile).add(parsedTargetNode);
          }
        }
      }
 catch (      BuildFileParseException|BuildTargetException e) {
        params.getConsole().getStdErr().format("Could not parse build targets for %s",targetBaseName);
        return BUILD_TARGET_ERROR;
      }
    }
    for (    TargetNode<?> targetNode : targetNodes.get(buckFile)) {
      report=report.updatedWith(generateOwnersReport(params,targetNode,ImmutableList.of(filePath.toString()),options.isGuessForDeletedEnabled()));
    }
  }
  printReport(params,options,report);
  return 0;
}
