{
  PrintStream out=console.getStdOut();
  Ansi ansi=console.getAnsi();
  if (report.owners.isEmpty()) {
    out.println(ansi.asErrorText("No owners found"));
  }
 else {
    out.println(ansi.asSuccessText("Owners:"));
    for (    BuildRule rule : report.owners.keySet()) {
      out.println(rule.getFullyQualifiedName());
      Set<Path> files=report.owners.get(rule);
      for (      Path input : files) {
        out.println(FILE_INDENT + input);
      }
    }
  }
  if (!report.inputsWithNoOwners.isEmpty()) {
    out.println();
    out.println(ansi.asErrorText("Files without owners:"));
    for (    Path input : report.inputsWithNoOwners) {
      out.println(FILE_INDENT + input);
    }
  }
  if (!report.nonExistentInputs.isEmpty()) {
    out.println();
    out.println(ansi.asErrorText("Non existent files:"));
    for (    String input : report.nonExistentInputs) {
      out.println(FILE_INDENT + input);
    }
  }
  if (!report.nonFileInputs.isEmpty()) {
    out.println();
    out.println(ansi.asErrorText("Non-file inputs:"));
    for (    String input : report.nonFileInputs) {
      out.println(FILE_INDENT + input);
    }
  }
}
