def run_tests_for_diff(args, revisions_to_test, test_index, last_result):
    log(('=== Running tests at revision %s ===' % revisions_to_test[test_index]))
    new_directory_name = (os.path.basename(args.repo_under_test) + ('_test_iteration_%d' % test_index))
    cwd_root = os.path.join(os.path.dirname(args.repo_under_test), new_directory_name)
    cwd = os.path.join(cwd_root, args.project_under_test)
    log(('Renaming %s to %s' % (args.repo_under_test, cwd_root)))
    os.rename(args.repo_under_test, cwd_root)
    try:
        log('== Checking new revision for problems with absolute paths ==')
        result = build_all_targets(args, cwd, 'new', 'readonly')
        suspect_keys = [x for x in result.cache_results.keys() if (x not in ['DIR_HIT', 'IGNORED', 'LOCAL_KEY_UNCHANGED_HIT'])]
        if suspect_keys:
            log(('Building at revision %s with the new buck version was unable to reuse the cache from a previous run.  This suggests one of the rule keys contains an absolute path.' % revisions_to_test[(test_index - 1)]))
            for result_type in suspect_keys:
                for rule in result.cache_results[result_type]:
                    rule_name = rule['rule_name']
                    (key, key_debug) = result.rule_key_map[rule_name]
                    (old_key, old_key_debug) = last_result.rule_key_map[rule_name]
                    log(('Rule %s, result %s.' % (rule_name, result_type)))
                    log(('\tOld Rule Key (%s): %s.' % (old_key, old_key_debug)))
                    log(('\tNew Rule Key (%s): %s.' % (key, key_debug)))
            raise Exception('Failed to reuse cache across directories!!!')
        checkout(revisions_to_test[test_index], cwd_root)
        for attempt in xrange(args.iterations_per_diff):
            cache_mode = 'readonly'
            if (attempt == (args.iterations_per_diff - 1)):
                cache_mode = 'readwrite'
            build_all_targets(args, cwd, 'old', cache_mode)
            build_all_targets(args, cwd, 'new', cache_mode)
        log('== Checking new revision to ensure noop build does nothing. ==')
        result = build_all_targets(args, cwd, 'new', cache_mode, run_clean=False)
        if ((len(result.cache_results.keys()) != 1) or ('LOCAL_KEY_UNCHANGED_HIT' not in result.cache_results)):
            result.cache_results.pop('DIR_HIT', None)
            raise Exception(("Doing a noop build at revision %s with the new buck version did not hit all of it's keys.\nMissed Rules: %s" % (revisions_to_test[(test_index - 1)], repr(result.cache_results))))
    finally:
        log(('Renaming %s to %s' % (cwd_root, args.repo_under_test)))
        os.rename(cwd_root, args.repo_under_test)
    return result
