{
  for (  TargetNode<?> node : nodes) {
    PBXShellScriptBuildPhase shellScriptBuildPhase=new PBXShellScriptBuildPhase();
    target.getBuildPhases().add(shellScriptBuildPhase);
    if (GenruleDescription.TYPE.equals(node.getType())) {
      GenruleDescription.Arg arg=(GenruleDescription.Arg)node.getConstructorArg();
      for (      Path path : sourcePathResolver.getAllPaths(arg.srcs.get())) {
        shellScriptBuildPhase.getInputPaths().add(pathRelativizer.outputDirToRootRelative(path).toString());
      }
      if (arg.cmd.isPresent() && !arg.cmd.get().isEmpty()) {
        shellScriptBuildPhase.setShellScript(arg.cmd.get());
      }
 else       if (arg.bash.isPresent() || arg.cmdExe.isPresent()) {
        throw new IllegalStateException("Shell script phase only supports cmd for genrule.");
      }
      if (!arg.out.isEmpty()) {
        shellScriptBuildPhase.getOutputPaths().add(arg.out);
      }
    }
 else     if (IosPostprocessResourcesDescription.TYPE.equals(node.getType())) {
      IosPostprocessResourcesDescription.Arg arg=(IosPostprocessResourcesDescription.Arg)node.getConstructorArg();
      if (arg.cmd.isPresent()) {
        shellScriptBuildPhase.setShellScript(arg.cmd.get());
      }
    }
 else {
      throw new IllegalStateException("Invalid rule type for shell script build phase");
    }
  }
}
