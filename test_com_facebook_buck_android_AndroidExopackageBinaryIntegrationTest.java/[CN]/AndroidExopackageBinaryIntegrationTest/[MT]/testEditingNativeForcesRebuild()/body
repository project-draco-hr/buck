{
  Thread.sleep(1500);
  ZipInspector zipInspector;
  workspace.replaceFileContents("native/fakenative/jni/fakesystem.c","exit(status)","exit(1+status)");
  workspace.resetBuildLogFile();
  workspace.runBuckBuild(DEX_EXOPACKAGE_TARGET).assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally(DEX_EXOPACKAGE_TARGET);
  zipInspector=new ZipInspector(workspace.getFile("buck-out/gen/apps/multidex/app-dex-exo.apk"));
  zipInspector.assertFileExists("lib/armeabi/libfakenative.so");
  zipInspector.assertFileDoesNotExist("assets/lib/armeabi/libfakenative.so");
  workspace.replaceFileContents("native/fakenative/jni/BUCK","name = 'fakenative',","name = 'fakenative',\nis_asset=True,");
  workspace.resetBuildLogFile();
  workspace.runBuckBuild(DEX_EXOPACKAGE_TARGET).assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally(DEX_EXOPACKAGE_TARGET);
  zipInspector=new ZipInspector(workspace.getFile("buck-out/gen/apps/multidex/app-dex-exo.apk"));
  zipInspector.assertFileDoesNotExist("lib/armeabi/libfakenative.so");
  zipInspector.assertFileExists("assets/lib/armeabi/libfakenative.so");
  Thread.sleep(1500);
  workspace.replaceFileContents("native/fakenative/jni/fakesystem.c","exit(1+status)","exit(2+status)");
  workspace.resetBuildLogFile();
  workspace.runBuckBuild(DEX_EXOPACKAGE_TARGET).assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally(DEX_EXOPACKAGE_TARGET);
  zipInspector=new ZipInspector(workspace.getFile("buck-out/gen/apps/multidex/app-dex-exo.apk"));
  zipInspector.assertFileDoesNotExist("lib/armeabi/libfakenative.so");
  zipInspector.assertFileExists("assets/lib/armeabi/libfakenative.so");
}
