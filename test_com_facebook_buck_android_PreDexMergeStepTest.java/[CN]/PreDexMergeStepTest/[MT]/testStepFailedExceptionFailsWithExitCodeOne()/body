{
  stepRunner=new FakeStepRunner(executorService){
    @Override public void runStepsInParallelAndWait(    List<Step> steps) throws StepFailedException {
      throw new StepFailedException("Step failed in runStepsInParallelAndWait().",steps.get(0),1);
    }
  }
;
  PreDexMergeStep preDexMergeStep=createPreDexMergeStep(SAMPLE_DEX_FILES_TO_MERGE,300,DexStore.JAR);
  ProjectFilesystem projectFilesystem=EasyMock.createMock(ProjectFilesystem.class);
  configureResolveMethod(projectFilesystem);
  setExpectedSecondaryDexFiles(projectFilesystem,2,DexStore.JAR,false);
  ExecutionContext context=TestExecutionContext.newBuilder().setProjectFilesystem(projectFilesystem).build();
  EasyMock.replay(projectFilesystem);
  int exitCode=preDexMergeStep.execute(context);
  assertEquals("Step should exit with non-zero exit code: should not throw.",1,exitCode);
  assertTrue(executorService.wasShutdownNowInvoked());
  EasyMock.verify(projectFilesystem);
}
