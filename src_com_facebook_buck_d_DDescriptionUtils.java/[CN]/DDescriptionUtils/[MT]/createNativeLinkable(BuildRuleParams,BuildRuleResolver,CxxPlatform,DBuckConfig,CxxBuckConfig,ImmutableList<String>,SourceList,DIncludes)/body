{
  BuildTarget buildTarget=params.getBuildTarget();
  SourcePathResolver sourcePathResolver=new SourcePathResolver(buildRuleResolver);
  ImmutableList<SourcePath> sourcePaths=sourcePathsForCompiledSources(params,buildRuleResolver,sourcePathResolver,cxxPlatform,dBuckConfig,compilerFlags,sources,includes);
  return CxxLinkableEnhancer.createCxxLinkableBuildRule(cxxBuckConfig,cxxPlatform,params,buildRuleResolver,sourcePathResolver,buildTarget,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),BuildTargets.getGenPath(buildTarget,"%s/" + buildTarget.getShortName()),Linker.LinkableDepType.STATIC,FluentIterable.from(params.getDeps()).filter(NativeLinkable.class),Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of(),NativeLinkableInput.builder().addAllArgs(StringArg.from(dBuckConfig.getLinkerFlags())).addAllArgs(SourcePathArg.from(sourcePathResolver,sourcePaths)).build());
}
