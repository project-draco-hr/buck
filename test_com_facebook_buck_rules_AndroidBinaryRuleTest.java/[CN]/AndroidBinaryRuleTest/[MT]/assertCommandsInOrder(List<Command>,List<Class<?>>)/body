{
  Iterable<Class<?>> filteredObservedCommands=FluentIterable.from(commands).transform(new Function<Command,Class<?>>(){
    @Override public Class<?> apply(    Command command){
      return command.getClass();
    }
  }
).filter(Predicates.in(Sets.newHashSet(expectedCommands)));
  MoreAsserts.assertIterablesEquals(expectedCommands,filteredObservedCommands);
}
