{
  BuildTarget libraryOnebuildTarget=BuildTargetFactory.newInstance(buildTarget);
  AndroidLibraryRule.Builder androidLibraryRuleBuilder=AndroidLibraryRule.newAndroidLibraryRuleBuilder().addSrc(buildTarget.split(":")[1] + ".java").setBuildTarget(libraryOnebuildTarget);
  if (!Strings.isNullOrEmpty(resDirectory) || !Strings.isNullOrEmpty(assetDirectory)) {
    BuildTarget resourceOnebuildTarget=BuildTargetFactory.newInstance(buildTarget);
    AndroidResourceRule androidResourceRule=AndroidResourceRule.newAndroidResourceRuleBuilder().setAssetsDirectory(assetDirectory).setRes(resDirectory).setBuildTarget(resourceOnebuildTarget).build(buildRuleIndex);
    buildRuleIndex.put(androidResourceRule.getFullyQualifiedName(),androidResourceRule);
    androidLibraryRuleBuilder.addDep(androidResourceRule.getFullyQualifiedName());
  }
  if (!Strings.isNullOrEmpty(resDirectory) || !Strings.isNullOrEmpty(assetDirectory)) {
    BuildTarget resourceOnebuildTarget=BuildTargetFactory.newInstance(buildTarget + "_resources");
    AndroidResourceRule androidResourceRule=AndroidResourceRule.newAndroidResourceRuleBuilder().setAssetsDirectory(assetDirectory).setRes(resDirectory).setBuildTarget(resourceOnebuildTarget).build(buildRuleIndex);
    buildRuleIndex.put(androidResourceRule.getFullyQualifiedName(),androidResourceRule);
    androidLibraryRuleBuilder.addDep(androidResourceRule.getFullyQualifiedName());
  }
  if (!Strings.isNullOrEmpty(nativeLibsDirectory)) {
    BuildTarget nativeLibOnebuildTarget=BuildTargetFactory.newInstance(buildTarget + "_native_libs");
    PrebuiltNativeLibraryBuildRule nativeLibsRule=PrebuiltNativeLibraryBuildRule.newPrebuiltNativeLibrary().setBuildTarget(nativeLibOnebuildTarget).setNativeLibsDirectory(nativeLibsDirectory).build(buildRuleIndex);
    buildRuleIndex.put(nativeLibsRule.getFullyQualifiedName(),nativeLibsRule);
    androidLibraryRuleBuilder.addDep(nativeLibsRule.getFullyQualifiedName());
  }
  JavaLibraryRule androidLibraryRule=androidLibraryRuleBuilder.build(buildRuleIndex);
  buildRuleIndex.put(androidLibraryRule.getFullyQualifiedName(),androidLibraryRule);
  return androidLibraryRule;
}
