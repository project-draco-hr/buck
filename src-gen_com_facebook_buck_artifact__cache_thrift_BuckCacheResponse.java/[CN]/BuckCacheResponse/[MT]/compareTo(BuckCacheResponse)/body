{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetWasSuccessful()).compareTo(other.isSetWasSuccessful());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetWasSuccessful()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.wasSuccessful,other.wasSuccessful);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetErrorMessage()).compareTo(other.isSetErrorMessage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetErrorMessage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.errorMessage,other.errorMessage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetType()).compareTo(other.isSetType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.type,other.type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPayloads()).compareTo(other.isSetPayloads());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPayloads()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.payloads,other.payloads);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFetchResponse()).compareTo(other.isSetFetchResponse());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFetchResponse()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.fetchResponse,other.fetchResponse);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStoreResponse()).compareTo(other.isSetStoreResponse());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStoreResponse()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.storeResponse,other.storeResponse);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
