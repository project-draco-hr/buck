{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
        struct.wasSuccessful=iprot.readBool();
        struct.setWasSuccessfulIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
    struct.errorMessage=iprot.readString();
    struct.setErrorMessageIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 10:
if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
struct.type=com.facebook.buck.artifact_cache.thrift.BuckCacheRequestType.findByValue(iprot.readI32());
struct.setTypeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 100:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list26=iprot.readListBegin();
struct.payloads=new ArrayList<PayloadInfo>(_list26.size);
PayloadInfo _elem27;
for (int _i28=0; _i28 < _list26.size; ++_i28) {
_elem27=new PayloadInfo();
_elem27.read(iprot);
struct.payloads.add(_elem27);
}
iprot.readListEnd();
}
struct.setPayloadsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 101:
if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
struct.fetchResponse=new BuckCacheFetchResponse();
struct.fetchResponse.read(iprot);
struct.setFetchResponseIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 102:
if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
struct.storeResponse=new BuckCacheStoreResponse();
struct.storeResponse.read(iprot);
struct.setStoreResponseIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
