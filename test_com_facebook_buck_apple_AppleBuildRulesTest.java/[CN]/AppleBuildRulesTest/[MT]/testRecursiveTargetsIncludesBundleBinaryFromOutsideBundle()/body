{
  BuildTarget libraryTarget=BuildTargetFactory.newInstance("//foo:lib");
  TargetNode<?> libraryNode=AppleLibraryBuilder.createBuilder(libraryTarget).build();
  BuildTarget bundleTarget=BuildTargetFactory.newInstance("//foo:bundle");
  TargetNode<?> bundleNode=AppleBundleBuilder.createBuilder(bundleTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setBinary(libraryTarget).build();
  BuildTarget rootTarget=BuildTargetFactory.newInstance("//foo:root");
  TargetNode<?> rootNode=AppleLibraryBuilder.createBuilder(rootTarget).setDeps(Optional.of(ImmutableSortedSet.of(libraryTarget,bundleTarget))).build();
  Iterable<TargetNode<?>> rules=AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(TargetGraphFactory.newInstance(ImmutableSet.of(libraryNode,bundleNode,rootNode)),AppleBuildRules.RecursiveDependenciesMode.BUILDING,rootNode,Optional.<ImmutableSet<BuildRuleType>>absent());
  assertTrue(Iterables.elementsEqual(ImmutableSortedSet.of(libraryNode,bundleNode),rules));
}
