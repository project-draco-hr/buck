{
  Type supertype=supertypeBearer.getType();
  Type subtype=subtypeBearer.getType();
  if (supertype.equals(subtype)) {
    return true;
  }
  int superBt=supertype.getBasicType();
  int subBt=subtype.getBasicType();
  if (superBt == Type.BT_ADDR) {
    supertype=Type.OBJECT;
    superBt=Type.BT_OBJECT;
  }
  if (subBt == Type.BT_ADDR) {
    subtype=Type.OBJECT;
    subBt=Type.BT_OBJECT;
  }
  if ((superBt != Type.BT_OBJECT) || (subBt != Type.BT_OBJECT)) {
    return supertype.isIntlike() && subtype.isIntlike();
  }
  if (supertype == Type.KNOWN_NULL) {
    return false;
  }
 else   if (subtype == Type.KNOWN_NULL) {
    return true;
  }
 else   if (supertype == Type.OBJECT) {
    return true;
  }
 else   if (supertype.isArray()) {
    if (!subtype.isArray()) {
      return false;
    }
    do {
      supertype=supertype.getComponentType();
      subtype=subtype.getComponentType();
    }
 while (supertype.isArray() && subtype.isArray());
    return isPossiblyAssignableFrom(supertype,subtype);
  }
 else   if (subtype.isArray()) {
    return (supertype == Type.SERIALIZABLE) || (supertype == Type.CLONEABLE);
  }
 else {
    return true;
  }
}
