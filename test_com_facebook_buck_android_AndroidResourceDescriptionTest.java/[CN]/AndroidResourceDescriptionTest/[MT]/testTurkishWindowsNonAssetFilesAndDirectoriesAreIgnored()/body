{
  AndroidResourceDescription description=new AndroidResourceDescription();
  FileSystem fakeFilesystem=FakeFilesystems.windowsTurkishFilesystem();
  Path root=fakeFilesystem.getPath("c:\\src");
  Path resDir=root.resolve("res");
  Path gitDir=root.resolve(".G\u0130T");
  Files.createDirectories(gitDir);
  Files.createDirectories(resDir);
  Files.createFile(gitDir.resolve("ignore"));
  Files.createFile(resDir.resolve("P\u0130CASA.\u0130N\u0130"));
  Files.createFile(resDir.resolve("image.png"));
  Files.createFile(resDir.resolve("layout.xml"));
  Files.createFile(resDir.resolve("_file"));
  Files.createFile(resDir.resolve("FOO.OR\u0130G"));
  Path valuesDir=resDir.resolve("dirs").resolve("values");
  Files.createDirectories(valuesDir);
  Files.createFile(valuesDir.resolve("strings.xml"));
  Files.createFile(resDir.resolve(".GITKEEP"));
  ProjectFilesystem filesystem=new ProjectFilesystem(root);
  Set<SourcePath> inputs=description.collectInputFiles(filesystem,Optional.of(Paths.get("res")));
  assertThat(inputs,containsInAnyOrder((SourcePath)new FakeSourcePath(filesystem,"res/image.png"),new FakeSourcePath(filesystem,"res/.GITKEEP"),new FakeSourcePath(filesystem,"res/layout.xml"),new FakeSourcePath(filesystem,"res/_file"),new FakeSourcePath(filesystem,"res/dirs/values/strings.xml")));
}
