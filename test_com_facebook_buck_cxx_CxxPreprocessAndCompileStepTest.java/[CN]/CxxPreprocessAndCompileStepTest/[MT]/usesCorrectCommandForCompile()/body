{
  ImmutableList<String> compiler=ImmutableList.of("compiler");
  ImmutableList<String> flags=ImmutableList.of("-ffunction-sections");
  Path output=Paths.get("test.o");
  Path input=Paths.get("test.ii");
  ImmutableMap<Path,Path> replacementPaths=ImmutableMap.of();
  CxxPreprocessAndCompileStep compileStep=new CxxPreprocessAndCompileStep(compiler,CxxPreprocessAndCompileStep.Operation.COMPILE,flags,output,input,replacementPaths,Optional.<DebugPathSanitizer>absent());
  ImmutableList<String> expectedCompileCommand=ImmutableList.<String>builder().addAll(compiler).add("-c").add("-ffunction-sections").add("-o",output.toString()).add(input.toString()).build();
  ImmutableList<String> actualCompileCommand=compileStep.getCommand();
  assertEquals(expectedCompileCommand,actualCompileCommand);
}
