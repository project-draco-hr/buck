{
  BuildTarget binaryTarget=BuildTarget.builder(rootPath,"//foo","binary").build();
  TargetNode<?> binaryNode=AppleBinaryBuilder.createBuilder(binaryTarget).setConfigs(Optional.of(ImmutableSortedMap.of("Debug",ImmutableMap.<String,String>of()))).setSrcs(Optional.of(ImmutableSortedSet.of(SourceWithFlags.of(new FakeSourcePath("foo.m"),ImmutableList.of("-foo"))))).build();
  ImmutableSet<TargetNode<?>> nodes=ImmutableSet.<TargetNode<?>>of(binaryNode);
  final TargetGraph targetGraph=TargetGraphFactory.newInstance(nodes);
  ProjectGenerator projectGenerator=new ProjectGenerator(targetGraph,FluentIterable.from(nodes).transform(HasBuildTarget.TO_TARGET).toSet(),projectFilesystem,OUTPUT_DIRECTORY,PROJECT_NAME,"BUCK",ImmutableSet.<ProjectGenerator.Option>of(),Optional.of(binaryTarget),ImmutableList.of("--flag","value with spaces"),new AlwaysFoundExecutableFinder(),ImmutableMap.<String,String>of(),PLATFORMS,DEFAULT_PLATFORM,getSourcePathResolverForNodeFunction(targetGraph),getFakeBuckEventBus(),false,halideBuckConfig);
  projectGenerator.createXcodeProjects();
  PBXTarget buildWithBuckTarget=null;
  for (  PBXTarget target : projectGenerator.getGeneratedProject().getTargets()) {
    if (target.getProductName() != null && target.getProductName().endsWith("-Buck")) {
      buildWithBuckTarget=target;
    }
  }
  assertThat(buildWithBuckTarget,is(notNullValue()));
  assertHasConfigurations(buildWithBuckTarget,"Debug");
  assertKeepsConfigurationsInMainGroup(projectGenerator.getGeneratedProject(),buildWithBuckTarget);
  assertEquals("Should have exact number of build phases",1,buildWithBuckTarget.getBuildPhases().size());
  PBXBuildPhase buildPhase=Iterables.getOnlyElement(buildWithBuckTarget.getBuildPhases());
  assertThat(buildPhase,instanceOf(PBXShellScriptBuildPhase.class));
  PBXShellScriptBuildPhase shellScriptBuildPhase=(PBXShellScriptBuildPhase)buildPhase;
  assertThat(shellScriptBuildPhase.getShellScript(),containsString("buck build --report-absolute-paths --flag 'value with spaces' " + binaryTarget.getFullyQualifiedName()));
}
