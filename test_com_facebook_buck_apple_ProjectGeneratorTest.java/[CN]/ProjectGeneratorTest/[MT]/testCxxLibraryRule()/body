{
  BuildTarget buildTarget=BuildTarget.builder("//foo","lib").build();
  TargetNode<?> cxxNode=new CxxLibraryBuilder(buildTarget).setSrcs(ImmutableSortedSet.of(SourceWithFlags.of(new TestSourcePath("foo.cpp"),ImmutableList.of("-foo")),SourceWithFlags.of(new TestSourcePath("bar.cpp")))).setHeaders(ImmutableSortedSet.<SourcePath>of(new TestSourcePath("foo.h"))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.<TargetNode<?>>of(cxxNode));
  projectGenerator.createXcodeProjects();
  PBXTarget target=assertTargetExistsAndReturnTarget(projectGenerator.getGeneratedProject(),"//foo:lib");
  assertThat(target.isa(),equalTo("PBXNativeTarget"));
  assertThat(target.getProductType(),equalTo(ProductType.STATIC_LIBRARY));
  assertHasConfigurations(target,"Debug","Release","Profile");
  assertEquals("Should have exact number of build phases",1,target.getBuildPhases().size());
  assertHasSingletonSourcesPhaseWithSourcesAndFlags(target,ImmutableMap.of("foo.cpp",Optional.of("-foo"),"bar.cpp",Optional.<String>absent()));
}
