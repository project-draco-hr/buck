{
  BuildTarget buildTarget1=BuildTarget.builder(rootPath,"//foo/bar","target1").build();
  TargetNode<?> node1=AppleLibraryBuilder.createBuilder(buildTarget1).build();
  BuildTarget buildTarget2=BuildTarget.builder(rootPath,"//foo/foo","target2").build();
  TargetNode<?> node2=AppleLibraryBuilder.createBuilder(buildTarget2).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(node1,node2),ImmutableSet.of(ProjectGenerator.Option.CREATE_DIRECTORY_STRUCTURE,ProjectGenerator.Option.USE_SHORT_NAMES_FOR_TARGETS));
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXGroup mainGroup=project.getMainGroup();
  PBXGroup groupFoo=null;
  for (  PBXReference reference : mainGroup.getChildren()) {
    if (reference instanceof PBXGroup && "foo".equals(reference.getName())) {
      groupFoo=(PBXGroup)reference;
    }
  }
  assertNotNull("Project should have a group called foo",groupFoo);
  assertEquals("foo",groupFoo.getName());
  assertThat(groupFoo.getChildren(),hasSize(2));
  PBXGroup groupFooBar=(PBXGroup)Iterables.get(groupFoo.getChildren(),0);
  assertEquals("bar",groupFooBar.getName());
  assertThat(groupFooBar.getChildren(),hasSize(1));
  PBXGroup groupFooFoo=(PBXGroup)Iterables.get(groupFoo.getChildren(),1);
  assertEquals("foo",groupFooFoo.getName());
  assertThat(groupFooFoo.getChildren(),hasSize(1));
  PBXGroup groupFooBarTarget1=(PBXGroup)Iterables.get(groupFooBar.getChildren(),0);
  assertEquals("target1",groupFooBarTarget1.getName());
  PBXGroup groupFooFooTarget2=(PBXGroup)Iterables.get(groupFooFoo.getChildren(),0);
  assertEquals("target2",groupFooFooTarget2.getName());
}
