{
  BuildTarget scriptTarget=BuildTarget.builder("//foo","post_build_script").build();
  TargetNode<?> scriptNode=IosPostprocessResourcesBuilder.createBuilder(scriptTarget).setCmd(Optional.of("script.sh")).build();
  BuildTarget resourceTarget=BuildTarget.builder("//foo","resource").build();
  TargetNode<?> resourceNode=AppleResourceBuilder.createBuilder(resourceTarget).setFiles(ImmutableSet.<SourcePath>of(new TestSourcePath("bar.png"))).setDirs(ImmutableSet.<Path>of()).build();
  BuildTarget sharedLibraryTarget=BuildTarget.builder("//dep","shared").addFlavors(CxxDescriptionEnhancer.SHARED_FLAVOR).build();
  TargetNode<?> sharedLibraryNode=AppleLibraryBuilder.createBuilder(sharedLibraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(resourceTarget))).build();
  BuildTarget bundleTarget=BuildTarget.builder("//foo","bundle").build();
  TargetNode<?> bundleNode=AppleBundleBuilder.createBuilder(bundleTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.BUNDLE)).setBinary(sharedLibraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(scriptTarget))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(scriptNode,resourceNode,sharedLibraryNode,bundleNode));
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXTarget target=assertTargetExistsAndReturnTarget(project,"//foo:bundle");
  assertThat(target.getName(),equalTo("//foo:bundle"));
  assertThat(target.isa(),equalTo("PBXNativeTarget"));
  PBXShellScriptBuildPhase shellScriptBuildPhase=getSingletonPhaseByType(target,PBXShellScriptBuildPhase.class);
  assertThat(shellScriptBuildPhase.getShellScript(),equalTo("script.sh"));
  assertThat(target.getBuildPhases().get(0),instanceOf(PBXResourcesBuildPhase.class));
  assertThat(target.getBuildPhases().get(1),instanceOf(PBXShellScriptBuildPhase.class));
}
