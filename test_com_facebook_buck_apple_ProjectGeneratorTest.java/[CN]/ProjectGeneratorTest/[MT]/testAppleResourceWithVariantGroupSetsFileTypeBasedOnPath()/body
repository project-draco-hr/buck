{
  BuildTarget resourceTarget=BuildTarget.builder(rootPath,"//foo","resource").addFlavors(DEFAULT_FLAVOR).build();
  TargetNode<?> resourceNode=AppleResourceBuilder.createBuilder(resourceTarget).setFiles(ImmutableSet.<SourcePath>of()).setDirs(ImmutableSet.<SourcePath>of()).setVariants(Optional.<Set<SourcePath>>of(ImmutableSet.<SourcePath>of(new TestSourcePath("Base.lproj/Bar.storyboard")))).build();
  BuildTarget fooLibraryTarget=BuildTarget.builder(rootPath,"//foo","lib").build();
  TargetNode<?> fooLibraryNode=AppleLibraryBuilder.createBuilder(fooLibraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(resourceTarget))).build();
  BuildTarget bundleTarget=BuildTarget.builder(rootPath,"//foo","bundle").build();
  TargetNode<?> bundleNode=AppleBundleBuilder.createBuilder(bundleTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.BUNDLE)).setInfoPlist(new TestSourcePath("Info.plist")).setBinary(fooLibraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(resourceTarget))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(fooLibraryNode,bundleNode,resourceNode),ImmutableSet.<ProjectGenerator.Option>of());
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXGroup targetGroup=project.getMainGroup().getOrCreateChildGroupByName(bundleTarget.getFullyQualifiedName());
  PBXGroup resourcesGroup=targetGroup.getOrCreateChildGroupByName("Resources");
  PBXVariantGroup storyboardGroup=(PBXVariantGroup)Iterables.get(resourcesGroup.getChildren(),0);
  List<PBXReference> storyboardGroupChildren=storyboardGroup.getChildren();
  assertEquals(1,storyboardGroupChildren.size());
  assertTrue(storyboardGroupChildren.get(0) instanceof PBXFileReference);
  PBXFileReference baseStoryboardReference=(PBXFileReference)storyboardGroupChildren.get(0);
  assertEquals("Base",baseStoryboardReference.getName());
  assertEquals(Optional.of("file.storyboard"),baseStoryboardReference.getLastKnownFileType());
  assertEquals(Optional.<String>absent(),baseStoryboardReference.getExplicitFileType());
}
