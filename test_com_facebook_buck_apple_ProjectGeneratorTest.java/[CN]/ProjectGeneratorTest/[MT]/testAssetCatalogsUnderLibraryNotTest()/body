{
  BuildTarget libraryTarget=BuildTarget.builder(rootPath,"//foo","lib").build();
  BuildTarget testTarget=BuildTarget.builder(rootPath,"//foo","test").build();
  BuildTarget assetCatalogTarget=BuildTarget.builder(rootPath,"//foo","asset_catalog").build();
  TargetNode<?> libraryNode=AppleLibraryBuilder.createBuilder(libraryTarget).setTests(Optional.of(ImmutableSortedSet.of(testTarget))).setDeps(Optional.of(ImmutableSortedSet.of(assetCatalogTarget))).build();
  TargetNode<?> testNode=AppleTestBuilder.createBuilder(testTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setConfigs(Optional.of(ImmutableSortedMap.of("Default",ImmutableMap.<String,String>of()))).setInfoPlist(new FakeSourcePath("Info.plist")).setDeps(Optional.of(ImmutableSortedSet.of(libraryTarget))).build();
  TargetNode<?> assetCatalogNode=AppleAssetCatalogBuilder.createBuilder(assetCatalogTarget).setDirs(ImmutableSortedSet.of(Paths.get("AssetCatalog.xcassets"))).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(libraryNode,testNode,assetCatalogNode),ImmutableSet.of(ProjectGenerator.Option.USE_SHORT_NAMES_FOR_TARGETS));
  projectGenerator.createXcodeProjects();
  PBXProject project=projectGenerator.getGeneratedProject();
  PBXGroup mainGroup=project.getMainGroup();
  PBXTarget fooLibTarget=assertTargetExistsAndReturnTarget(project,"lib");
  assertTrue(FluentIterable.from(fooLibTarget.getBuildPhases()).filter(PBXResourcesBuildPhase.class).isEmpty());
  PBXGroup libResourcesGroup=mainGroup.getOrCreateChildGroupByName("lib").getOrCreateChildGroupByName("Resources");
  PBXFileReference assetCatalogFile=(PBXFileReference)libResourcesGroup.getChildren().get(0);
  assertEquals("AssetCatalog.xcassets",assetCatalogFile.getName());
  PBXTarget fooTestTarget=assertTargetExistsAndReturnTarget(project,"test");
  PBXResourcesBuildPhase resourcesBuildPhase=getSingletonPhaseByType(fooTestTarget,PBXResourcesBuildPhase.class);
  assertThat(resourcesBuildPhase.getFiles(),hasSize(1));
  assertThat(assertFileRefIsRelativeAndResolvePath(resourcesBuildPhase.getFiles().get(0).getFileRef()),equalTo(projectFilesystem.resolve("AssetCatalog.xcassets").toString()));
  PBXGroup testResourcesGroup=mainGroup.getOrCreateChildGroupByName("test").getOrCreateChildGroupByName("Resources");
  assetCatalogFile=(PBXFileReference)testResourcesGroup.getChildren().get(0);
  assertEquals("AssetCatalog.xcassets",assetCatalogFile.getName());
}
