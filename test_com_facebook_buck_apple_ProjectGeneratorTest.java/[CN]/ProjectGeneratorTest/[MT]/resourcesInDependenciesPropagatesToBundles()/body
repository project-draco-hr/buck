{
  BuildTarget resourceTarget=BuildTarget.builder(rootPath,"//foo","res").build();
  TargetNode<?> resourceNode=AppleResourceBuilder.createBuilder(resourceTarget).setFiles(ImmutableSet.<SourcePath>of(new TestSourcePath("bar.png"))).setDirs(ImmutableSet.<SourcePath>of(new TestSourcePath("foodir"))).build();
  BuildTarget libraryTarget=BuildTarget.builder(rootPath,"//foo","lib").build();
  TargetNode<?> libraryNode=AppleLibraryBuilder.createBuilder(libraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(resourceTarget))).build();
  BuildTarget bundleLibraryTarget=BuildTarget.builder(rootPath,"//foo","bundlelib").build();
  TargetNode<?> bundleLibraryNode=AppleLibraryBuilder.createBuilder(bundleLibraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(libraryTarget))).build();
  BuildTarget bundleTarget=BuildTarget.builder(rootPath,"//foo","bundle").build();
  TargetNode<?> bundleNode=AppleBundleBuilder.createBuilder(bundleTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.BUNDLE)).setInfoPlist(new TestSourcePath("Info.plist")).setBinary(bundleLibraryTarget).build();
  ProjectGenerator projectGenerator=createProjectGeneratorForCombinedProject(ImmutableSet.of(resourceNode,libraryNode,bundleLibraryNode,bundleNode));
  projectGenerator.createXcodeProjects();
  PBXProject generatedProject=projectGenerator.getGeneratedProject();
  PBXTarget target=assertTargetExistsAndReturnTarget(generatedProject,"//foo:bundle");
  assertHasSingletonResourcesPhaseWithEntries(target,"bar.png","foodir");
}
