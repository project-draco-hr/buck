{
  final ConcurrentLinkedQueue<String> uploadedData=new ConcurrentLinkedQueue<>();
  HttpEndpoint testEndpoint=new HttpEndpoint(){
    @Override public ListenableFuture<HttpResponse> post(    String content){
      uploadedData.add(content);
      return Futures.immediateFuture(new HttpResponse(""));
    }
    @Override public void close() throws Exception {
    }
  }
;
  HttpPutLogger httpPutLogger=new HttpPutLogger(testEndpoint,ObjectMappers.newDefaultInstance());
  String entry1="{\"e\":1}";
  String entry2="{\"e\":2}";
  httpPutLogger.log(entry1);
  httpPutLogger.log(entry2);
  httpPutLogger.close().get(0,TimeUnit.SECONDS);
  assertThat(uploadedData,Matchers.contains("[" + entry1 + ","+ entry2+ "]"));
  testEndpoint.close();
}
