{
  LOG.verbose(String.format("DistBuildConfig: [%s]",distBuildConfig.toString()));
  StartBuildRequest startTime=new StartBuildRequest();
  BuildStatusRequest status=new BuildStatusRequest();
  FrontendRequest request=new FrontendRequest();
  FrontendResponse response=new FrontendResponse();
  BuildJob job;
  BuildId id;
  startTime.setStartTimestampMillis(System.currentTimeMillis());
  try {
    ThriftOverHttp thriftClient=new ThriftOverHttp(frontendUrl,ThriftOverHttp.Encoding.json);
    request.setType(FrontendRequestType.START_BUILD);
    request.setStartBuild(startTime);
    thriftClient.writeAndSend(request);
    thriftClient.read(response);
    Preconditions.checkState(response.getType().equals(FrontendRequestType.START_BUILD));
    job=response.getStartBuild().getBuildJob();
    id=job.getBuildId();
    LOG.info("Submitted job. Build id = " + id.getId());
    logDebugInfo(job);
    status.setBuildId(id);
    request.clear();
    request.setType(FrontendRequestType.BUILD_STATUS);
    request.setBuildStatus(status);
    Stopwatch stopwatch=Stopwatch.createStarted();
    do {
      thriftClient.writeAndSend(request);
      response.clear();
      thriftClient.read(response);
      Preconditions.checkState(response.getType().equals(FrontendRequestType.BUILD_STATUS));
      job=response.getBuildStatus().getBuildJob();
      Preconditions.checkState(job.getBuildId().equals(id));
      LOG.info("Got build status: " + job.getStatus().toString());
      eventBus.post(new DistBuildStatusEvent(DistBuildStatus.builder().setETAMillis(BUILD_DURATION_MS - stopwatch.elapsed(TimeUnit.MILLISECONDS)).setStatus(job.getStatus().toString()).setMessage(getLastLogLine(job)).build()));
      Thread.sleep(1000);
    }
 while (!(job.getStatus().equals(BuildStatus.FINISHED_SUCCESSFULLY) || job.getStatus().equals(BuildStatus.FAILED)));
    LOG.info("Build was " + (response.isWasSuccessful() ? "" : "not ") + "successful!");
    if (response.isSetErrorMessage()) {
      LOG.error("Error msg: " + response.getErrorMessage());
    }
    logDebugInfo(job);
    eventBus.post(new DistBuildStatusEvent(DistBuildStatus.builder().setStatus(job.getStatus().toString()).setETAMillis(0).setMessage(getLastLogLine(job)).build()));
    thriftClient.close();
  }
 catch (  Exception e) {
    LOG.error(e);
  }
}
