{
  final BuildRuleResolver resolver=new BuildRuleResolver(targetGraph,transformer);
  final int numberOfNodes=targetGraph.getNodes().size();
  final AtomicInteger processedNodes=new AtomicInteger(0);
  AbstractBottomUpTraversal<TargetNode<?>,RuntimeException> bottomUpTraversal=new AbstractBottomUpTraversal<TargetNode<?>,RuntimeException>(targetGraph){
    @Override public void visit(    TargetNode<?> node){
      try {
        resolver.requireRule(node.getBuildTarget());
      }
 catch (      NoSuchBuildTargetException e) {
        throw new HumanReadableException(e);
      }
      eventBus.post(ActionGraphEvent.processed(processedNodes.incrementAndGet(),numberOfNodes));
    }
  }
;
  bottomUpTraversal.traverse();
  return ActionGraphAndResolver.builder().setActionGraph(new ActionGraph(resolver.getBuildRules())).setResolver(resolver).build();
}
