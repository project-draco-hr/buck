{
  if (buildRule == null || sourceRoots == null) {
    return false;
  }
  if (buildRule.getProperties().is(PACKAGING) && sourceRoots.isEmpty()) {
    return false;
  }
  JavaLibrary javaLibrary;
  if (buildRule instanceof JavaLibrary) {
    javaLibrary=(JavaLibrary)buildRule;
    Path basePath=buildRule.getBuildTarget().getBasePath();
    for (    SourcePath path : javaLibrary.getSources()) {
      if (!(path instanceof PathSourcePath)) {
        Path pathToTarget=resolver.getRelativePath(path);
        Path relativePath=basePath.relativize(Paths.get("")).resolve(pathToTarget).getParent();
        String url=String.format("file://$MODULE_DIR$/%s",MorePaths.pathWithUnixSeparators(relativePath));
        SerializableModule.SourceFolder sourceFolder=new SerializableModule.SourceFolder(url,isTestSource,"");
        module.sourceFolders.add(sourceFolder);
      }
    }
  }
  if (sourceRoots.isEmpty()) {
    String url="file://$MODULE_DIR$";
    String packagePrefix=javaPackageFinder.findJavaPackage(Preconditions.checkNotNull(module.pathToImlFile));
    SerializableModule.SourceFolder sourceFolder=new SerializableModule.SourceFolder(url,isTestSource,packagePrefix);
    module.sourceFolders.add(sourceFolder);
  }
 else {
    for (    SourceRoot sourceRoot : sourceRoots) {
      SerializableModule.SourceFolder sourceFolder=new SerializableModule.SourceFolder(String.format("file://$MODULE_DIR$/%s",sourceRoot.getName()),isTestSource);
      module.sourceFolders.add(sourceFolder);
    }
  }
  for (  Path relativePath : this.buildFileTree.getChildPaths(buildRule.getBuildTarget())) {
    String excludeFolderUrl="file://$MODULE_DIR$/" + relativePath;
    SerializableModule.SourceFolder excludeFolder=new SerializableModule.SourceFolder(excludeFolderUrl,false);
    module.excludeFolders.add(excludeFolder);
  }
  return true;
}
