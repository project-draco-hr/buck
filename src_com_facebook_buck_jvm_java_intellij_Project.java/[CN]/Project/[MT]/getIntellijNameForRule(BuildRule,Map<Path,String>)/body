{
  String name;
  if (rule instanceof PrebuiltJar) {
    PrebuiltJar prebuiltJar=(PrebuiltJar)rule;
    Path absolutePath=resolver.getAbsolutePath(prebuiltJar.getBinaryJar());
    Path relativePath=projectFilesystem.getRootPath().relativize(absolutePath);
    String binaryJarUnixPath=MorePaths.pathWithUnixSeparators(relativePath);
    return getIntellijNameForBinaryJar(binaryJarUnixPath);
  }
 else {
    Path basePath=rule.getBuildTarget().getBasePath();
    if (basePathToAliasMap != null && basePathToAliasMap.containsKey(basePath)) {
      name=Preconditions.checkNotNull(basePathToAliasMap.get(basePath));
    }
 else {
      name=MorePaths.pathWithUnixSeparators(rule.getBuildTarget().getBasePath());
      name=name.replace('/','_');
      name="module_" + name;
    }
    return normalizeIntelliJName(name);
  }
}
