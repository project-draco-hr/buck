{
  builder.setReflectively("preprocessor",preprocessor);
  builder.setReflectively("prefixHeader",prefixHeader);
  builder.setReflectively("includes",includes);
  builder.setReflectively("platformPreprocessorFlags",sanitizer.sanitizeFlags(Optional.of(platformPreprocessorFlags)));
  builder.setReflectively("rulePreprocessorFlags",sanitizer.sanitizeFlags(Optional.of(rulePreprocessorFlags)));
  ImmutableList<String> frameworkRoots=FluentIterable.from(this.frameworkRoots).transform(Functions.toStringFunction()).transform(sanitizer.sanitize(Optional.<Path>absent())).toList();
  builder.setReflectively("frameworkRoots",frameworkRoots);
  return builder;
}
