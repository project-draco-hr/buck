{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  TestProjectBuildFileParserFactory buildFileParserFactory=new TestProjectBuildFileParserFactory(cell.getRoot(),cell.getKnownBuildRuleTypes());
  BuckEventBus buckEventBus=BuckEventBusFactory.newInstance(new FakeClock(0));
  final List<ConsoleEvent> consoleEvents=new ArrayList<>();
class EventListener {
    @Subscribe public void onConsoleEvent(    ConsoleEvent consoleEvent){
      consoleEvents.add(consoleEvent);
    }
  }
  EventListener eventListener=new EventListener();
  buckEventBus.register(eventListener);
  try (ProjectBuildFileParser buildFileParser=buildFileParserFactory.createNoopParserThatAlwaysReturnsSuccessWithError(buckEventBus,"This is an error","parser")){
    buildFileParser.initIfNeeded();
    buildFileParser.getAllRulesAndMetaRules(cell.getRoot(),Paths.get("foo"));
  }
   assertThat(consoleEvents,Matchers.contains(Matchers.hasToString("Error raised by BUCK file parser: This is an error")));
}
