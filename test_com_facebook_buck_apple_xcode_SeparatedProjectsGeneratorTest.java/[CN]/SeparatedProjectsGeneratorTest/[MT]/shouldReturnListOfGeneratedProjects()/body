{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildRule fooRule1=createBuildRuleWithDefaults(BuildTarget.builder("//foo","rule1").build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription,resolver);
  resolver.addToIndex(fooRule1);
  BuildRule fooConfigRule=createXcodeProjectConfigRule("//foo","fooproject",resolver,ImmutableSet.of(fooRule1));
  resolver.addToIndex(fooConfigRule);
  BuildRule barRule2=createBuildRuleWithDefaults(BuildTarget.builder("//bar","rule2").build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription,resolver);
  resolver.addToIndex(barRule2);
  BuildRule barConfigRule=createXcodeProjectConfigRule("//bar","barproject",resolver,ImmutableSet.of(barRule2));
  resolver.addToIndex(barConfigRule);
  SeparatedProjectsGenerator generator=new SeparatedProjectsGenerator(projectFilesystem,createPartialGraphFromBuildRules(ImmutableSet.of(fooRule1,barRule2,fooConfigRule,barConfigRule)).getActionGraph(),executionContext,ImmutableSet.of(fooConfigRule.getBuildTarget(),barConfigRule.getBuildTarget()),ImmutableSet.<ProjectGenerator.Option>of());
  ImmutableSet<Path> paths=generator.generateProjects();
  assertEquals(ImmutableSet.of(Paths.get("foo/fooproject.xcodeproj"),Paths.get("bar/barproject.xcodeproj")),paths);
}
