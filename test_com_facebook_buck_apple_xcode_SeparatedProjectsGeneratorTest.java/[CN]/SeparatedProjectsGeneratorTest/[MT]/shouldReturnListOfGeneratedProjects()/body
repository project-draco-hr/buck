{
  BuildTarget fooTarget1=BuildTarget.builder("//foo","rule1").build();
  TargetNode<?> fooNode1=AppleLibraryBuilder.createBuilder(fooTarget1).build();
  BuildTarget fooConfigTarget=BuildTarget.builder("//foo","project").build();
  TargetNode<?> fooConfigNode=XcodeProjectConfigBuilder.createBuilder(fooConfigTarget).setProjectName("fooproject").setRules(ImmutableSortedSet.of(fooTarget1)).build();
  BuildTarget barTarget2=BuildTarget.builder("//bar","rule2").build();
  TargetNode<?> barNode2=AppleLibraryBuilder.createBuilder(barTarget2).build();
  BuildTarget barConfigTarget=BuildTarget.builder("//bar","project").build();
  TargetNode<?> barConfigNode=XcodeProjectConfigBuilder.createBuilder(barConfigTarget).setProjectName("barproject").setRules(ImmutableSortedSet.of(barTarget2)).build();
  SeparatedProjectsGenerator generator=new SeparatedProjectsGenerator(projectFilesystem,TargetGraphFactory.newInstance(ImmutableSet.of(fooNode1,fooConfigNode,barNode2,barConfigNode)),ImmutableSet.of(fooConfigTarget,barConfigTarget),ImmutableSet.<ProjectGenerator.Option>of());
  ImmutableSet<Path> paths=generator.generateProjects();
  assertEquals(ImmutableSet.of(Paths.get("foo/fooproject.xcodeproj"),Paths.get("bar/barproject.xcodeproj")),paths);
}
