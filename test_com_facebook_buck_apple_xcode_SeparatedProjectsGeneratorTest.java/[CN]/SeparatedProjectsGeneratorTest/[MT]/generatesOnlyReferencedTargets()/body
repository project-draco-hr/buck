{
  BuildTarget depTarget=BuildTarget.builder("//elsewhere","somedep").build();
  TargetNode<?> depNode=AppleLibraryBuilder.createBuilder(depTarget).build();
  BuildTarget target=BuildTarget.builder("//foo/bar","somelib").build();
  TargetNode<?> node=AppleLibraryBuilder.createBuilder(target).setDeps(Optional.of(ImmutableSortedSet.of(depTarget))).build();
  BuildTarget configTarget=BuildTarget.builder("//foo/bar","project").build();
  TargetNode<?> configNode=XcodeProjectConfigBuilder.createBuilder(configTarget).setProjectName("fooproject").setRules(ImmutableSortedSet.of(target)).build();
  SeparatedProjectsGenerator generator=new SeparatedProjectsGenerator(projectFilesystem,TargetGraphFactory.newInstance(ImmutableSet.of(depNode,node,configNode)),executionContext,ImmutableSet.of(configTarget),ImmutableSet.<ProjectGenerator.Option>of());
  generator.generateProjects();
  PBXProject project=getGeneratedProjectOfConfigRule(generator,configTarget);
  assertThat("Has only one targets",project.getTargets(),hasSize(1));
  assertThat("The target is the named target",project.getTargets(),hasItem(isTargetWithName("somelib")));
}
