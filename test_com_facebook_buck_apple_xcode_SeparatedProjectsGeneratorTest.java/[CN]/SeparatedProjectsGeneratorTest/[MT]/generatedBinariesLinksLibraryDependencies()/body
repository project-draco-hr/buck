{
  BuildRule depRule=createBuildRuleWithDefaults(BuildTarget.builder("//elsewhere","somedep").build(),ImmutableSortedSet.<BuildRule>of(),iosLibraryDescription);
  BuildRule rule=createBuildRuleWithDefaults(BuildTarget.builder("//foo","bin").build(),ImmutableSortedSet.of(depRule),iosBinaryDescription);
  BuildRule configRule=createXcodeProjectConfigRule("//foo/bar","fooproject",ImmutableSet.of(rule));
  PartialGraph partialGraph=createPartialGraphFromBuildRules(ImmutableSet.of(rule,configRule));
  SeparatedProjectsGenerator generator=new SeparatedProjectsGenerator(projectFilesystem,partialGraph,executionContext,ImmutableSet.of(configRule.getBuildTarget()),ImmutableSet.<ProjectGenerator.Option>of());
  generator.generateProjects();
  PBXProject project=getGeneratedProjectOfConfigRule(generator,configRule);
  PBXTarget target=assertTargetExistsAndReturnTarget(project,"bin");
  assertHasSingletonFrameworksPhaseWithFrameworkEntries(target,ImmutableList.of("$BUILT_PRODUCTS_DIR/libsomedep.a"));
}
