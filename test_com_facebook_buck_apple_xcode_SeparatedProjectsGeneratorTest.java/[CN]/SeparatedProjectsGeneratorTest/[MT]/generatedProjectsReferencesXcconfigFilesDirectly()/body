{
  BuildRule rule=createBuildRuleWithDefaults(BuildTarget.builder("//foo","rule").build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription,new Function<AppleNativeTargetDescriptionArg,AppleNativeTargetDescriptionArg>(){
    @Override public AppleNativeTargetDescriptionArg apply(    AppleNativeTargetDescriptionArg input){
      input.configs=Optional.of(ImmutableMap.of("Debug",ImmutableList.of(Either.<SourcePath,ImmutableMap<String,String>>ofLeft(new PathSourcePath(Paths.get("project.xcconfig"))),Either.<SourcePath,ImmutableMap<String,String>>ofLeft(new PathSourcePath(Paths.get("target.xcconfig"))))));
      return input;
    }
  }
);
  BuildRule configRule=createXcodeProjectConfigRule("//foo","fooproject",ImmutableSet.of(rule));
  SeparatedProjectsGenerator generator=new SeparatedProjectsGenerator(projectFilesystem,createPartialGraphFromBuildRules(ImmutableSet.of(configRule,rule)),executionContext,ImmutableSet.of(configRule.getBuildTarget()),ImmutableSet.<ProjectGenerator.Option>of());
  generator.generateProjects();
  PBXProject project=getGeneratedProjectOfConfigRule(generator,configRule);
  XCBuildConfiguration projectLevelConfig=project.getBuildConfigurationList().getBuildConfigurationsByName().asMap().get("Debug");
  assertNotNull("should have project level Debug config",projectLevelConfig);
  assertNotNull("project level Debug config should reference xcconfig file",projectLevelConfig.getBaseConfigurationReference());
  assertEquals("Project level config file should be set correctly","../project.xcconfig",projectLevelConfig.getBaseConfigurationReference().getPath());
  XCBuildConfiguration targetLevelConfig=ProjectGeneratorTestUtils.assertTargetExistsAndReturnTarget(project,"rule").getBuildConfigurationList().getBuildConfigurationsByName().asMap().get("Debug");
  assertNotNull("should have target level Debug config",targetLevelConfig);
  assertNotNull("project level Debug config should reference xcconfig file",targetLevelConfig.getBaseConfigurationReference());
  assertEquals("Target level config file should be set correctly","../target.xcconfig",targetLevelConfig.getBaseConfigurationReference().getPath());
}
