{
  LinkedBlockingStack<Integer> stack=new LinkedBlockingStack<>();
  assertThat(stack.contains(1),is(false));
  assertThat(stack.contains(2),is(false));
  assertThat(stack.containsAll(ImmutableList.of(1,2)),is(false));
  stack.put(2);
  assertThat(stack.contains(1),is(false));
  assertThat(stack.contains(2),is(true));
  assertThat(stack.containsAll(ImmutableList.of(1,2)),is(false));
  stack.put(1);
  assertThat(stack.contains(1),is(true));
  assertThat(stack.contains(2),is(true));
  assertThat(stack.containsAll(ImmutableList.of(1,2)),is(true));
  stack.take();
  assertThat(stack.contains(1),is(false));
  assertThat(stack.contains(2),is(true));
  assertThat(stack.containsAll(ImmutableList.of(1,2)),is(false));
  stack.take();
  assertThat(stack.contains(1),is(false));
  assertThat(stack.contains(2),is(false));
  assertThat(stack.containsAll(ImmutableList.of(1,2)),is(false));
}
