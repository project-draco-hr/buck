{
  final ImmutableSetMultimap.Builder<JavaLibrary,Path> classpathEntries=ImmutableSetMultimap.builder();
  ImmutableSetMultimap<JavaLibrary,Path> classpathEntriesForDeps=getClasspathEntries(javaLibraryRule.getDepsForTransitiveClasspathEntries());
  ImmutableSetMultimap<JavaLibrary,Path> classpathEntriesForExportedsDeps;
  if (javaLibraryRule instanceof ExportDependencies) {
    classpathEntriesForExportedsDeps=getClasspathEntries(((ExportDependencies)javaLibraryRule).getExportedDeps());
  }
 else {
    classpathEntriesForExportedsDeps=ImmutableSetMultimap.of();
  }
  classpathEntries.putAll(classpathEntriesForDeps);
  if (!classpathEntriesForExportedsDeps.isEmpty()) {
    classpathEntries.putAll(javaLibraryRule,classpathEntriesForExportedsDeps.values());
  }
  if (outputJar.isPresent()) {
    classpathEntries.put(javaLibraryRule,resolver.getAbsolutePath(outputJar.get()));
  }
  return classpathEntries.build();
}
