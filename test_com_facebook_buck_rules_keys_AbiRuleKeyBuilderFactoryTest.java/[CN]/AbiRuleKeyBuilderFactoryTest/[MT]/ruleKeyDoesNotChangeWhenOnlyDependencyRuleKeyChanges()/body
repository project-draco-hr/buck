{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  Path depOutput=Paths.get("output");
  FakeBuildRule dep=resolver.addToIndex(new FakeBuildRule(BuildTargetFactory.newInstance("//:dep"),pathResolver));
  dep.setOutputFile(depOutput.toString());
  FakeFileHashCache hashCache=new FakeFileHashCache(ImmutableMap.of(depOutput,HashCode.fromInt(0)));
  DefaultRuleKeyBuilderFactory ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(0,hashCache,pathResolver);
  BuildRule rule=new FakeAbiRuleBuildRule("//:rule",pathResolver,dep);
  RuleKey inputKey1=new AbiRuleKeyBuilderFactory(0,hashCache,pathResolver,ruleKeyBuilderFactory).build(rule);
  RuleKey inputKey2=new AbiRuleKeyBuilderFactory(0,hashCache,pathResolver,ruleKeyBuilderFactory).build(rule);
  assertThat(inputKey1,equalTo(inputKey2));
}
