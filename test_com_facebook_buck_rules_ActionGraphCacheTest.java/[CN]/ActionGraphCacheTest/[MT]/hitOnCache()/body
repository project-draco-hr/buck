{
  ActionGraphCache cache=new ActionGraphCache();
  ActionGraphAndResolver resultRun1=cache.getActionGraph(eventBus,targetGraph);
  ImmutableList<Counter> counters=cache.getCounters();
  assertEquals(((IntegerCounter)counters.get(CACHE_HIT_COUNTER_INDEX)).get(),0);
  assertEquals(((IntegerCounter)counters.get(CACHE_MISS_COUNTER_INDEX)).get(),1);
  ActionGraphAndResolver resultRun2=cache.getActionGraph(eventBus,targetGraph);
  counters=cache.getCounters();
  assertEquals(((IntegerCounter)counters.get(CACHE_HIT_COUNTER_INDEX)).get(),1);
  assertEquals(((IntegerCounter)counters.get(CACHE_MISS_COUNTER_INDEX)).get(),1);
  Map<BuildRule,RuleKey> resultRun1RuleKeys=getRuleKeysFromBuildRules(resultRun1.getActionGraph().getNodes(),resultRun1.getResolver());
  Map<BuildRule,RuleKey> resultRun2RuleKeys=getRuleKeysFromBuildRules(resultRun2.getActionGraph().getNodes(),resultRun2.getResolver());
  assertThat(resultRun1RuleKeys,Matchers.equalTo(resultRun2RuleKeys));
}
