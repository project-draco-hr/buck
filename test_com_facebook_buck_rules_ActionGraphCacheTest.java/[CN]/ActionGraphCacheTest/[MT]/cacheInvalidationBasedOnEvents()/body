{
  ActionGraphCache cache=new ActionGraphCache();
  Path file=tmpFilePath.newFile("foo.txt");
  cache.getActionGraph(eventBus,NOT_CHECK_GRAPHS,targetGraph,0);
  assertFalse(cache.isEmpty());
  cache.invalidateBasedOn(WatchmanWatcher.createOverflowEvent("testing"));
  assertTrue(cache.isEmpty());
  cache.getActionGraph(eventBus,NOT_CHECK_GRAPHS,targetGraph,0);
  assertFalse(cache.isEmpty());
  cache.invalidateBasedOn(WatchEventsForTests.createPathEvent(file,StandardWatchEventKinds.ENTRY_CREATE));
  assertTrue(cache.isEmpty());
  cache.getActionGraph(eventBus,NOT_CHECK_GRAPHS,targetGraph,0);
  assertFalse(cache.isEmpty());
  cache.invalidateBasedOn(WatchEventsForTests.createPathEvent(file,StandardWatchEventKinds.ENTRY_DELETE));
  assertTrue(cache.isEmpty());
  cache.getActionGraph(eventBus,CHECK_GRAPHS,targetGraph,0);
  assertFalse(cache.isEmpty());
  cache.invalidateBasedOn(WatchEventsForTests.createPathEvent(file,StandardWatchEventKinds.ENTRY_MODIFY));
  cache.getActionGraph(eventBus,NOT_CHECK_GRAPHS,targetGraph,0);
  assertFalse(cache.isEmpty());
  assertEquals(countEventsOf(ActionGraphEvent.Cache.Hit.class),1);
  assertEquals(countEventsOf(ActionGraphEvent.Cache.Miss.class),4);
}
