{
  return CxxDescriptionEnhancer.collectCxxPreprocessorInput(params,cxxPlatform,CxxFlags.getLanguageFlags(args.preprocessorFlags,args.platformPreprocessorFlags,args.langPreprocessorFlags,cxxPlatform),ImmutableList.of(headerSymlinkTree),ImmutableSet.<FrameworkPath>of(),CxxLibraryDescription.getTransitiveCxxPreprocessorInput(params,resolver,pathResolver,cxxPlatform,CxxFlags.getLanguageFlags(args.exportedPreprocessorFlags,args.exportedPlatformPreprocessorFlags,args.exportedLangPreprocessorFlags,cxxPlatform),CxxDescriptionEnhancer.parseExportedHeaders(params,resolver,cxxPlatform,args),args.frameworks.or(ImmutableSortedSet.<FrameworkPath>of())));
}
