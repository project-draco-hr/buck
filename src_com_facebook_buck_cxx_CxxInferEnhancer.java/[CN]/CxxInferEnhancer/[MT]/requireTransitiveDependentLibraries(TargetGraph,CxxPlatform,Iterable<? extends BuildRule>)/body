{
  final ImmutableSet.Builder<CxxInferAnalyze> depsBuilder=ImmutableSet.builder();
  AbstractBreadthFirstTraversal<BuildRule> visitor=new AbstractBreadthFirstTraversal<BuildRule>(deps){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule buildRule){
      if (buildRule instanceof CxxLibrary) {
        CxxLibrary library=(CxxLibrary)buildRule;
        depsBuilder.add((CxxInferAnalyze)library.requireBuildRule(targetGraph,INFER_ANALYZE,cxxPlatform.getFlavor()));
        return buildRule.getDeps();
      }
      return ImmutableSet.of();
    }
  }
;
  visitor.start();
  return depsBuilder.build();
}
