{
  final ProjectFilesystem projectFilesystem=context.getProjectFilesystem();
  final File binDir=projectFilesystem.getFileForRelativePath(binDirectory);
  ImmutableSet<String> ignorePaths=ImmutableSet.of();
  DirectoryTraversal traversal=new DirectoryTraversal(binDir,ignorePaths){
    @Override public void visit(    File file,    String relativePath) throws IOException {
      String source=new File(binDir,relativePath).getPath();
      String target=genDirectory + "/" + relativePath;
      projectFilesystem.createParentDirs(target);
      projectFilesystem.copyFile(source,target);
      String artifactPath=artifactPathTransform.apply(relativePath);
      buildableContext.recordArtifact(artifactPath);
    }
  }
;
  try {
    traversal.traverse();
  }
 catch (  IOException e) {
    e.printStackTrace(context.getStdErr());
    return 1;
  }
  return 0;
}
