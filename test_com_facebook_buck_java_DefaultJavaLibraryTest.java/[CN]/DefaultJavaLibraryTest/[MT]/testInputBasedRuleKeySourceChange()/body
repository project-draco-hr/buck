{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildRule genSrc=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:gen_srcs")).setOut("Test.java").setCmd("something").build(resolver,filesystem);
  filesystem.writeContentsToPath("class Test {}",genSrc.getPathToOutput());
  JavaLibrary library=(JavaLibrary)JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//:lib")).addSrc(new BuildTargetSourcePath(genSrc.getBuildTarget())).build(resolver,filesystem);
  InputBasedRuleKeyBuilderFactory factory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver));
  RuleKey originalRuleKey=factory.newInstance(library).build();
  resolver=new BuildRuleResolver();
  genSrc=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:gen_srcs")).setOut("Test.java").setCmd("something else").build(resolver,filesystem);
  library=(JavaLibrary)JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//:lib")).addSrc(new BuildTargetSourcePath(genSrc.getBuildTarget())).build(resolver,filesystem);
  factory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver));
  RuleKey unaffectedRuleKey=factory.newInstance(library).build();
  assertThat(originalRuleKey,Matchers.equalTo(unaffectedRuleKey));
  resolver=new BuildRuleResolver();
  genSrc=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:gen_srcs")).setOut("Test.java").setCmd("something else").build(resolver,filesystem);
  filesystem.writeContentsToPath("class Test2 {}",genSrc.getPathToOutput());
  library=(JavaLibrary)JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//:lib")).addSrc(new BuildTargetSourcePath(genSrc.getBuildTarget())).build(resolver,filesystem);
  factory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver));
  RuleKey affectedRuleKey=factory.newInstance(library).build();
  assertThat(originalRuleKey,Matchers.not(Matchers.equalTo(affectedRuleKey)));
}
