{
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  ImmutableSortedSet<SourcePath> srcsAsPaths=FluentIterable.from(srcs).transform(MorePaths.TO_PATH).transform(SourcePaths.toSourcePath(projectFilesystem)).toSortedSet(Ordering.natural());
  BuildRuleParams buildRuleParams=new FakeBuildRuleParamsBuilder(buildTarget).setDeps(ImmutableSortedSet.copyOf(deps)).build();
  return new DefaultJavaLibrary(buildRuleParams,new SourcePathResolver(new BuildRuleResolver()),srcsAsPaths,ImmutableSet.<SourcePath>of(),Optional.<SourcePath>absent(),ImmutableList.<String>of(),exportedDeps,ImmutableSortedSet.<BuildRule>of(),ImmutableSet.<Path>of(),DEFAULT_JAVAC_OPTIONS,Optional.<Path>absent()){
    @Override public Sha1HashCode getAbiKey(){
      if (partialAbiHash == null) {
        return super.getAbiKey();
      }
 else {
        return createTotalAbiKey(Sha1HashCode.of(partialAbiHash));
      }
    }
  }
;
}
