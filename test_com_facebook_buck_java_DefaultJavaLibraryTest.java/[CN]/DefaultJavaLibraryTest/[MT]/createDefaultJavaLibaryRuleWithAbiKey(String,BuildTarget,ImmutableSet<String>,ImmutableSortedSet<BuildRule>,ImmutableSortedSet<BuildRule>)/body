{
  ImmutableSortedSet<SourcePath> srcsAsPaths=FluentIterable.from(srcs).transform(MorePaths.TO_PATH).transform(SourcePaths.TO_SOURCE_PATH).toSortedSet(Ordering.natural());
  BuildRuleParams buildRuleParams=new FakeBuildRuleParamsBuilder(buildTarget).setDeps(ImmutableSortedSet.copyOf(deps)).build();
  Buildable buildable=new DefaultJavaLibrary(buildRuleParams.getBuildTarget(),srcsAsPaths,ImmutableSet.<SourcePath>of(),Optional.<Path>absent(),ImmutableList.<String>of(),buildRuleParams.getDeps(),exportedDeps,ImmutableSortedSet.<BuildRule>of(),JavacOptions.DEFAULTS,Optional.<Path>absent()){
    @Override public Sha1HashCode getAbiKey(){
      if (partialAbiHash == null) {
        return super.getAbiKey();
      }
 else {
        return createTotalAbiKey(new Sha1HashCode(partialAbiHash));
      }
    }
  }
;
  return new DescribedRule(JavaLibraryDescription.TYPE,buildable,buildRuleParams);
}
