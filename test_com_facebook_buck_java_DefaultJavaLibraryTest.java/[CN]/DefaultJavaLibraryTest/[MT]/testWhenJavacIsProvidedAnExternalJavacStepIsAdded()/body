{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildTarget libraryOneTarget=BuildTargetFactory.newInstance("//:libone");
  BuildRule rule=JavaLibraryBuilder.createBuilder(libraryOneTarget).addSrc(Paths.get("java/src/com/libone/Bar.java")).build(ruleResolver);
  ImmutableList.Builder<Step> stepsBuilder=ImmutableList.builder();
  JavacOptions javacOptions=JavacOptions.builder(DEFAULT_JAVAC_OPTIONS).setJavaCompilerEnvironment(new JavaCompilerEnvironment(Optional.of(Paths.get("javac")),Optional.<JavacVersion>absent())).build();
  ((DefaultJavaLibrary)rule).createCommandsForJavac(rule.getPathToOutputFile(),ImmutableSet.copyOf(((HasClasspathEntries)rule).getTransitiveClasspathEntries().values()),ImmutableSet.copyOf(((JavaLibrary)rule).getDeclaredClasspathEntries().values()),javacOptions,BuildDependencies.FIRST_ORDER_ONLY,Optional.<JavacStep.SuggestBuildRules>absent(),stepsBuilder,libraryOneTarget);
  List<Step> steps=stepsBuilder.build();
  assertEquals(steps.size(),4);
  assertTrue(steps.get(3) instanceof ExternalJavacStep);
}
