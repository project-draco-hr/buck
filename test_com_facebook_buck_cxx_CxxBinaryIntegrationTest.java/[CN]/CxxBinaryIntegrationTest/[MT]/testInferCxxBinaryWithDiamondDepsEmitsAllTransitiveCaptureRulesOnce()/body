{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  ProjectWorkspace workspace=InferHelper.setupCxxInferWorkspace(this,tmp,Optional.<String>absent());
  BuildTarget inputBuildTarget=BuildTargetFactory.newInstance("//foo:binary_with_diamond_deps");
  String inputBuildTargetName=inputBuildTarget.withFlavors(CxxInferEnhancer.InferFlavors.INFER_CAPTURE_ALL.get()).getFullyQualifiedName();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  assertTrue(workspace.getPath("buck-out/gen/foo/infer-binary_with_diamond_deps#infer-capture-all/infer-deps.txt").toFile().exists());
  String loggedDeps=workspace.getFileContents("buck-out/gen/foo/infer-binary_with_diamond_deps#infer-capture-all/infer-deps.txt");
  String sanitizedSimpleCpp=sanitize("simple.cpp.o");
  String sanitizedDepOne=sanitize("dep_one.c.o");
  String sanitizedDepTwo=sanitize("dep_two.c.o");
  String sanitizedSrcWithDeps=sanitize("src_with_deps.c.o");
  String expectedOutput="//foo:binary_with_diamond_deps#default,infer-capture-" + sanitizedSimpleCpp + "\t"+ "[default, infer-capture-"+ sanitizedSimpleCpp+ "]\t"+ "buck-out/gen/foo/infer-out-binary_with_diamond_deps#default,infer-capture-"+ sanitizedSimpleCpp+ "\n"+ "//foo:binary_with_diamond_deps#default,infer-capture-"+ sanitizedDepOne+ "\t"+ "[default, infer-capture-"+ sanitizedDepOne+ "]\t"+ "buck-out/gen/foo/infer-out-binary_with_diamond_deps#default,infer-capture-"+ sanitizedDepOne+ "\n"+ "//foo:binary_with_diamond_deps#default,infer-capture-"+ sanitizedDepTwo+ "\t"+ "[default, infer-capture-"+ sanitizedDepTwo+ "]\t"+ "buck-out/gen/foo/infer-out-binary_with_diamond_deps#default,infer-capture-"+ sanitizedDepTwo+ "\n"+ "//foo:binary_with_diamond_deps#default,infer-capture-"+ sanitizedSrcWithDeps+ "\t"+ "[default, infer-capture-"+ sanitizedSrcWithDeps+ "]\t"+ "buck-out/gen/foo/infer-out-binary_with_diamond_deps#default,infer-capture-"+ sanitizedSrcWithDeps+ "\n";
  assertEquals(expectedOutput,loggedDeps);
}
