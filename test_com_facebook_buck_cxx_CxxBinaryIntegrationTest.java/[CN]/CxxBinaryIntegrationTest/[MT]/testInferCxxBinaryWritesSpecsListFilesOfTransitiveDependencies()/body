{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  ProjectWorkspace workspace=InferHelper.setupCxxInferWorkspace(this,tmp,Optional.<String>absent());
  BuildTarget inputBuildTarget=BuildTargetFactory.newInstance("//foo:binary_with_chain_deps").withFlavors(CxxInferEnhancer.InferFlavors.INFER.get());
  workspace.runBuckCommand("build",inputBuildTarget.getFullyQualifiedName()).assertSuccess();
  String specsPathList=BuildTargets.getGenPath(inputBuildTarget.withFlavors(CxxInferEnhancer.InferFlavors.INFER_ANALYZE.get()),"infer-analysis-%s/specs_path_list.txt").toString();
  String out=workspace.getFileContents(specsPathList);
  ImmutableList<Path> paths=FluentIterable.of(out.split("\n")).transform(new Function<String,Path>(){
    @Override public Path apply(    String input){
      return new File(input).toPath();
    }
  }
).toList();
  assertSame("There must be 2 paths in total",paths.size(),2);
  for (  Path path : paths) {
    assertTrue("Path must be absolute",path.isAbsolute());
    assertTrue("Path must exist",Files.exists(path));
  }
}
