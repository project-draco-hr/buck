{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  ProjectWorkspace workspace=InferHelper.setupCxxInferWorkspace(this,tmp,Optional.<String>absent());
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new CxxBuckConfig(FakeBuckConfig.builder().build()));
  BuildTarget inputBuildTarget=BuildTargetFactory.newInstance(workspace.getDestPath(),"//foo:simple");
  String inputBuildTargetName=inputBuildTarget.withFlavors(CxxInferEnhancer.InferFlavors.INFER.get()).getFullyQualifiedName();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  String sourceName="simple.cpp";
  String sourceFull="foo/" + sourceName;
  CxxSourceRuleFactory cxxSourceRuleFactory=CxxSourceRuleFactoryHelper.of(workspace.getDestPath(),inputBuildTarget,cxxPlatform);
  BuildTarget captureBuildTarget=cxxSourceRuleFactory.createInferCaptureBuildTarget(sourceName);
  BuildTarget headerSymlinkTreeTarget=CxxDescriptionEnhancer.createHeaderSymlinkTreeTarget(inputBuildTarget,cxxPlatform.getFlavor(),HeaderVisibility.PRIVATE);
  BuildTarget inferAnalysisTarget=inputBuildTarget.withFlavors(CxxInferEnhancer.InferFlavors.INFER_ANALYZE.get());
  BuildTarget inferReportTarget=inputBuildTarget.withFlavors(CxxInferEnhancer.InferFlavors.INFER.get());
  BuildTarget aggregatedDepsTarget=cxxSourceRuleFactory.createAggregatedPreprocessDepsBuildTarget();
  BuckBuildLog buildLog=workspace.getBuildLog();
  assertThat(buildLog.getAllTargets(),containsInAnyOrder(aggregatedDepsTarget,headerSymlinkTreeTarget,captureBuildTarget,inferAnalysisTarget,inferReportTarget));
  buildLog.assertTargetBuiltLocally(aggregatedDepsTarget.toString());
  buildLog.assertTargetBuiltLocally(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(captureBuildTarget.toString());
  buildLog.assertTargetBuiltLocally(inferAnalysisTarget.toString());
  buildLog.assertTargetBuiltLocally(inferReportTarget.toString());
  workspace.resetBuildLogFile();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(inferReportTarget),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(inferReportTarget.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents(sourceFull,"*s = 42;","");
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertThat(buildLog.getAllTargets(),containsInAnyOrder(aggregatedDepsTarget,captureBuildTarget,inferAnalysisTarget,inferReportTarget));
  buildLog.assertTargetBuiltLocally(captureBuildTarget.toString());
  buildLog.assertTargetBuiltLocally(inferAnalysisTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(aggregatedDepsTarget.toString());
}
