{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  ProjectWorkspace workspace=InferHelper.setupCxxInferWorkspace(this,tmp,Optional.<String>absent());
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new CxxBuckConfig(FakeBuckConfig.builder().build()));
  BuildTarget inputBuildTarget=BuildTargetFactory.newInstance(workspace.getDestPath(),"//foo:simple");
  String inputBuildTargetName=inputBuildTarget.withFlavors(CxxInferEnhancer.INFER).getFullyQualifiedName();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  String sourceName="simple.cpp";
  String sourceFull="foo/" + sourceName;
  CxxSourceRuleFactory cxxSourceRuleFactory=CxxSourceRuleFactoryHelper.of(workspace.getDestPath(),inputBuildTarget,cxxPlatform);
  BuildTarget captureBuildTarget=cxxSourceRuleFactory.createInferCaptureBuildTarget(sourceName);
  BuildTarget headerSymlinkTreeTarget=CxxDescriptionEnhancer.createHeaderSymlinkTreeTarget(inputBuildTarget,cxxPlatform.getFlavor(),HeaderVisibility.PRIVATE);
  BuildTarget inferAnalysisTarget=inputBuildTarget.withFlavors(CxxInferEnhancer.INFER_ANALYZE);
  BuildTarget inferReportTarget=inputBuildTarget.withFlavors(CxxInferEnhancer.INFER);
  ImmutableSet<BuildTarget> expectedTargets=ImmutableSet.<BuildTarget>builder().addAll(ImmutableSet.of(headerSymlinkTreeTarget,captureBuildTarget,inferAnalysisTarget,inferReportTarget)).build();
  BuckBuildLog buildLog=workspace.getBuildLog();
  assertEquals(expectedTargets,buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(captureBuildTarget.toString());
  buildLog.assertTargetBuiltLocally(inferAnalysisTarget.toString());
  buildLog.assertTargetBuiltLocally(inferReportTarget.toString());
  workspace.resetBuildLogFile();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(inferReportTarget),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(inferReportTarget.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents(sourceFull,"*s = 42;","");
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(expectedTargets,buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(captureBuildTarget.toString());
  buildLog.assertTargetBuiltLocally(inferAnalysisTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(headerSymlinkTreeTarget.toString());
}
