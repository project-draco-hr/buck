{
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new CxxBuckConfig(FakeBuckConfig.builder().build()));
  assumeTrue(cxxPlatform.getAr().supportsThinArchives());
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"simple",tmp);
  workspace.setUp();
  workspace.enableDirCache();
  workspace.runBuckBuild("-c","cxx.cache_links=false","-c","cxx.archive_contents=thin","//foo:binary_with_dep").assertSuccess();
  ImmutableSortedSet<Path> initialObjects=findFiles(tmp.getRootPath(),tmp.getRootPath().getFileSystem().getPathMatcher("glob:**/*.o"));
  workspace.runBuckCommand("clean");
  workspace.runBuckBuild("-c","cxx.cache_links=false","-c","cxx.archive_contents=thin","//foo:binary_with_dep").assertSuccess();
  workspace.getBuildLog().assertTargetBuiltLocally(CxxDescriptionEnhancer.createCxxLinkTarget(BuildTargetFactory.newInstance("//foo:binary_with_dep")).toString());
  ImmutableSortedSet<Path> subsequentObjects=findFiles(tmp.getRootPath(),tmp.getRootPath().getFileSystem().getPathMatcher("glob:**/*.o"));
  assertThat(initialObjects,Matchers.equalTo(subsequentObjects));
}
