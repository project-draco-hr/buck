{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"simple",tmp);
  workspace.setUp();
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new FakeBuckConfig());
  BuildTarget target=BuildTargetFactory.newInstance("//foo:simple_with_header");
  BuildTarget binaryTarget=CxxDescriptionEnhancer.createCxxLinkTarget(target);
  String sourceName="simple_with_header.cpp";
  String headerName="simple_with_header.h";
  String headerFull="foo/" + headerName;
  BuildTarget preprocessTarget=CxxSourceRuleFactory.createPreprocessBuildTarget(target,cxxPlatform.getFlavor(),CxxSource.Type.CXX,false,sourceName);
  BuildTarget compileTarget=CxxSourceRuleFactory.createCompileBuildTarget(target,cxxPlatform.getFlavor(),sourceName,false);
  BuildTarget headerSymlinkTreeTarget=CxxDescriptionEnhancer.createHeaderSymlinkTreeTarget(target,cxxPlatform.getFlavor(),CxxDescriptionEnhancer.HeaderVisibility.PRIVATE);
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  BuckBuildLog buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerSymlinkTreeTarget,preprocessTarget,compileTarget,binaryTarget,target),buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(preprocessTarget.toString());
  buildLog.assertTargetBuiltLocally(compileTarget.toString());
  buildLog.assertTargetBuiltLocally(binaryTarget.toString());
  buildLog.assertTargetBuiltLocally(target.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents(headerFull,"BLAH 5","BLAH 6");
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerSymlinkTreeTarget,preprocessTarget,compileTarget,binaryTarget,target),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(preprocessTarget.toString());
  buildLog.assertTargetBuiltLocally(compileTarget.toString());
  buildLog.assertTargetBuiltLocally(binaryTarget.toString());
  buildLog.assertTargetBuiltLocally(target.toString());
}
