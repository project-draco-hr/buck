{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"simple",tmp);
  workspace.setUp();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:simple");
  String sourceName="simple.cpp";
  String sourceFull="foo/" + sourceName;
  BuildTarget compileTarget=CxxCompilableEnhancer.createCompileBuildTarget(target,sourceName);
  BuildTarget headerTarget=CxxDescriptionEnhancer.createHeaderTarget(target);
  BuildTarget headerSymlinkTreeTarget=CxxDescriptionEnhancer.createHeaderSymlinkTreeTarget(target);
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  BuckBuildLog buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerTarget,headerSymlinkTreeTarget,compileTarget,target),buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(headerTarget.toString());
  buildLog.assertTargetBuiltLocally(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(compileTarget.toString());
  buildLog.assertTargetBuiltLocally(target.toString());
  workspace.resetBuildLogFile();
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerTarget,headerSymlinkTreeTarget,compileTarget,target),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(headerTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(compileTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(target.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents(sourceFull,"{}","{ return 0; }");
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerTarget,headerSymlinkTreeTarget,compileTarget,target),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(headerTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetBuiltLocally(compileTarget.toString());
  buildLog.assertTargetBuiltLocally(target.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents(sourceFull,"{ return 0; }","won't compile");
  workspace.runBuckCommand("build",target.toString()).assertFailure();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(headerTarget,headerSymlinkTreeTarget,compileTarget),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(headerTarget.toString());
  buildLog.assertTargetHadMatchingRuleKey(headerSymlinkTreeTarget.toString());
  buildLog.assertTargetFailed(compileTarget.toString());
}
