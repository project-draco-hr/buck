{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  ProjectWorkspace workspace=InferHelper.setupCxxInferWorkspace(this,tmp,Optional.of(".*one\\.c"));
  BuildTarget inputBuildTarget=BuildTargetFactory.newInstance("//foo:binary_with_chain_deps");
  String inputBuildTargetName=inputBuildTarget.withFlavors(CxxInferEnhancer.INFER).getFullyQualifiedName();
  workspace.runBuckCommand("build",inputBuildTargetName).assertSuccess();
  assertFalse("Cfg file for chain_dep_one.c should not exist",workspace.getPath("buck-out/gen/foo/infer-out-chain_dep_one#default,infer-capture-" + sanitize("chain_dep_one.c.o") + "/captured/chain_dep_one.c_captured/chain_dep_one.c.cfg").toFile().exists());
  assertTrue("Expected cfg for chain_dep_two.c not found",workspace.getPath("buck-out/gen/foo/infer-out-chain_dep_two#default,infer-capture-" + sanitize("chain_dep_two.c.o") + "/captured/chain_dep_two.c_captured/chain_dep_two.c.cfg").toFile().exists());
  assertTrue("Expected cfg for top_chain.c not found",workspace.getPath("buck-out/gen/foo/infer-analysis-binary_with_chain_deps#infer-analyze/captured/" + "top_chain.c_captured/top_chain.c.cfg").toFile().exists());
}
