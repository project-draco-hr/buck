{
  Preconditions.checkState(!Files.exists(path),"Output file already exists: %s)",path);
  if (!Files.exists(path.getParent())) {
    Files.createDirectories(path.getParent());
  }
  Walker walker=Walkers.getWalkerFor(toMirror);
  walker.walk(new FileAction(){
    @Override public void visit(    Path relativizedPath,    InputStream stream) throws IOException {
      String fileName=relativizedPath.toString();
      if (!fileName.endsWith(".class")) {
        return;
      }
      ClassReader classReader=new ClassReader(stream);
      ClassMirror visitor=new ClassMirror(fileName);
      classes.add(visitor);
      classReader.accept(visitor,SKIP_CODE | SKIP_DEBUG | SKIP_FRAMES);
    }
  }
);
  try (FileOutputStream fos=new FileOutputStream(path.toFile());BufferedOutputStream bos=new BufferedOutputStream(fos);JarOutputStream jar=new JarOutputStream(bos)){
    for (    ClassMirror aClass : classes) {
      aClass.writeTo(jar);
    }
  }
 }
