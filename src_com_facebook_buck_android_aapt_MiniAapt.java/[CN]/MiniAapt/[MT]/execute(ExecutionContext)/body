{
  ImmutableSet.Builder<RDotTxtEntry> references=ImmutableSet.builder();
  try {
    collectResources(filesystem,context.getBuckEventBus());
    processXmlFilesForIds(filesystem,references);
  }
 catch (  IOException|XPathExpressionException|ResourceParseException e) {
    context.logError(e,"Error parsing resources to generate resource IDs for %s.",resDirectory);
    return 1;
  }
  try {
    Set<RDotTxtEntry> missing=verifyReferences(filesystem,references.build());
    if (!missing.isEmpty()) {
      context.logError(new RuntimeException(),"The following resources were not found when processing %s: \n%s\n",resDirectory,Joiner.on('\n').join(missing));
      return 1;
    }
  }
 catch (  IOException e) {
    context.logError(e,"Error verifying resources for %s.",resDirectory);
    return 1;
  }
  try (PrintWriter writer=new PrintWriter(filesystem.newFileOutputStream(pathToTextSymbolsFile))){
    Set<RDotTxtEntry> sortedResources=FluentIterable.from(resourceCollector.getResources()).toSortedSet(Ordering.natural());
    for (    RDotTxtEntry entry : sortedResources) {
      writer.printf("%s %s %s %s\n",entry.idType,entry.type,entry.name,entry.idValue);
    }
  }
 catch (  IOException e) {
    context.logError(e,"Error writing file: %s",pathToTextSymbolsFile);
    return 1;
  }
  return 0;
}
