{
  File inputDirectory=new File(inputDirectoryPath);
  Preconditions.checkState(inputDirectory.exists() && inputDirectory.isDirectory(),"%s must be a directory.",inputDirectoryPath);
  Closer closer=Closer.create();
  try {
    ImmutableMap.Builder<File,ZipEntry> zipEntriesBuilder=ImmutableMap.builder();
    addDirectoryToZipEntryList(inputDirectory,"",zipEntriesBuilder);
    ImmutableMap<File,ZipEntry> zipEntries=zipEntriesBuilder.build();
    if (!zipEntries.isEmpty()) {
      ZipOutputStream outputStream=closer.register(new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(outputZipPath))));
      for (      Map.Entry<File,ZipEntry> zipEntry : zipEntries.entrySet()) {
        outputStream.putNextEntry(zipEntry.getValue());
        ByteStreams.copy(Files.newInputStreamSupplier(zipEntry.getKey()),outputStream);
        outputStream.closeEntry();
      }
    }
  }
 catch (  IOException e) {
    e.printStackTrace(context.getStdErr());
    return 1;
  }
 finally {
    try {
      closer.close();
    }
 catch (    IOException e) {
      Throwables.propagate(e);
    }
  }
  return 0;
}
