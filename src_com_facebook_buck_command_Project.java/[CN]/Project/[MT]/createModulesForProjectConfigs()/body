{
  DependencyGraph dependencyGraph=partialGraph.getDependencyGraph();
  List<Module> modules=Lists.newArrayList();
  ImmutableSet.Builder<String> noDxJarsBuilder=ImmutableSet.builder();
  for (  BuildTarget target : partialGraph.getTargets()) {
    BuildRule buildRule=dependencyGraph.findBuildRuleByTarget(target);
    ProjectConfig projectConfig=(ProjectConfig)buildRule.getBuildable();
    BuildRule srcRule=projectConfig.getSrcRule();
    if (srcRule != null) {
      Buildable buildable=srcRule.getBuildable();
      if (buildable instanceof AndroidBinary) {
        AndroidBinary androidBinary=(AndroidBinary)buildable;
        AndroidDexTransitiveDependencies binaryDexTransitiveDependencies=androidBinary.findDexTransitiveDependencies();
        noDxJarsBuilder.addAll(binaryDexTransitiveDependencies.noDxClasspathEntries);
      }
    }
    Module module=createModuleForProjectConfig(projectConfig);
    modules.add(module);
  }
  ImmutableSet<String> noDxJars=noDxJarsBuilder.build();
  markNoDxJarsAsProvided(modules,noDxJars);
  return modules;
}
