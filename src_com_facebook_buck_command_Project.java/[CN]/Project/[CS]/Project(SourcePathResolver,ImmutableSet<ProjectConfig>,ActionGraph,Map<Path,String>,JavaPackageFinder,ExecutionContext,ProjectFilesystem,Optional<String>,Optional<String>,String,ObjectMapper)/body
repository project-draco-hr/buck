{
  this.resolver=resolver;
  this.rules=rules;
  this.actionGraph=actionGraph;
  this.buildFileTree=new InMemoryBuildFileTree(Iterables.transform(actionGraph.getNodes(),new Function<BuildRule,BuildTarget>(){
    @Override public BuildTarget apply(    BuildRule input){
      return input.getBuildTarget();
    }
  }
));
  this.basePathToAliasMap=ImmutableMap.copyOf(basePathToAliasMap);
  this.javaPackageFinder=javaPackageFinder;
  this.executionContext=executionContext;
  this.projectFilesystem=projectFilesystem;
  this.pathToDefaultAndroidManifest=pathToDefaultAndroidManifest;
  this.pathToPostProcessScript=pathToPostProcessScript;
  this.libraryJars=Sets.newHashSet();
  this.pythonInterpreter=pythonInterpreter;
  this.objectMapper=objectMapper;
}
