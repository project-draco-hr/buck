{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  final Path rDotJavaSrcFolder=getRDotJavaSrcFolder(getBuildTarget());
  steps.add(new MakeCleanDirectoryStep(rDotJavaSrcFolder));
  Set<Path> javaSourceFilePaths;
  if (androidResourceDeps.isEmpty()) {
    Path emptyRDotJava=rDotJavaSrcFolder.resolve("com/facebook/R.java");
    steps.add(new MakeCleanDirectoryStep(emptyRDotJava.getParent()));
    steps.add(new WriteFileStep("package com.facebook;\n public class R {}\n",emptyRDotJava));
    javaSourceFilePaths=ImmutableSet.of(emptyRDotJava);
  }
 else {
    MergeAndroidResourcesStep mergeStep=new MergeAndroidResourcesStep(androidResourceDeps,Optional.<Path>absent(),rDotJavaSrcFolder);
    steps.add(mergeStep);
    javaSourceFilePaths=ImmutableSet.copyOf(getResolver().getAllPaths(mergeStep.getRDotJavaFiles()));
  }
  final Path rDotJavaClassesFolder=getRDotJavaBinFolder();
  steps.add(new MakeCleanDirectoryStep(rDotJavaClassesFolder));
  Path pathToAbiOutputDir=getPathToAbiOutputDir(getBuildTarget());
  steps.add(new MakeCleanDirectoryStep(pathToAbiOutputDir));
  Path pathToAbiOutputFile=pathToAbiOutputDir.resolve("abi");
  final JavacStep javacStep=RDotJava.createJavacStepForDummyRDotJavaFiles(javaSourceFilePaths,rDotJavaClassesFolder,Optional.of(pathToAbiOutputFile),javacOptions,getBuildTarget());
  steps.add(javacStep);
  steps.add(new AbstractExecutionStep("record_abi_key"){
    @Override public int execute(    ExecutionContext context){
      Sha1HashCode abiKey=javacStep.getAbiKey();
      Preconditions.checkNotNull(abiKey,"Javac step must create a non-null ABI key for this rule.");
      buildableContext.addMetadata(METADATA_KEY_FOR_ABI_KEY,abiKey.getHash());
      return 0;
    }
  }
);
  buildableContext.recordArtifactsInDirectory(rDotJavaClassesFolder);
  return steps.build();
}
