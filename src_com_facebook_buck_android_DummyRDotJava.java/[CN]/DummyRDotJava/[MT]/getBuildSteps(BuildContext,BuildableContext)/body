{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  final Path rDotJavaSrcFolder=getRDotJavaSrcFolder(getBuildTarget());
  steps.add(new MakeCleanDirectoryStep(rDotJavaSrcFolder));
  Set<SourcePath> javaSourceFilePaths=Sets.newHashSet();
  if (androidResourceDeps.isEmpty()) {
    String rDotJavaPackage="com.facebook";
    String javaCode=MergeAndroidResourcesStep.generateJavaCodeForPackageWithoutResources(rDotJavaPackage);
    steps.add(new MakeCleanDirectoryStep(rDotJavaSrcFolder.resolve("com/facebook")));
    Path rDotJavaFile=rDotJavaSrcFolder.resolve("com/facebook/R.java");
    steps.add(new WriteFileStep(javaCode,rDotJavaFile));
    javaSourceFilePaths.add(new PathSourcePath(rDotJavaFile));
  }
 else {
    Map<Path,String> symbolsFileToRDotJavaPackage=Maps.newHashMap();
    for (    HasAndroidResourceDeps res : androidResourceDeps) {
      String rDotJavaPackage=res.getRDotJavaPackage();
      symbolsFileToRDotJavaPackage.put(res.getPathToTextSymbolsFile(),rDotJavaPackage);
      Path rDotJavaFilePath=MergeAndroidResourcesStep.getOutputFilePath(rDotJavaSrcFolder,rDotJavaPackage);
      javaSourceFilePaths.add(new PathSourcePath(rDotJavaFilePath));
    }
    steps.add(new MergeAndroidResourcesStep(symbolsFileToRDotJavaPackage,rDotJavaSrcFolder));
  }
  final Path rDotJavaClassesFolder=getRDotJavaBinFolder();
  steps.add(new MakeCleanDirectoryStep(rDotJavaClassesFolder));
  Path pathToAbiOutputDir=getPathToAbiOutputDir(getBuildTarget());
  steps.add(new MakeCleanDirectoryStep(pathToAbiOutputDir));
  Path pathToAbiOutputFile=pathToAbiOutputDir.resolve("abi");
  final JavacStep javacStep=UberRDotJavaUtil.createJavacStepForDummyRDotJavaFiles(javaSourceFilePaths,rDotJavaClassesFolder,Optional.of(pathToAbiOutputFile),javacOptions,getBuildTarget());
  steps.add(javacStep);
  steps.add(new AbstractExecutionStep("record_abi_key"){
    @Override public int execute(    ExecutionContext context){
      Sha1HashCode abiKey=javacStep.getAbiKey();
      Preconditions.checkNotNull(abiKey,"Javac step must create a non-null ABI key for this rule.");
      buildableContext.addMetadata(METADATA_KEY_FOR_ABI_KEY,abiKey.getHash());
      return 0;
    }
  }
);
  buildableContext.recordArtifactsInDirectory(rDotJavaClassesFolder);
  return steps.build();
}
