@classmethod
@contextmanager
def patch_pkg_resources(cls, working_set):
    'Patch pkg_resources given a new working set.'

    def patch(working_set):
        pkg_resources.working_set = working_set
        pkg_resources.require = working_set.require
        pkg_resources.iter_entry_points = working_set.iter_entry_points
        pkg_resources.run_script = pkg_resources.run_main = working_set.run_script
        pkg_resources.add_activation_listener = working_set.subscribe
    old_working_set = pkg_resources.working_set
    patch(working_set)
    try:
        yield
    finally:
        patch(old_working_set)
