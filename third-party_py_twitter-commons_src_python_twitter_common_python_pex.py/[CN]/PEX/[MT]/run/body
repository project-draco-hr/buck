def run(self, args=(), with_chroot=False, blocking=True, setsid=False, stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr):
    "\n      Run the PythonEnvironment in an interpreter in a subprocess.\n\n      with_chroot: Run with cwd set to the environment's working directory [default: False]\n      blocking: If true, return the return code of the subprocess.\n                If false, return the Popen object of the invoked subprocess.\n    "
    import subprocess
    self.clean_environment(forking=True)
    cmdline = self.cmdline(args)
    TRACER.log(('PEX.run invoking %s' % ' '.join(cmdline)))
    process = subprocess.Popen(cmdline, cwd=(self._pex if with_chroot else os.getcwd()), preexec_fn=(os.setsid if setsid else None), stdin=stdin, stdout=stdout, stderr=stderr)
    return (process.wait() if blocking else process)
