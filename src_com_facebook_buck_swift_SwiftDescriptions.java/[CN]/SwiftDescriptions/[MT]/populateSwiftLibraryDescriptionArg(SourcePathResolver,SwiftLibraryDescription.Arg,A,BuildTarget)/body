{
  output.srcs=args.srcs.transform(new Function<ImmutableSortedSet<SourceWithFlags>,ImmutableSortedSet<SourcePath>>(){
    @Override public ImmutableSortedSet<SourcePath> apply(    ImmutableSortedSet<SourceWithFlags> input){
      return filterSwiftSources(sourcePathResolver,args.srcs.get());
    }
  }
);
  output.compilerFlags=args.compilerFlags;
  output.frameworks=args.frameworks;
  output.libraries=args.libraries;
  output.deps=args.deps;
  output.supportedPlatformsRegex=args.supportedPlatformsRegex;
  output.moduleName=Optional.of(buildTarget.getShortName());
  output.enableObjcInterop=Optional.of(true);
  output.bridgingHeader=args.bridgingHeader;
}
