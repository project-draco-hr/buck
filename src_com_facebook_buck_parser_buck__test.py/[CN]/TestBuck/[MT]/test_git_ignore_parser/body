def test_git_ignore_parser(self):
    self.assertEqual([], parse_git_ignore([]))
    self.assertEqual([], parse_git_ignore(['a/b/c/d/\n', '/a/b/c/d/\n']))
    self.assertEqual(['a', 'b'], parse_git_ignore(['/a/\n', '/b/\n', '#/c/\n']))
    self.assertEqual([], parse_git_ignore(['/a/*\n', '*.out\n', 'b/*.txt\n']))
    self.assertEqual(['b'], parse_git_ignore(['/a/*\n', '/b/']))

    def test_relpath(self):
        real_getcwd = os.getcwd
        try:
            os.getcwd = (lambda : '/home/user/bar')
            curdir = os.path.split(os.getcwd())[(-1)]
            self.assertRaises(ValueError, relpath, '')
            self.assertEqual('a', relpath('a'))
            self.assertEqual('a', relpath(posixpath.abspath('a')))
            self.assertEqual('a/b', relpath('a/b'))
            self.assertEqual('../a/b', relpath('../a/b'))
            self.assertEqual((('../' + curdir) + '/a'), relpath('a', '../b'))
            self.assertEqual((('../' + curdir) + '/a/b'), relpath('a/b', '../c'))
            self.assertEqual('../../a', relpath('a', 'b/c'))
        finally:
            os.getcwd = real_getcwd
