{
  CxxPreprocessorInput.Builder builder=CxxPreprocessorInput.builder();
switch (headerVisibility) {
case PUBLIC:
    if (isPlatformSupported(cxxPlatform)) {
      builder.addAllFrameworks(frameworks);
      ruleResolver.requireRule(this.getBuildTarget());
      builder.addFrameworks(FrameworkPath.ofSourcePath(new BuildTargetSourcePath(this.getBuildTarget())));
    }
  return builder.build();
case PRIVATE:
return builder.build();
}
throw new RuntimeException("Invalid header visibility: " + headerVisibility);
}
