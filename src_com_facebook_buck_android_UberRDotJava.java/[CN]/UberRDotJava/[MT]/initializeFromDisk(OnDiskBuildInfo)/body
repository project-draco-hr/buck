{
  Map<String,HashCode> classesHash=ImmutableMap.of();
  if (!filteredResourcesProvider.getResDirectories().isEmpty()) {
    List<String> lines;
    try {
      lines=onDiskBuildInfo.getOutputFileContentsByLine(getPathToRDotJavaClassesTxt());
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    classesHash=AccumulateClassNamesStep.parseClassHashes(lines);
  }
  Optional<String> linearAllocSizeValue=onDiskBuildInfo.getValue(R_DOT_JAVA_LINEAR_ALLOC_SIZE);
  Optional<Integer> linearAllocSize=linearAllocSizeValue.isPresent() ? Optional.of(Integer.parseInt(linearAllocSizeValue.get())) : Optional.<Integer>absent();
  return new BuildOutput(linearAllocSize,classesHash);
}
