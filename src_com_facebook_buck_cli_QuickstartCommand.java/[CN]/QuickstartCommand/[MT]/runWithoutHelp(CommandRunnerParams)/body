{
  String projectDir=getDestDir().trim();
  if (projectDir.isEmpty()) {
    projectDir=promptForPath(params,"Enter the directory where you would like to create the project: ");
  }
  File dir=new File(projectDir);
  while (!dir.isDirectory() && !dir.mkdirs() && !projectDir.isEmpty()) {
    projectDir=promptForPath(params,"Cannot create project directory. Enter another directory: ");
    dir=new File(projectDir);
  }
  if (projectDir.isEmpty()) {
    params.getConsole().getStdErr().println("No project directory specified. Aborting quickstart.");
    return 1;
  }
  String sdkLocation=getAndroidSdkDir();
  if (sdkLocation.isEmpty()) {
    sdkLocation=promptForPath(params,"Enter your Android SDK's location: ");
  }
  File sdkLocationFile=new File(sdkLocation);
  if (!sdkLocationFile.isDirectory()) {
    params.getConsole().getStdErr().println("WARNING: That Android SDK directory does not exist.");
  }
  sdkLocation=sdkLocationFile.getAbsoluteFile().toString();
  Path origin=PATH_TO_QUICKSTART_DIR;
  Path destination=Paths.get(projectDir);
  MoreFiles.copyRecursively(origin,destination);
  File buckConfig=new File(projectDir + "/.buckconfig");
  Files.append("[android]\n    target = " + AndroidPlatformTarget.DEFAULT_ANDROID_PLATFORM_TARGET + "\n",buckConfig,StandardCharsets.UTF_8);
  File localProperties=new File(projectDir + "/local.properties");
  Files.write("sdk.dir=" + sdkLocation + "\n",localProperties,StandardCharsets.UTF_8);
  params.getConsole().getStdOut().print(Files.toString(origin.resolve("README.md").toFile(),StandardCharsets.UTF_8));
  params.getConsole().getStdOut().flush();
  return 0;
}
