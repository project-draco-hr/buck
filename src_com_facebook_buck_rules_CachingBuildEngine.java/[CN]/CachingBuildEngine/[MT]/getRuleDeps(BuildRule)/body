{
  ListenableFuture<ImmutableSortedSet<BuildRule>> deps=ruleDeps.get(rule.getBuildTarget());
  if (deps == null) {
    deps=service.submit(new Callable<ImmutableSortedSet<BuildRule>>(){
      @Override public ImmutableSortedSet<BuildRule> call() throws Exception {
        ImmutableSortedSet.Builder<BuildRule> deps=ImmutableSortedSet.naturalOrder();
        deps.addAll(rule.getDeps());
        if (rule instanceof HasRuntimeDeps) {
          deps.addAll(((HasRuntimeDeps)rule).getRuntimeDeps());
        }
        return deps.build();
      }
    }
);
    ruleDeps.put(rule.getBuildTarget(),deps);
  }
  return deps;
}
