{
  File zipFile;
  try {
    zipFile=File.createTempFile(MoreFiles.sanitize(rule.getFullyQualifiedName()),".zip");
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  CacheResult cacheResult=buildInfoRecorder.fetchArtifactForBuildable(zipFile,artifactCache);
  if (!cacheResult.isSuccess()) {
    zipFile.delete();
    return cacheResult;
  }
  buildContext.getEventBus().post(ArtifactCacheEvent.started(ArtifactCacheEvent.Operation.DECOMPRESS,rule.getRuleKey()));
  try {
    Unzip.extractZipFile(zipFile.toPath().toAbsolutePath(),projectRoot.toAbsolutePath(),true);
    Files.delete(zipFile.toPath());
  }
 catch (  IOException e) {
    buildContext.getEventBus().post(ConsoleEvent.warning("Failed to unzip the artifact for %s at %s.\n" + "The rule will be built locally, " + "but here is the stacktrace of the failed unzip call:\n"+ rule.getBuildTarget(),zipFile.getAbsolutePath(),Throwables.getStackTraceAsString(e)));
    return CacheResult.MISS;
  }
 finally {
    buildContext.getEventBus().post(ArtifactCacheEvent.finished(ArtifactCacheEvent.Operation.DECOMPRESS,rule.getRuleKey()));
  }
  return cacheResult;
}
