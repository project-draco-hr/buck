{
  Preconditions.checkState(useDependencyFileRuleKey(rule));
  if (!depFile.isPresent()) {
    return Optional.absent();
  }
  ImmutableList<Path> inputs=FluentIterable.from(depFile.get()).transform(MorePaths.TO_PATH).toList();
  try {
    return Optional.of(this.ruleKeyFactories.getUnchecked(rule.getProjectFilesystem()).depFileRuleKeyBuilderFactory.build(rule,inputs));
  }
 catch (  NoSuchFileException e) {
    if (!allowMissingInputs) {
      throw e;
    }
    return Optional.absent();
  }
}
