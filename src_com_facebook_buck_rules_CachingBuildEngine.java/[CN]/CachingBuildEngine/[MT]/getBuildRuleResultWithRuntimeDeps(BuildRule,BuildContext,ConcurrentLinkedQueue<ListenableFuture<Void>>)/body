{
  final ListenableFuture<BuildResult> result=getBuildRuleResult(rule,context,asyncCallbacks);
  if (!(rule instanceof HasRuntimeDeps)) {
    return result;
  }
  ImmutableSortedSet<BuildRule> runtimeDeps=((HasRuntimeDeps)rule).getRuntimeDeps();
  List<ListenableFuture<BuildResult>> runtimeDepResults=Lists.newArrayListWithExpectedSize(runtimeDeps.size());
  for (  BuildRule dep : runtimeDeps) {
    runtimeDepResults.add(getBuildRuleResultWithRuntimeDeps(dep,context,asyncCallbacks));
  }
  return MoreFutures.chainExceptions(Futures.allAsList(runtimeDepResults),result);
}
