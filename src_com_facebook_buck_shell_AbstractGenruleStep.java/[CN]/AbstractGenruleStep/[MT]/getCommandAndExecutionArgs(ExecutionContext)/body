{
  String command;
  if (context.getPlatform() == Platform.WINDOWS) {
    String commandInUse;
    if (!commandString.cmdExe.or("").isEmpty()) {
      commandInUse=commandString.cmdExe.get();
    }
 else     if (!commandString.cmd.or("").isEmpty()) {
      commandInUse=commandString.cmd.get();
    }
 else {
      throw new HumanReadableException("You must specify either cmd_exe or cmd for genrule %s.",getFullyQualifiedName());
    }
    command=replaceMatches(context.getProjectFilesystem(),commandInUse);
    return new ExecutionArgsAndCommand(ImmutableList.of("cmd.exe","/c"),command);
  }
 else {
    String commandInUse;
    if (!commandString.bash.or("").isEmpty()) {
      commandInUse=commandString.bash.get();
    }
 else     if (!commandString.cmd.or("").isEmpty()) {
      commandInUse=commandString.cmd.get();
    }
 else {
      throw new HumanReadableException("You must specify either bash or cmd for genrule %s.",getFullyQualifiedName());
    }
    command=replaceMatches(context.getProjectFilesystem(),commandInUse);
    return new ExecutionArgsAndCommand(ImmutableList.of("/bin/bash","-e","-c"),command);
  }
}
