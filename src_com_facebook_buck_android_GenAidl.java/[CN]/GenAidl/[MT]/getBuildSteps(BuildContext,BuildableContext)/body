{
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  commands.add(new MakeCleanDirectoryStep(genPath));
  Path outputDirectory=BuildTargets.getBinPath(buildTarget,"__%s.aidl");
  commands.add(new MakeCleanDirectoryStep(outputDirectory));
  AidlStep command=new AidlStep(buildTarget,aidlFilePath,ImmutableSet.of(importPath),outputDirectory);
  commands.add(command);
  Path genDirectory=Paths.get(BuckConstant.GEN_DIR,importPath);
  if (!importPath.startsWith(buildTarget.getBasePath())) {
    context.logError("%s, gen_aidl import path (%s) should be a child of %s",buildTarget,importPath,buildTarget.getBasePath());
  }
  commands.add(new MkdirStep(genDirectory));
  commands.add(new RecordArtifactsInDirectoryStep(buildableContext,outputDirectory,genDirectory));
  commands.add(new JarDirectoryStep(output,ImmutableSet.of(outputDirectory),null,null));
  buildableContext.recordArtifact(output);
  return commands.build();
}
