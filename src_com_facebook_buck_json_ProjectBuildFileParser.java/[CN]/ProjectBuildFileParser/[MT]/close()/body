{
  if (isClosed) {
    return;
  }
  try {
    if (isInitialized) {
      Preconditions.checkNotNull(buckPyStdinWriter);
      Preconditions.checkNotNull(buckPyProcess);
      try {
        buckPyStdinWriter.close();
      }
 catch (      IOException e) {
      }
      if (stderrConsumerThread != null) {
        stderrConsumerThread.join();
        stderrConsumerThread=null;
        try {
          Preconditions.checkNotNull(stderrConsumerTerminationFuture).get();
        }
 catch (        ExecutionException e) {
          Throwable cause=e.getCause();
          if (cause instanceof IOException) {
            throw (IOException)cause;
          }
 else {
            throw new RuntimeException(e);
          }
        }
        stderrConsumerTerminationFuture=null;
      }
      if (enableProfiling && profileOutputFile != null) {
        parseProfileOutput(profileOutputFile.get());
      }
      LOG.debug("Waiting for process %s to exit...",buckPyProcess);
      int exitCode=processExecutor.waitForLaunchedProcess(buckPyProcess);
      if (exitCode != 0) {
        LOG.warn("Process %s exited with error code %d",buckPyProcess,exitCode);
        throw BuildFileParseException.createForUnknownParseError(String.format("Parser did not exit cleanly (exit code: %d)",exitCode));
      }
      LOG.debug("Process %s exited cleanly.",buckPyProcess);
      try {
synchronized (this) {
          if (pathToBuckPy.isPresent()) {
            Files.delete(pathToBuckPy.get());
          }
        }
      }
 catch (      IOException e) {
      }
    }
  }
  finally {
    if (isInitialized) {
      buckEventBus.post(new ProjectBuildFileParseEvents.Finished(Preconditions.checkNotNull(projectBuildFileParseEventStarted)));
    }
    isClosed=true;
  }
}
