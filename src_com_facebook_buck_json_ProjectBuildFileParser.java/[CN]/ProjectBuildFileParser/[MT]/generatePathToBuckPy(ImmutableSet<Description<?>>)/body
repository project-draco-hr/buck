{
  if (pathToBuckPy.isPresent()) {
    return;
  }
  LOG.debug("Creating temporary buck.py instance...");
  Path buckDotPy=Files.createTempFile("buck",".py");
  Files.createDirectories(buckDotPy.getParent());
  try (Writer out=Files.newBufferedWriter(buckDotPy,UTF_8)){
    URL resource=Resources.getResource(BUCK_PY_RESOURCE);
    String pathlibDir=PATH_TO_PATHLIB_PY.getParent().toString();
    out.write("from __future__ import with_statement\n" + "import sys\n" + "sys.path.insert(0, \"" + Escaper.escapeAsBashString(MorePaths.pathWithUnixSeparators(pathlibDir)) + "\")\n");
    Resources.asCharSource(resource,UTF_8).copyTo(out);
    out.write("\n\n");
    ConstructorArgMarshaller inspector=new ConstructorArgMarshaller();
    BuckPyFunction function=new BuckPyFunction(inspector);
    for (    Description<?> description : descriptions) {
      out.write(function.toPythonFunction(description.getBuildRuleType(),description.createUnpopulatedConstructorArg()));
      out.write('\n');
    }
    out.write(Joiner.on("\n").join("if __name__ == '__main__':","  try:","    main()","  except KeyboardInterrupt:","    print >> sys.stderr, 'Killed by User'",""));
  }
   Path normalizedBuckDotPyPath=buckDotPy.normalize();
  pathToBuckPy=Optional.of(normalizedBuckDotPyPath);
  LOG.debug("Created temporary buck.py instance at %s.",normalizedBuckDotPyPath);
}
