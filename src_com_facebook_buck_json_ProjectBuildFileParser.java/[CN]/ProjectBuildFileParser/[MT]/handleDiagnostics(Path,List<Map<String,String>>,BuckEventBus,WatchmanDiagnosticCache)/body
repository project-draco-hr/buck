{
  for (  Map<String,String> diagnostic : diagnosticsList) {
    String level=diagnostic.get("level");
    String message=diagnostic.get("message");
    String source=diagnostic.get("source");
    if (level == null || message == null) {
      throw new IOException(String.format("Invalid diagnostic(level=%s, message=%s, source=%s)",level,message,source));
    }
    if (source != null && source.equals("watchman")) {
      handleWatchmanDiagnostic(level,message,buckEventBus,watchmanDiagnosticCache);
    }
 else {
switch (level) {
case "warning":
        LOG.warn("Warning raised by BUCK file parser for file %s: %s",buildFile,message);
      buckEventBus.post(ConsoleEvent.warning("Warning raised by BUCK file parser: %s",message));
    break;
case "error":
  LOG.warn("Error raised by BUCK file parser for file %s: %s",buildFile,message);
buckEventBus.post(ConsoleEvent.severe("Error raised by BUCK file parser: %s",message));
break;
case "fatal":
LOG.warn("Fatal error raised by BUCK file parser for file %s: %s",buildFile,message);
throw BuildFileParseException.createForBuildFileParseError(buildFile,new IOException(message));
default :
LOG.warn("Unknown diagnostic (level %s) raised by BUCK file parser for build file %s: %s",level,buildFile,message);
break;
}
}
}
}
