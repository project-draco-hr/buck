{
  this.pathToBuckPy=Optional.absent();
  this.options=options;
  this.marshaller=marshaller;
  this.environment=environment;
  this.buckEventBus=buckEventBus;
  this.processExecutor=processExecutor;
  this.bserDeserializer=new BserDeserializer(BserDeserializer.KeyOrdering.SORTED);
  this.bserSerializer=new BserSerializer();
  this.assertSingleThreadedParsing=new AssertScopeExclusiveAccess();
  this.rawConfigJson=Suppliers.memoize(new Supplier<Path>(){
    @Override public Path get(){
      try {
        Path rawConfigJson=Files.createTempFile("raw_config",".json");
        Files.createDirectories(rawConfigJson.getParent());
        try (OutputStream output=new BufferedOutputStream(Files.newOutputStream(rawConfigJson))){
          bserSerializer.serializeToStream(rawConfig,output);
        }
         return rawConfigJson;
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
