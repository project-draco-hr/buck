{
  workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"depfiles",tmp);
  workspace.setUp();
  workspace.writeContentsToPath("[cxx]\n" + "  preprocess_mode = " + mode.toString().toLowerCase() + "\n"+ "  cppflags = -Wall -Werror\n"+ "  cxxppflags = -Wall -Werror\n"+ "  cflags = -Wall -Werror\n"+ "  cxxflags = -Wall -Werror\n",".buckconfig");
  workspace.runBuckBuild("//:test").assertSuccess();
  target=BuildTargetFactory.newInstance(workspace.getDestPath(),"//:test");
  CxxPlatform cxxPlatform=DefaultCxxPlatforms.build(new CxxBuckConfig(FakeBuckConfig.builder().build()));
  CxxSourceRuleFactory cxxSourceRuleFactory=CxxSourceRuleFactoryHelper.of(workspace.getDestPath(),target,cxxPlatform);
  String source="test.cpp";
  if (mode == CxxPreprocessMode.SEPARATE) {
    preprocessTarget=cxxSourceRuleFactory.createPreprocessBuildTarget(source,CxxSource.Type.CXX,CxxSourceRuleFactory.PicType.PDC);
  }
 else {
    preprocessTarget=cxxSourceRuleFactory.createCompileBuildTarget(source,CxxSourceRuleFactory.PicType.PDC);
  }
  workspace.getBuildLog().assertTargetBuiltLocally(preprocessTarget.toString());
}
