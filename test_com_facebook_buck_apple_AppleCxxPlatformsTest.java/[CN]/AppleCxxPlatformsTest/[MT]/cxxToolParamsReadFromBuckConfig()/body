{
  AppleSdkPaths appleSdkPaths=AppleSdkPaths.builder().setDeveloperPath(Paths.get(".")).addToolchainPaths(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(Paths.get("Platforms/iPhoneOS.platform")).setSdkPath(Paths.get("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk")).build();
  ImmutableSet<Path> paths=ImmutableSet.<Path>builder().add(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang")).add(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++")).add(Paths.get("Platforms/iPhoneOS.platform/Developer/usr/bin/libtool")).add(Paths.get("Platforms/iPhoneOS.platform/Developer/usr/bin/ar")).build();
  CxxPlatform appleCxxPlatform=AppleCxxPlatforms.buildWithExecutableChecker(ApplePlatform.builder().setName(ApplePlatform.Name.IPHONEOS).build(),"iphoneos8.0","6A2008a","7.0","armv7",appleSdkPaths,new FakeBuckConfig(ImmutableMap.<String,Map<String,String>>of("cxx",ImmutableMap.of("cflags","-std=gnu11","cppflags","-DCTHING","cxxflags","-std=c++11","cxxppflags","-DCXXTHING"))),new FakeExecutableFinder(paths));
  assertThat(appleCxxPlatform.getCflags(),hasItem("-std=gnu11"));
  assertThat(appleCxxPlatform.getCppflags(),hasItems("-std=gnu11","-DCTHING"));
  assertThat(appleCxxPlatform.getCxxflags(),hasItem("-std=c++11"));
  assertThat(appleCxxPlatform.getCxxppflags(),hasItems("-std=c++11","-DCXXTHING"));
}
