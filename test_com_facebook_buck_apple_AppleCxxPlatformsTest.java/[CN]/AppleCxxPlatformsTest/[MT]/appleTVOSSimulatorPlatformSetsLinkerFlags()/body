{
  AppleSdkPaths appleSdkPaths=AppleSdkPaths.builder().setDeveloperPath(Paths.get(".")).addToolchainPaths(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(Paths.get("Platforms/AppleTVSimulator.platform")).setSdkPath(Paths.get("Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator9.1.sdk")).build();
  ImmutableSet<Path> paths=ImmutableSet.<Path>builder().addAll(COMMON_KNOWN_PATHS).add(Paths.get("Platforms/AppleTVSimulator.platform/Developer/usr/bin/libtool")).add(Paths.get("Platforms/AppleTVSimulator.platform/Developer/usr/bin/ar")).build();
  AppleToolchain toolchain=AppleToolchain.builder().setIdentifier("com.apple.dt.XcodeDefault").setPath(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setVersion("1").build();
  AppleSdk targetSdk=AppleSdk.builder().setApplePlatform(ApplePlatform.APPLETVSIMULATOR).setName("appletvsimulator9.1").setVersion("9.1").setToolchains(ImmutableList.of(toolchain)).build();
  AppleCxxPlatform appleCxxPlatform=AppleCxxPlatforms.buildWithExecutableChecker(targetSdk,"9.1","arm64",appleSdkPaths,FakeBuckConfig.builder().build(),new FakeAppleConfig(),new FakeExecutableFinder(paths),Optional.<ProcessExecutor>absent(),Optional.<AppleToolchain>absent());
  CxxPlatform cxxPlatform=appleCxxPlatform.getCxxPlatform();
  assertThat(cxxPlatform.getCflags(),hasItem("-mtvos-simulator-version-min=9.1"));
  assertThat(cxxPlatform.getLdflags(),hasItem("-mtvos-simulator-version-min=9.1"));
}
