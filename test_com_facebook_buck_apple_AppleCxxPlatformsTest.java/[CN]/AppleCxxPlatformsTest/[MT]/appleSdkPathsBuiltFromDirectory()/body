{
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  AppleSdkPaths appleSdkPaths=ImmutableAppleSdkPaths.builder().setDeveloperPath(Paths.get(".")).addToolchainPaths(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setPlatformDeveloperPath(Paths.get("Platforms/iPhoneOS.platform/Developer")).setSdkPath(Paths.get("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk")).build();
  ImmutableMap<Path,Boolean> paths=ImmutableMap.<Path,Boolean>builder().put(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"),true).put(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++"),true).put(Paths.get("Platforms/iPhoneOS.platform/Developer/usr/bin/libtool"),true).put(Paths.get("Platforms/iPhoneOS.platform/Developer/usr/bin/ar"),true).build();
  CxxPlatform appleCxxPlatform=AppleCxxPlatforms.buildWithExecutableChecker(projectFilesystem,ApplePlatform.IPHONEOS,"iphoneos8.0","7.0","armv7",appleSdkPaths,new FakeBuckConfig(),Functions.forMap(paths,false));
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver());
  assertEquals(ImmutableFlavor.of("iphoneos8.0-armv7"),appleCxxPlatform.getFlavor());
  assertEquals(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang").toString(),appleCxxPlatform.getCc().getCommandPrefix(resolver).get(0));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-isysroot",Paths.get("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk").toString()));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-arch","armv7"));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-mios-version-min=7.0"));
  assertEquals(Paths.get("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++").toString(),appleCxxPlatform.getCxx().getCommandPrefix(resolver).get(0));
  assertEquals(Paths.get("Platforms/iPhoneOS.platform/Developer/usr/bin/ar").toString(),appleCxxPlatform.getAr().getCommandPrefix(resolver).get(0));
}
