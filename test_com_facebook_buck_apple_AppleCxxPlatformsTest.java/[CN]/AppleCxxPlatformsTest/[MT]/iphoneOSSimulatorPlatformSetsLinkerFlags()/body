{
  AppleSdkPaths appleSdkPaths=AppleSdkPaths.builder().setDeveloperPath(Paths.get(".")).addToolchainPaths(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(Paths.get("Platforms/iPhoneOS.platform")).setSdkPath(Paths.get("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneSimulator8.0.sdk")).build();
  ImmutableSet<Path> paths=ImmutableSet.<Path>builder().addAll(COMMON_KNOWN_PATHS).add(Paths.get("Platforms/iPhoneSimulator.platform/Developer/usr/bin/libtool")).add(Paths.get("Platforms/iPhoneSimulator.platform/Developer/usr/bin/ar")).add(Paths.get("Tools/otest")).build();
  AppleToolchain toolchain=AppleToolchain.builder().setIdentifier("com.apple.dt.XcodeDefault").setPath(Paths.get("Toolchains/XcodeDefault.xctoolchain")).setVersion("1").build();
  AppleSdk targetSdk=AppleSdk.builder().setApplePlatform(ApplePlatform.IPHONESIMULATOR).setName("iphonesimulator8.0").setVersion("8.0").setToolchains(ImmutableList.of(toolchain)).build();
  AppleCxxPlatform appleCxxPlatform=AppleCxxPlatforms.buildWithExecutableChecker(targetSdk,"7.0","armv7",appleSdkPaths,FakeBuckConfig.builder().build(),new FakeAppleConfig(),new FakeExecutableFinder(paths),Optional.<ProcessExecutor>absent(),Optional.<AppleToolchain>absent());
  CxxPlatform cxxPlatform=appleCxxPlatform.getCxxPlatform();
  assertThat(cxxPlatform.getCflags(),hasItem("-mios-simulator-version-min=7.0"));
  assertThat(cxxPlatform.getLdflags(),hasItem("-mios-simulator-version-min=7.0"));
}
