{
  super.validateState();
  if ((m_instrPath == null) || (m_instrPath.length == 0))   throw new IllegalStateException("instrumentation path not set");
  if (m_outMode == null)   throw new IllegalStateException("output mode not set");
  if (m_outMode != OutMode.OUT_MODE_OVERWRITE) {
    if (m_outDir == null)     throw new IllegalStateException("output directory not set");
    if ($assert.ENABLED) {
      $assert.ASSERT(m_outDir != null,"m_outDir = null");
      $assert.ASSERT(m_instrPath != null,"m_instrPath = null");
    }
    final File canonicalOutDir=Files.canonicalizeFile(m_outDir);
    final File[] canonicalInstrPath;
    if (m_canonical)     canonicalInstrPath=m_instrPath;
 else {
      canonicalInstrPath=new File[m_instrPath.length];
      for (int ip=0; ip < canonicalInstrPath.length; ++ip) {
        canonicalInstrPath[ip]=Files.canonicalizeFile(m_instrPath[ip]);
      }
    }
    final int instrPathLength=canonicalInstrPath.length;
    for (File dir=canonicalOutDir; dir != null; dir=dir.getParentFile()) {
      for (int ip=0; ip < instrPathLength; ++ip) {
        if (dir.equals(canonicalInstrPath[ip]))         throw new IllegalStateException("output directory [" + canonicalOutDir + "] cannot be one of the instrumentation path directories (or a child thereof)");
      }
    }
  }
}
