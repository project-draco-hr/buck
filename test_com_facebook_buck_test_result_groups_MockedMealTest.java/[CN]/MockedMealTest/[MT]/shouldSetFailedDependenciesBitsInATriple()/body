{
  List<TestRule> tests=ImmutableList.of(mealTest,beerTest,hopsTest);
  TestResultsGrouper grouper=new TestResultsGrouper(tests);
  Capture<Boolean> isMealDependenciesPass=new Capture<>();
  Capture<Boolean> isBeerDependenciesPass=new Capture<>();
  Capture<Boolean> isHopsDependenciesPass=new Capture<>();
  TestResults mealTestResults=failTestsAndCapture(isMealDependenciesPass);
  TestResults beerTestResults=failTestsAndCapture(isBeerDependenciesPass);
  TestResults hopsTestResults=failTestsAndCapture(isHopsDependenciesPass);
  assertGroupedTestResults(grouper.post(beerTest,beerTestResults));
  assertGroupedTestResults(grouper.post(mealTest,mealTestResults));
  assertGroupedTestResults(grouper.post(hopsTest,hopsTestResults),mealTest,beerTest,hopsTest);
  assertFalse("Meal should have a failed dependency (hops)",isMealDependenciesPass.getValue());
  assertFalse("Beer should have a failed dependency (hops)",isBeerDependenciesPass.getValue());
  assertTrue("Hops has no failed dependencies",isHopsDependenciesPass.getValue());
}
