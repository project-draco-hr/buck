{
  Collection<String> keys=collectKeys();
  List<String> lines=Lists.newArrayListWithCapacity(keys.size());
  for (  String key : keys) {
    ImmutableList<TokenResolution> resolutions=resolutionCache.get(key);
    if (resolutions == null) {
      ImmutableList.Builder<TokenResolution> builder=ImmutableList.builder();
      LookupResult result=lookupRawFromLayer(key,0).get();
      for (      PredicatedConfigValue config : result.result) {
        builder.addAll(resolveSetting(result.layerFound,config.key,config.conditions,config.valueTokens));
      }
      resolutions=builder.build();
      resolutionCache.put(key,resolutions);
    }
    for (    TokenResolution resolution : resolutions) {
      StringBuilder line=new StringBuilder();
      line.append(key);
      if (!resolution.conditions.isEmpty()) {
        line.append('[');
        line.append(Joiner.on(',').join(resolution.conditions));
        line.append(']');
      }
      line.append(" = ");
      line.append(resolution.value);
      lines.add(line.toString());
    }
  }
  return lines;
}
