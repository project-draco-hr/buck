{
  super(new FakeBuildRuleParamsBuilder(BuildTargetFactory.newInstance(target)).build(),new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer())),srcs,ImmutableList.<String>of(),ImmutableSet.<String>of(),Paths.get("somewhere"),new Tool(){
    @Override public ImmutableCollection<BuildRule> getDeps(    SourcePathResolver resolver){
      return ImmutableSortedSet.of();
    }
    @Override public ImmutableCollection<SourcePath> getInputs(){
      return ImmutableSortedSet.of();
    }
    @Override public ImmutableList<String> getCommandPrefix(    SourcePathResolver resolver){
      return ImmutableList.of();
    }
    @Override public ImmutableMap<String,String> getEnvironment(    SourcePathResolver resolver){
      return ImmutableMap.of();
    }
    @Override public void appendToRuleKey(    RuleKeyObjectSink sink){
    }
  }
);
}
