{
  if (inputsFormattedAsBuildTargets.isEmpty()) {
    params.getBuckEventBus().post(ConsoleEvent.severe("Specify one or more input targets after the query expression format"));
    return 1;
  }
  Set<String> targetLiterals=new LinkedHashSet<>();
  for (  String input : inputsFormattedAsBuildTargets) {
    String query=queryFormat.replace("%s",input);
    QueryExpression expr=QueryExpression.parse(query,env);
    expr.collectTargetPatterns(targetLiterals);
  }
  env.preloadTargetPatterns(targetLiterals,executor);
  TreeMultimap<String,QueryTarget> queryResultMap=TreeMultimap.create();
  for (  String input : inputsFormattedAsBuildTargets) {
    String query=queryFormat.replace("%s",input);
    Set<QueryTarget> queryResult=env.evaluateQuery(query,executor);
    queryResultMap.putAll(input,queryResult);
  }
  LOG.debug("Printing out the following targets: " + queryResultMap);
  if (generateJsonOutput) {
    CommandHelper.printJSON(params,queryResultMap);
  }
 else {
    CommandHelper.printToConsole(params,queryResultMap);
  }
  return 0;
}
