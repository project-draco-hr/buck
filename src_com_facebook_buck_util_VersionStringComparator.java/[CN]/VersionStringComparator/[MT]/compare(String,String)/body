{
  if (!isValidVersionString(a)) {
    throw new RuntimeException("Invalid version string: " + a);
  }
  if (!isValidVersionString(b)) {
    throw new RuntimeException("Invalid version string: " + b);
  }
  String cleanedA=IGNORED_FIELDS_PATTERN.matcher(a).replaceAll("");
  String cleanedB=IGNORED_FIELDS_PATTERN.matcher(b).replaceAll("");
  String[] partsA=DELIMITER_PATTERN.split(cleanedA);
  String[] partsB=DELIMITER_PATTERN.split(cleanedB);
  Iterator<Integer> valuesA=partsToValues(partsA).iterator();
  Iterator<Integer> valuesB=partsToValues(partsB).iterator();
  while (valuesA.hasNext()) {
    if (!valuesB.hasNext()) {
      return 1;
    }
    int comp=valuesA.next().compareTo(valuesB.next());
    if (comp != 0) {
      return comp;
    }
  }
  return valuesB.hasNext() ? -1 : 0;
}
