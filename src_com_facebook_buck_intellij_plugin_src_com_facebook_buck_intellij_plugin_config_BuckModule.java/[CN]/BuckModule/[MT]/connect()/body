{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      if (!mClient.isConnected()) {
        BuckWSServerPortUtils wsPortUtils=new BuckWSServerPortUtils();
        try {
          int port=wsPortUtils.getPort(BuckModule.this.mProject.getBasePath());
          if (port == BuckWSServerPortUtils.CONNECTION_FAILED) {
            BuckToolWindowFactory.outputConsoleMessage(mProject,"Your buck server may be turned off.\n" + "It's possible that it can't get a port.\n" + "Try adding to your '.buckconfig.local' file:\n"+ "[httpserver]\n"+ "    port = 0\n"+ "After that, try running the command again.\n",ConsoleViewContentType.ERROR_OUTPUT);
          }
 else {
            mClient=new BuckClient(port,mEventHandler);
            BuckModule.this.mClient.connect();
          }
        }
 catch (        NumberFormatException e) {
          LOG.error(e);
        }
catch (        ExecutionException e) {
          LOG.error(e);
        }
catch (        IOException e) {
          LOG.error(e);
        }
      }
    }
  }
);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      FileTypeManager fileTypeManager=FileTypeManagerImpl.getInstance();
      FileType fileType=fileTypeManager.getFileTypeByFileName(BuckFileType.INSTANCE.getDefaultExtension());
      while (!(fileType instanceof BuckFileType || fileType instanceof UnknownFileType)) {
        List<FileNameMatcher> fileNameMatchers=fileTypeManager.getAssociations(fileType);
        for (        FileNameMatcher fileNameMatcher : fileNameMatchers) {
          if (fileNameMatcher.accept(BuckFileType.INSTANCE.getDefaultExtension())) {
            fileTypeManager.removeAssociation(fileType,fileNameMatcher);
          }
        }
        fileType=fileTypeManager.getFileTypeByFileName(BuckFileType.INSTANCE.getDefaultExtension());
      }
    }
  }
);
}
