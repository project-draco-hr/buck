def compile(self, root, relpaths):
    "Compiles the given python source files using this compiler's interpreter.\n\n    :param string root: The root path all the source files are found under.\n    :param list relpaths: The realtive paths from the `root` of the source files to compile.\n    :returns: A list of relative paths of the compiled bytecode files.\n    :raises: A :class:`Compiler.Error` if there was a problem bytecode compiling any of the files.\n    "
    with named_temporary_file() as fp:
        fp.write(to_bytes((_COMPILER_MAIN % {'root': root, 'relpaths': relpaths, }), encoding='utf-8'))
        fp.flush()
        process = subprocess.Popen([self._interpreter.binary, fp.name], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        (out, err) = process.communicate()
        if (process.returncode != 0):
            raise self.Error(err)
        return [pyc_relpath.decode('utf-8') for pyc_relpath in out.splitlines()]
