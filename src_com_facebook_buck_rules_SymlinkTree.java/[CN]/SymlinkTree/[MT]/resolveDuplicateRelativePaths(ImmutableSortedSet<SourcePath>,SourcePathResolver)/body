{
  Multiset<Path> assignedPaths=HashMultiset.create();
  ImmutableBiMap.Builder<SourcePath,Path> builder=ImmutableBiMap.builder();
  List<SourcePath> conflicts=new ArrayList<>();
  for (  SourcePath sourcePath : sourcePaths) {
    Path relativePath=resolver.getRelativePath(sourcePath);
    if (!assignedPaths.contains(relativePath)) {
      builder.put(sourcePath,relativePath);
      assignedPaths.add(relativePath);
    }
 else {
      conflicts.add(sourcePath);
    }
  }
  for (  SourcePath conflict : conflicts) {
    Path relativePath=resolver.getRelativePath(conflict);
    Path parent=MorePaths.getParentOrEmpty(relativePath);
    String extension=MorePaths.getFileExtension(relativePath);
    String name=MorePaths.getNameWithoutExtension(relativePath);
    while (true) {
      StringBuilder candidateName=new StringBuilder(name);
      candidateName.append('-');
      int suffix=assignedPaths.count(relativePath);
      candidateName.append(suffix);
      if (!extension.isEmpty()) {
        candidateName.append('.');
        candidateName.append(extension);
      }
      Path candidate=parent.resolve(candidateName.toString());
      if (!assignedPaths.contains(candidate)) {
        assignedPaths.add(candidate);
        builder.put(conflict,candidate);
        break;
      }
 else {
        assignedPaths.add(relativePath);
      }
    }
  }
  return builder.build();
}
