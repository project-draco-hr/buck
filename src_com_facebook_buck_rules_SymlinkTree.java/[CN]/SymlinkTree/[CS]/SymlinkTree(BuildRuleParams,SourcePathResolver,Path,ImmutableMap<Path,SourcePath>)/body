{
  super(params,resolver);
  this.root=root;
  this.links=ImmutableSortedMap.copyOf(links);
  ImmutableMap.Builder<Path,SourcePath> fullLinks=ImmutableMap.builder();
  for (  ImmutableMap.Entry<Path,SourcePath> entry : this.links.entrySet()) {
    for (    Path pathPart : entry.getKey()) {
      if (pathPart.toString().equals("..")) {
        throw new InvalidSymlinkTreeException(String.format("Path '%s' should not contain '%s'.",entry.getKey(),pathPart));
      }
    }
    fullLinks.put(root.resolve(entry.getKey()),entry.getValue());
  }
  this.fullLinks=fullLinks.build();
  this.linksForRuleKey=getLinksForRuleKey(links);
}
