{
  final Path root=Paths.get("root");
  final Path buckFile=Paths.get("root/BUCK");
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem(){
    private ImmutableSet<Path> existingFiles=ImmutableSet.of(buckFile,Paths.get("root/.buckconfig"),Paths.get("root/sub/Test.java"));
    @Override public boolean exists(    Path path){
      return existingFiles.contains(path);
    }
    @Override public Path resolve(    Path path){
      if (path.equals(Paths.get(".buckconfig"))) {
        return Paths.get("root/.buckconfig");
      }
      return path;
    }
    @Override public boolean isDirectory(    Path path,    LinkOption... linkOptions){
      return path.equals(root) || path.equals(Paths.get("root/sub"));
    }
    @Override public Path getRootPath(){
      return root;
    }
  }
;
  AuditOwnerCommand command=createAuditOwnerCommand(filesystem);
  assertEquals(buckFile,command.findBuckFileFor(Paths.get("root/.buckconfig")));
  assertEquals(buckFile,command.findBuckFileFor(Paths.get(".buckconfig")));
  assertEquals(buckFile,command.findBuckFileFor(Paths.get("root/sub/Test.java")));
}
