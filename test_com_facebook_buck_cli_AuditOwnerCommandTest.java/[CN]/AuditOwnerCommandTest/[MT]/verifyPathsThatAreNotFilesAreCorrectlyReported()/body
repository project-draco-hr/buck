{
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem(){
    @Override public File getFileForRelativePath(    String pathRelativeToProjectRoot){
      return new ExistingDirectoryFile(getProjectRoot(),pathRelativeToProjectRoot);
    }
  }
;
  ImmutableSet<String> inputs=ImmutableSet.of("java/somefolder/badfolder","java/somefolder","com/test/subtest");
  BuildTarget target=BuildTarget.builder("//base","name").build();
  TargetNode<?> targetNode=createTargetNode(target,ImmutableSet.<Path>of());
  AuditOwnerCommand command=createAuditOwnerCommand(filesystem);
  AuditOwnerCommand.OwnersReport report=command.generateOwnersReport(targetNode,inputs,false);
  assertTrue(report.owners.isEmpty());
  assertTrue(report.nonExistentInputs.isEmpty());
  assertTrue(report.inputsWithNoOwners.isEmpty());
  assertEquals(inputs,report.nonFileInputs);
}
