{
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem(){
    @Override public File getFileForRelativePath(    String pathRelativeToProjectRoot){
      return new ExistingDirectoryFile(getProjectRoot(),pathRelativeToProjectRoot);
    }
  }
;
  MutableDirectedGraph<BuildRule> mutableGraph=new MutableDirectedGraph<BuildRule>();
  ActionGraph graph=new ActionGraph(mutableGraph);
  String[] args=new String[]{"java/somefolder/badfolder","java/somefolder","com/test/subtest"};
  ImmutableSet<String> inputs=ImmutableSet.copyOf(args);
  AuditOwnerOptions options=getOptions(args);
  AuditOwnerCommand command=createAuditOwnerCommand(filesystem);
  AuditOwnerCommand.OwnersReport report=command.generateOwnersReport(graph,options);
  assertTrue(report.owners.isEmpty());
  assertTrue(report.nonExistentInputs.isEmpty());
  assertTrue(report.inputsWithNoOwners.isEmpty());
  assertEquals(inputs,report.nonFileInputs);
}
