{
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  String outputDirectory=getOutputDirectory();
  Step mkdir=new MkdirStep(outputDirectory);
  commands.add(mkdir);
  ImmutableSet<String> includePaths;
  if (metaInfDirectory != null) {
    String stagingRoot=outputDirectory + "/meta_inf_staging";
    String stagingTarget=stagingRoot + "/META-INF";
    MakeCleanDirectoryStep createStagingRoot=new MakeCleanDirectoryStep(stagingRoot);
    commands.add(createStagingRoot);
    MkdirAndSymlinkFileStep link=new MkdirAndSymlinkFileStep(metaInfDirectory.toString(),stagingTarget);
    commands.add(link);
    includePaths=ImmutableSet.<String>builder().add(stagingRoot).addAll(getTransitiveClasspathEntries().values()).build();
  }
 else {
    includePaths=ImmutableSet.copyOf(getTransitiveClasspathEntries().values());
  }
  String outputFile=getOutputFile();
  Step jar=new JarDirectoryStep(outputFile,includePaths,mainClass,manifestFile);
  commands.add(jar);
  return commands.build();
}
