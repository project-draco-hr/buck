{
  final ImmutableSet<String> contacts=getContacts();
  return new Callable<TestResults>(){
    @Override public TestResults call() throws Exception {
      Set<String> testClassNames=getClassNamesForSources(context);
      if (testClassNames.isEmpty()) {
        return new TestResults(getBuildTarget(),ImmutableList.<TestCaseSummary>of(),contacts);
      }
      List<TestCaseSummary> summaries=Lists.newArrayListWithCapacity(testClassNames.size());
      ProjectFilesystem filesystem=context.getProjectFilesystem();
      for (      String testClass : testClassNames) {
        String testSelectorSuffix="";
        if (isUsingTestSelectors) {
          testSelectorSuffix+=".test_selectors";
        }
        if (isDryRun) {
          testSelectorSuffix+=".dry_run";
        }
        String path=String.format("%s%s.xml",testClass,testSelectorSuffix);
        File testResultFile=filesystem.getFileForRelativePath(getPathToTestOutputDirectory().resolve(path));
        if (!isUsingTestSelectors && !testResultFile.isFile()) {
          summaries.add(getTestClassFailedSummary(testClass,"test exited before generating results file"));
        }
 else         if (testResultFile.isFile()) {
          summaries.add(XmlTestResultParser.parse(testResultFile));
        }
      }
      return new TestResults(getBuildTarget(),summaries,contacts);
    }
  }
;
}
