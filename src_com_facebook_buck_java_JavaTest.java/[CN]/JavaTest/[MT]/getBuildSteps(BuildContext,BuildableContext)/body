{
  buildableContext.recordArtifact(getClassPathFile());
  return ImmutableList.<Step>builder().addAll(super.getBuildSteps(context,buildableContext)).add(new MkdirStep(getProjectFilesystem(),getClassPathFile().getParent())).add(new AbstractExecutionStep("write classpath file"){
    @Override public int execute(    ExecutionContext context) throws IOException {
      ImmutableSet<Path> classpathEntries=ImmutableSet.<Path>builder().addAll(getTransitiveClasspathEntries().values()).addAll(additionalClasspathEntries).addAll(getBootClasspathEntries(context)).build();
      getProjectFilesystem().writeLinesToPath(Iterables.transform(classpathEntries,Functions.toStringFunction()),getClassPathFile());
      return 0;
    }
  }
).build();
}
