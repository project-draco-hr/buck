{
  Set<String> testClassNames=getClassNamesForSources(executionContext);
  LOG.debug("Testing these classes: %s",testClassNames.toString());
  if (testClassNames.isEmpty()) {
    return ImmutableList.of();
  }
  Iterable<String> reorderedTestClasses=reorderClasses(testClassNames,isShufflingTests);
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  Path pathToTestOutput=getPathToTestOutputDirectory();
  Path tmpDirectory=getPathToTmpDirectory();
  steps.add(new MakeCleanDirectoryStep(pathToTestOutput));
  steps.add(new MakeCleanDirectoryStep(tmpDirectory));
  ImmutableSet<Path> classpathEntries=ImmutableSet.<Path>builder().addAll(getTransitiveClasspathEntries().values()).addAll(additionalClasspathEntries).addAll(getBootClasspathEntries(executionContext)).build();
  junit=new JUnitStep(classpathEntries,reorderedTestClasses,amendVmArgs(vmArgs,executionContext.getTargetDeviceOptional()),pathToTestOutput,getBuildTarget().getBasePath(),tmpDirectory,executionContext.isCodeCoverageEnabled(),executionContext.isDebugEnabled(),executionContext.getBuckEventBus().getBuildId(),testSelectorList,isDryRun,testType,testRuleTimeoutMs);
  steps.add(junit);
  return steps.build();
}
