{
  pathResolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  final FileHashCache hashCache=new FileHashCache(){
    @Override public boolean willGet(    Path path){
      return true;
    }
    @Override public boolean willGet(    ArchiveMemberPath archiveMemberPath){
      return true;
    }
    @Override public void invalidate(    Path path){
    }
    @Override public void invalidateAll(){
    }
    @Override public HashCode get(    Path path) throws IOException {
      return HashCode.fromString("f1134a34c0de");
    }
    @Override public HashCode get(    ArchiveMemberPath archiveMemberPath){
      throw new AssertionError();
    }
    @Override public void set(    Path path,    HashCode hashCode){
    }
  }
;
  logger=new DefaultRuleKeyLogger();
  ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(hashCache,pathResolver){
    @Override protected RuleKeyBuilder newBuilder(    BuildRule rule){
      return new RuleKeyBuilder(pathResolver,hashCache,this,logger);
    }
  }
;
}
