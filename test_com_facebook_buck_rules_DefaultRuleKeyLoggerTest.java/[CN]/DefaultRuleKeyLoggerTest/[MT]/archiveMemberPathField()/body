{
  Fixture fixture=new Fixture();
  TestRule fakeRule=new TestRule(BuildTargetFactory.newInstance("//:foo"),fixture.getPathResolver(),null,new ArchiveMemberSourcePath(new FakeSourcePath(FAKE_PATH.toString()),Paths.get("member")),null);
  fixture.getRuleKeyBuilderFactory().build(fakeRule);
  String expectedArchiveMember="archiveMember(" + MorePaths.pathWithPlatformSeparators("foo/bar/path/1") + "!/member:f1134a34c0de):";
  assertThat(fixture.getLogger().getCurrentLogElements(),Matchers.contains("number(0):","key(buck.seed):","string(\"//:foo\"):","key(name):","string(\"test_rule\"):","key(buck.type):","string(\"N/A\"):","key(buckVersionUid):",expectedArchiveMember,"key(pathField):"));
}
