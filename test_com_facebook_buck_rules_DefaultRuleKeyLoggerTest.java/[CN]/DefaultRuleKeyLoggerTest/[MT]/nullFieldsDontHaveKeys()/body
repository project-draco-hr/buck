{
  ImmutableList<Matcher<? super Iterable<? super String>>> matchers=ImmutableList.<Matcher<? super Iterable<? super String>>>of(Matchers.hasItem("key(stringField):"),Matchers.hasItem("key(pathField):"),Matchers.hasItem("key(appendableField.appendableSubKey):"));
  Fixture fixture=new Fixture();
  TestRule rule=new TestRule(BuildTargetFactory.newInstance("//:foo"),fixture.getPathResolver(),"hello",new FakeSourcePath("hello"),new TestAppendable());
  fixture.getRuleKeyBuilderFactory().build(rule);
  assertThat(fixture.getLogger().getCurrentLogElements(),Matchers.allOf(matchers));
  Fixture nullFixture=new Fixture();
  TestRule nullRule=new TestRule(BuildTargetFactory.newInstance("//:foo"),nullFixture.getPathResolver(),null,null,null);
  nullFixture.getRuleKeyBuilderFactory().build(nullRule);
  assertThat(nullFixture.getLogger().getCurrentLogElements(),Matchers.not(Matchers.anyOf(matchers)));
}
