{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildRule cglib=PrebuiltJarBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/java/easymock:cglib")).setBinaryJar(Paths.get("third_party/java/easymock/cglib.jar")).build(ruleResolver);
  BuildRule objenesis=PrebuiltJarBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/java/easymock:objenesis")).setBinaryJar(Paths.get("third_party/java/easymock/objenesis.jar")).build(ruleResolver);
  BuildRule easymock=PrebuiltJarBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/java/easymock:easymock")).setBinaryJar(Paths.get("third_party/java/easymock/easymock.jar")).addDep(cglib.getBuildTarget()).addDep(objenesis.getBuildTarget()).build(ruleResolver);
  BuildTarget easyMockExampleTarget=BuildTargetFactory.newInstance("//third_party/java/easymock:example");
  BuildRule mockRule=AndroidLibraryBuilder.createBuilder(easyMockExampleTarget).addDep(easymock.getBuildTarget()).build(ruleResolver);
  ProjectConfig projectConfig=(ProjectConfig)ProjectConfigBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/java/easymock:project_config")).setSrcRule(mockRule.getBuildTarget()).build(ruleResolver);
  ProjectWithModules projectWithModules=getModulesForActionGraph(ruleResolver,ImmutableSortedSet.of(projectConfig),null);
  List<SerializableModule> modules=projectWithModules.modules;
  assertEquals("Should be one module for the android_library",1,modules.size());
  SerializableModule androidLibraryModule=Iterables.getOnlyElement(modules);
  assertThat(androidLibraryModule.getDependencies(),Matchers.containsInAnyOrder(SerializableDependentModule.newSourceFolder(),SerializableDependentModule.newLibrary(easymock.getBuildTarget(),"third_party_java_easymock_easymock_jar"),SerializableDependentModule.newLibrary(cglib.getBuildTarget(),"third_party_java_easymock_cglib_jar"),SerializableDependentModule.newLibrary(objenesis.getBuildTarget(),"third_party_java_easymock_objenesis_jar"),SerializableDependentModule.newInheritedJdk()));
}
