{
  ProjectWorkspace.ProcessResult result=workspace.runBuckCommand("test","--all","--filter","Test(A|B)");
  List<BuckEvent> capturedEvents=result.getCapturedEvents();
  IndividualTestEvent.Finished resultsEvent=null;
  for (  BuckEvent event : capturedEvents) {
    if (event instanceof IndividualTestEvent.Finished) {
      resultsEvent=(IndividualTestEvent.Finished)event;
    }
  }
  Map<String,String> output=Maps.newHashMap();
  assertThat("There should have been a test-results event",resultsEvent,notNullValue());
  for (  TestCaseSummary testCaseSummary : resultsEvent.getResults().getTestCases()) {
    for (    TestResultSummary testResultSummary : testCaseSummary.getTestResults()) {
      String id=String.format("%s#%s",testResultSummary.getTestCaseName(),testResultSummary.getTestName());
      String message=null;
      if (testResultSummary.getType() != ResultType.SUCCESS) {
        StringBuilder builder=new StringBuilder();
        builder.append(testResultSummary.getMessage());
        builder.append(':');
        builder.append(testResultSummary.getType());
        message=builder.toString();
      }
      output.put(id,message);
    }
  }
  assertThat("A1 should pass",output.get("com.example.AssumptionTestA#test1"),nullValue());
  assertThat("A2 should pass",output.get("com.example.AssumptionTestA#test2"),nullValue());
  assertThat("B3 should pass",output.get("com.example.AssumptionTestB#test3"),nullValue());
  assertThat("A3 should skip",output.get("com.example.AssumptionTestA#test3"),equalTo("A3:ASSUMPTION_VIOLATION"));
  assertThat("B1 should skip",output.get("com.example.AssumptionTestB#test1"),equalTo("B1:ASSUMPTION_VIOLATION"));
  assertThat("B2 should skip",output.get("com.example.AssumptionTestB#test2"),equalTo("B2:ASSUMPTION_VIOLATION"));
  assertThat("B4 should fail",output.get("com.example.AssumptionTestB#test4"),equalTo("B4:FAILURE"));
}
