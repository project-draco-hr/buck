{
  final ImmutableSet<BuildTarget> targets=FluentIterable.from(options.getArgumentsFormattedAsBuildTargets()).transform(new Function<String,BuildTarget>(){
    @Override public BuildTarget apply(    String input){
      return getParser().getBuildTargetParser().parse(input,ParseContext.fullyQualified());
    }
  }
).toSet();
  if (targets.isEmpty()) {
    console.printBuildFailure("Please specify at least one build target.");
    return 1;
  }
  TargetGraph targetGraph;
  try {
    targetGraph=getParser().buildTargetGraphForBuildTargets(targets,options.getDefaultIncludes(),getBuckEventBus(),console,environment,options.getEnableProfiling());
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (options.shouldGenerateDotOutput()) {
    return printDotOutput(targetGraph);
  }
 else   if (options.shouldGenerateJsonOutput()) {
    return printJsonClasspath(targetGraph,targets);
  }
 else {
    return printClasspath(targetGraph,targets);
  }
}
