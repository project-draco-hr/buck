{
  Verbosity verbosity=context.getVerbosity().isSilent() ? Verbosity.STANDARD_INFORMATION : context.getVerbosity();
  try (CapturingPrintStream stdout=new CapturingPrintStream();CapturingPrintStream stderr=new CapturingPrintStream();ExecutionContext firstOrderContext=context.createSubContext(stdout,stderr,Optional.of(verbosity))){
    Javac javac=getJavac();
    int declaredDepsResult=javac.buildWithClasspath(firstOrderContext,filesystem,resolver,invokingRule,getOptions(context,declaredClasspathEntries),javacOptions.getSafeAnnotationProcessors(),javaSourceFilePaths,pathToSrcsList,workingDirectory,usedClassesFile,fileManagerFactory);
    String firstOrderStdout=stdout.getContentsAsString(Charsets.UTF_8);
    String firstOrderStderr=stderr.getContentsAsString(Charsets.UTF_8);
    if (declaredDepsResult != 0) {
      ImmutableList.Builder<String> errorMessage=ImmutableList.builder();
      errorMessage.add(firstOrderStderr);
      if (suggestBuildRules.isPresent()) {
        ImmutableSet<String> failedImports=findFailedImports(firstOrderStderr);
        ImmutableSet<String> suggestions=suggestBuildRules.get().suggest(failedImports);
        if (!suggestions.isEmpty()) {
          String invoker=invokingRule.toString();
          errorMessage.add(String.format("Rule %s has failed to build.",invoker));
          errorMessage.add(Joiner.on(LINE_SEPARATOR).join(failedImports));
          errorMessage.add("Try adding the following deps:");
          errorMessage.add(Joiner.on(LINE_SEPARATOR).join(suggestions));
          errorMessage.add("");
          errorMessage.add("");
        }
        CompilerErrorEvent evt=CompilerErrorEvent.create(invokingRule,firstOrderStderr,CompilerErrorEvent.CompilerType.Java,suggestions);
        context.postEvent(evt);
      }
 else {
        ImmutableSet<String> suggestions=ImmutableSet.of();
        CompilerErrorEvent evt=CompilerErrorEvent.create(invokingRule,firstOrderStderr,CompilerErrorEvent.CompilerType.Java,suggestions);
        context.postEvent(evt);
      }
      if (!context.getVerbosity().isSilent()) {
        context.getStdOut().print(firstOrderStdout);
        context.getStdErr().println(Joiner.on("\n").join(errorMessage.build()));
      }
    }
    return declaredDepsResult;
  }
 }
