{
  final ImmutableList.Builder<String> builder=ImmutableList.builder();
  javacOptions.appendOptionsTo(new AbstractJavacOptions.OptionsConsumer(){
    @Override public void addOptionValue(    String option,    String value){
      builder.add("-" + option).add(value);
    }
    @Override public void addFlag(    String flagName){
      builder.add("-" + flagName);
    }
    @Override public void addExtras(    Collection<String> extras){
      builder.addAll(extras);
    }
  }
,filesystem.getAbsolutifier());
  if (context.getVerbosity().shouldUseVerbosityFlagIfAvailable()) {
    builder.add("-verbose");
  }
  Function<Path,Path> pathRelativizer=filesystem.getAbsolutifier();
  builder.add("-d").add(pathRelativizer.apply(outputDirectory).toString());
  if (!buildClasspathEntries.isEmpty()) {
    String classpath=Joiner.on(File.pathSeparator).join(FluentIterable.from(buildClasspathEntries).transform(pathRelativizer));
    builder.add("-classpath",classpath);
  }
 else {
    builder.add("-classpath","''");
  }
  return builder.build();
}
