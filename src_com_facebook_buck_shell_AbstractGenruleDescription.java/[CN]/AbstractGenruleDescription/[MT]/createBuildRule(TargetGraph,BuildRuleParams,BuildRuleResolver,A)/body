{
  final SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  Function<String,com.facebook.buck.rules.args.Arg> macroArgFunction=MacroArg.toMacroArgFunction(MACRO_HANDLER,params.getBuildTarget(),params.getCellRoots(),resolver);
  final Optional<com.facebook.buck.rules.args.Arg> cmd=args.cmd.transform(macroArgFunction);
  final Optional<com.facebook.buck.rules.args.Arg> bash=args.bash.transform(macroArgFunction);
  final Optional<com.facebook.buck.rules.args.Arg> cmdExe=args.cmdExe.transform(macroArgFunction);
  return createBuildRule(params.copyWithExtraDeps(new Supplier<ImmutableSortedSet<BuildRule>>(){
    @Override public ImmutableSortedSet<BuildRule> get(){
      return ImmutableSortedSet.<BuildRule>naturalOrder().addAll(pathResolver.filterBuildRuleInputs(args.srcs.get())).addAll(FluentIterable.from(Optional.presentInstances(ImmutableList.of(cmd,bash,cmdExe))).transformAndConcat(com.facebook.buck.rules.args.Arg.getDepsFunction(pathResolver))).build();
    }
  }
),resolver,args,args.srcs.get(),cmd,bash,cmdExe,args.out);
}
