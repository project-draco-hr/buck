{
  BuildRule buildRule=Preconditions.checkNotNull(getBuild().getActionGraph().findBuildRuleByTarget(buildTarget));
  if (!(buildRule instanceof MavenPublishable)) {
    printError(params,"Cannot retrieve maven coordinates for rule of type " + buildRule.getClass().getName());
    return false;
  }
  MavenPublishable publishable=(MavenPublishable)buildRule;
  Optional<String> mavenCoords=publishable.getMavenCoords();
  if (!mavenCoords.isPresent()) {
    printError(params,"No maven coordinates specified for published rule " + publishable);
    return false;
  }
  Path relativePathToOutput=publishable.getPathToOutput();
  if (relativePathToOutput == null) {
    printError(params,"No path to output present in " + publishable);
    return false;
  }
  ProjectFilesystem projectFilesystem=params.getRepository().getFilesystem();
  Path pathToOutput=projectFilesystem.resolve(relativePathToOutput);
  Publisher publisher=new Publisher(projectFilesystem,Optional.fromNullable(remoteRepo));
  try {
    publisher.publish(mavenCoords.get(),pathToOutput.toFile());
  }
 catch (  DeploymentException e) {
    params.getConsole().printBuildFailureWithoutStacktraceDontUnwrap(e);
    return false;
  }
  return true;
}
