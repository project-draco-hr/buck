def _do_discovery(self, argv, Loader=loader.TestLoader):
    self.progName = ('%s discover' % self.progName)
    import optparse
    parser = optparse.OptionParser()
    parser.prog = self.progName
    parser.add_option('-v', '--verbose', dest='verbose', default=False, help='Verbose output', action='store_true')
    if (self.failfast != False):
        parser.add_option('-f', '--failfast', dest='failfast', default=False, help='Stop on first fail or error', action='store_true')
    if ((self.catchbreak != False) and (installHandler is not None)):
        parser.add_option('-c', '--catch', dest='catchbreak', default=False, help='Catch ctrl-C and display results so far', action='store_true')
    if (self.buffer != False):
        parser.add_option('-b', '--buffer', dest='buffer', default=False, help='Buffer stdout and stderr during tests', action='store_true')
    parser.add_option('-s', '--start-directory', dest='start', default='.', help="Directory to start discovery ('.' default)")
    parser.add_option('-p', '--pattern', dest='pattern', default='test*.py', help="Pattern to match tests ('test*.py' default)")
    parser.add_option('-t', '--top-level-directory', dest='top', default=None, help='Top level directory of project (defaults to start directory)')
    (options, args) = parser.parse_args(argv)
    if (len(args) > 3):
        self.usageExit()
    for (name, value) in zip(('start', 'pattern', 'top'), args):
        setattr(options, name, value)
    if (self.failfast is None):
        self.failfast = options.failfast
    if ((self.catchbreak is None) and (installHandler is not None)):
        self.catchbreak = options.catchbreak
    if (self.buffer is None):
        self.buffer = options.buffer
    if options.verbose:
        self.verbosity = 2
    start_dir = options.start
    pattern = options.pattern
    top_level_dir = options.top
    loader = Loader()
    self.test = loader.discover(start_dir, pattern, top_level_dir)
