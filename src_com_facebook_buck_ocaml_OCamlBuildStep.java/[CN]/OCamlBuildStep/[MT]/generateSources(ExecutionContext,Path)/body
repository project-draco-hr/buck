{
  MakeCleanDirectoryStep mkDir=new MakeCleanDirectoryStep(filesystem,ocamlContext.getGeneratedSourceDir());
  StepExecutionResult mkDirExecutionResult=mkDir.execute(context);
  if (!mkDirExecutionResult.isSuccess()) {
    return mkDirExecutionResult;
  }
  for (  SourcePath yaccSource : ocamlContext.getYaccInput()) {
    SourcePath output=ocamlContext.getYaccOutput(ImmutableSet.of(yaccSource)).get(0);
    OCamlYaccStep yaccStep=new OCamlYaccStep(workingDirectory,resolver,new OCamlYaccStep.Args(ocamlContext.getYaccCompiler().get(),resolver.getAbsolutePath(output),resolver.getAbsolutePath(yaccSource)));
    StepExecutionResult yaccExecutionResult=yaccStep.execute(context);
    if (!yaccExecutionResult.isSuccess()) {
      return yaccExecutionResult;
    }
  }
  for (  SourcePath lexSource : ocamlContext.getLexInput()) {
    SourcePath output=ocamlContext.getLexOutput(ImmutableSet.of(lexSource)).get(0);
    OCamlLexStep lexStep=new OCamlLexStep(workingDirectory,resolver,new OCamlLexStep.Args(ocamlContext.getLexCompiler().get(),resolver.getAbsolutePath(output),resolver.getAbsolutePath(lexSource)));
    StepExecutionResult lexExecutionResult=lexStep.execute(context);
    if (!lexExecutionResult.isSuccess()) {
      return lexExecutionResult;
    }
  }
  return StepExecutionResult.SUCCESS;
}
