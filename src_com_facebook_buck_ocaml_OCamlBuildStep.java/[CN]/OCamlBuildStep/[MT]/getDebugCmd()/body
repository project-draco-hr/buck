{
  ImmutableList.Builder<String> debugCmd=ImmutableList.builder();
  debugCmd.add("rlwrap");
  debugCmd.add(OCAML_DEBUG.toString());
  Iterable<String> includesBytecodeFlags=FluentIterable.from(ocamlContext.getOCamlInput()).transformAndConcat(new Function<OCamlLibrary,Iterable<String>>(){
    @Override public Iterable<String> apply(    OCamlLibrary input){
      return input.getBytecodeIncludeDirs();
    }
  }
);
  debugCmd.addAll(includesBytecodeFlags);
  debugCmd.addAll(ocamlContext.getBytecodeIncludeFlags());
  debugCmd.add(ocamlContext.getBytecodeOutput().toString());
  return Shell.shellQuoteJoin(debugCmd.build()," ") + " $@";
}
