{
  try (Fixture fixture=createSynchronousExecutionFixture("pipeline_test")){
    Cell cell=fixture.getCell();
    Path rootBuildFilePath=cell.getFilesystem().resolve("BUCK");
    Path aBuildFilePath=cell.getFilesystem().resolve("a/BUCK");
    fixture.getTargetNodeParsePipeline().getAllNodes(cell,rootBuildFilePath);
    Optional<ImmutableSet<Map<String,Object>>> rootRawNodes=fixture.getRawNodeParsePipelineCache().lookupComputedNode(cell,rootBuildFilePath);
    fixture.getRawNodeParsePipelineCache().putComputedNodeIfNotPresent(cell,aBuildFilePath,rootRawNodes.get());
    expectedException.expect(IllegalStateException.class);
    expectedException.expectMessage("Raw data claims to come from [], but we tried rooting it at [a].");
    fixture.getTargetNodeParsePipeline().getNode(cell,BuildTargetFactory.newInstance(cell.getFilesystem(),"//a:lib"));
  }
 }
