{
  BuildRule libraryTwo=javaLibrary("//:libtwo","com/facebook/Bar.java");
  BuildRule parent=javaLibrary("//:parent","com/facebook/Foo.java",libraryTwo);
  BuildRule grandparent=javaLibrary("//:grandparent","com/parent/OldManRiver.java",parent);
  ImmutableMap<Path,String> jarPathToSymbols=ImmutableMap.of(projectFilesystem.resolve(parent.getPathToOutput()),"com.facebook.Foo",projectFilesystem.resolve(libraryTwo.getPathToOutput()),"com.facebook.Bar");
  ImmutableSetMultimap<JavaLibrary,Path> transitiveClasspathEntries=fromLibraries(libraryTwo,parent,grandparent);
  SuggestBuildRules.JarResolver jarResolver=createJarResolver(jarPathToSymbols);
  SuggestBuildRules suggestFn=DefaultSuggestBuildRules.createSuggestBuildFunction(jarResolver,ImmutableSet.<JavaLibrary>of(),transitiveClasspathEntries.keySet(),ImmutableList.of(libraryTwo,parent,grandparent));
  final ImmutableSet<String> suggestions=suggestFn.suggest(ImmutableSet.of("com.facebook.Bar"));
  assertEquals(ImmutableSet.of("//:libtwo"),suggestions);
}
