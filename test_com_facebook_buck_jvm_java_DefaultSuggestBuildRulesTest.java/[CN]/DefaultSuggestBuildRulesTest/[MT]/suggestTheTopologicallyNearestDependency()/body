{
  BuildRule libraryTwo=javaLibrary("//:libtwo","com/facebook/Foo.java");
  BuildRule parent=javaLibrary("//:parent","com/facebook/Foo.java",libraryTwo);
  BuildRule grandparent=javaLibrary("//:grandparent","com/parent/OldManRiver.java",parent);
  ImmutableMap<Path,String> jarPathToSymbols=ImmutableMap.of(parent.getPathToOutput(),"com.facebook.Foo",libraryTwo.getPathToOutput(),"com.facebook.Foo");
  ImmutableSetMultimap<JavaLibrary,Path> transitiveClasspathEntries=fromLibraries(libraryTwo,parent,grandparent);
  SuggestBuildRules.JarResolver jarResolver=createJarResolver(jarPathToSymbols);
  SuggestBuildRules suggestFn=DefaultSuggestBuildRules.createSuggestBuildFunction(jarResolver,ImmutableSetMultimap.<JavaLibrary,Path>of(),ImmutableSetMultimap.<JavaLibrary,Path>builder().putAll(transitiveClasspathEntries).build(),ImmutableList.of(libraryTwo,parent,grandparent));
  final ImmutableSet<String> suggestions=suggestFn.suggest(projectFilesystem,ImmutableSet.of("com.facebook.Foo"));
  assertEquals(ImmutableSet.of("//:parent"),suggestions);
}
