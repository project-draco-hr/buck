{
  VisibilityPatternParser parser=new VisibilityPatternParser();
  ImmutableSet.Builder<VisibilityPattern> builder=ImmutableSet.builder();
  CellPathResolver cellNames=new FakeCellPathResolver(filesystem);
  for (  String visibility : visibilities) {
    builder.add(parser.parse(cellNames,visibility));
  }
  Description<FakeDescription.FakeArg> description=new FakeDescription();
  FakeDescription.FakeArg arg=description.createUnpopulatedConstructorArg();
  BuildRuleFactoryParams params=new BuildRuleFactoryParams(new FakeProjectFilesystem(),buildTarget);
  return new TargetNodeFactory(new DefaultTypeCoercerFactory(ObjectMappers.newDefaultInstance())).create(Hashing.sha1().hashString(params.target.getFullyQualifiedName(),UTF_8),description,arg,params,ImmutableSet.<BuildTarget>of(),builder.build(),createCellRoots(filesystem));
}
