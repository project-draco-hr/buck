{
  BuildTarget libTarget=BuildTarget.builder(filesystem.getRootPath(),"//lib","lib").build();
  BuildTarget targetInSpecifiedDirectory=BuildTarget.builder(filesystem.getRootPath(),"//src/com/facebook","test").build();
  BuildTarget targetUnderSpecifiedDirectory=BuildTarget.builder(filesystem.getRootPath(),"//src/com/facebook/buck","test").build();
  BuildTarget targetInOtherDirectory=BuildTarget.builder(filesystem.getRootPath(),"//src/com/instagram","test").build();
  BuildTarget targetInParentDirectory=BuildTarget.builder(filesystem.getRootPath(),"//","test").build();
  TargetNode<?> directoryTargetNode=createTargetNode(libTarget,ImmutableSet.<BuildTargetPattern>of(new SubdirectoryBuildTargetPattern(filesystem.getRootPath(),filesystem.getRootPath().getFileSystem().getPath("src/com/facebook/"))));
  assertTrue(directoryTargetNode.isVisibleTo(targetInSpecifiedDirectory));
  assertTrue(directoryTargetNode.isVisibleTo(targetUnderSpecifiedDirectory));
  assertFalse(directoryTargetNode.isVisibleTo(targetInOtherDirectory));
  assertFalse(directoryTargetNode.isVisibleTo(targetInParentDirectory));
  TargetNode<?> pubicTargetNode=createTargetNode(libTarget,ImmutableSet.<BuildTargetPattern>of(new SubdirectoryBuildTargetPattern(filesystem.getRootPath(),filesystem.getRootPath().getFileSystem().getPath(""))));
  assertTrue(pubicTargetNode.isVisibleTo(targetInSpecifiedDirectory));
  assertTrue(pubicTargetNode.isVisibleTo(targetUnderSpecifiedDirectory));
  assertTrue(pubicTargetNode.isVisibleTo(targetInOtherDirectory));
  assertTrue(pubicTargetNode.isVisibleTo(targetInParentDirectory));
}
