{
  Stopwatch stopwatch=Stopwatch.createStarted();
  Console console=params.getConsole();
  try (DistBuildService service=DistBuildFactory.newDistBuildService(params)){
    Pair<BuildJobState,String> jobStateAndBuildName=getBuildJobStateAndBuildName(params.getCell().getFilesystem(),console,service);
    BuildJobState jobState=jobStateAndBuildName.getFirst();
    String buildName=jobStateAndBuildName.getSecond();
    console.getStdOut().println(String.format("BuildJob depends on a total of [%d] input deps.",jobState.getFileHashesSize()));
    try (CommandThreadManager pool=new CommandThreadManager(getClass().getName(),getConcurrencyLimit(params.getBuckConfig()))){
      DistBuildExecutor distBuildExecutor=DistBuildFactory.createDistBuildExecutor(jobState,params,pool.getExecutor(),service);
      int returnCode=distBuildExecutor.buildAndReturnExitCode();
      console.printSuccess(String.format("Successfully ran distributed build [%s] in [%d millis].",buildName,stopwatch.elapsed(TimeUnit.MILLISECONDS)));
      return returnCode;
    }
   }
 }
