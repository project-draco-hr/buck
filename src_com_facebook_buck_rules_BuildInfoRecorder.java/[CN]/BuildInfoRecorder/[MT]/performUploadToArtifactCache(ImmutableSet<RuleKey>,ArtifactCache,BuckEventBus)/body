{
  if (!artifactCache.isStoreSupported()) {
    return;
  }
  eventBus.post(ArtifactCacheEvent.started(ArtifactCacheEvent.Operation.COMPRESS,ruleKeys));
  File zip;
  ImmutableSet<Path> pathsToIncludeInZip=ImmutableSet.of();
  ImmutableMap<String,String> buildMetadata;
  try {
    pathsToIncludeInZip=getRecordedPaths();
    zip=File.createTempFile("buck_artifact_" + MoreFiles.sanitize(buildTarget.getShortName()),".zip");
    buildMetadata=getBuildMetadata();
    projectFilesystem.createZip(pathsToIncludeInZip,zip,ImmutableMap.<Path,String>of());
  }
 catch (  IOException e) {
    eventBus.post(ConsoleEvent.info("Failed to create zip for %s containing:\n%s",buildTarget,Joiner.on('\n').join(ImmutableSortedSet.copyOf(pathsToIncludeInZip))));
    e.printStackTrace();
    return;
  }
 finally {
    eventBus.post(ArtifactCacheEvent.finished(ArtifactCacheEvent.Operation.COMPRESS,ruleKeys));
  }
  artifactCache.store(ruleKeys,buildMetadata,zip);
  zip.delete();
}
