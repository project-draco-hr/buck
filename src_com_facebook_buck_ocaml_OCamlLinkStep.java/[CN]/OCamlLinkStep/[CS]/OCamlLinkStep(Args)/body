{
  this.args=args;
  ImmutableList.Builder<String> aAndOInputBuilder=ImmutableList.builder();
  ImmutableList.Builder<String> ocamlInputBuilder=ImmutableList.builder();
  for (  String linkInput : this.args.depInput) {
    if (linkInput.endsWith(OCamlCompilables.OCAML_O) || linkInput.endsWith(OCamlCompilables.OCAML_A)) {
      aAndOInputBuilder.add(linkInput);
    }
 else {
      if (!(this.args.isLibrary && linkInput.endsWith(OCamlCompilables.OCAML_CMXA))) {
        if (!this.args.isBytecode) {
          ocamlInputBuilder.add(linkInput);
        }
 else {
          String bytecodeLinkInput=linkInput.replaceAll(OCamlCompilables.OCAML_CMXA_REGEX,OCamlCompilables.OCAML_CMA);
          ocamlInputBuilder.add(bytecodeLinkInput);
        }
      }
    }
  }
  this.ocamlInput=ocamlInputBuilder.build();
  this.aAndOInput=aAndOInputBuilder.build().reverse();
}
