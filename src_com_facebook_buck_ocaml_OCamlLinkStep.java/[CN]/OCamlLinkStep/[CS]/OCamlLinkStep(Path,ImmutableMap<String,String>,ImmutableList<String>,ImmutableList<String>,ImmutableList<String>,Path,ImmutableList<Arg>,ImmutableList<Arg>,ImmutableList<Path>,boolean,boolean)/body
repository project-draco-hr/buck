{
  super(workingDirectory);
  this.environment=environment;
  this.ocamlCompilerCommandPrefix=ocamlCompilerCommandPrefix;
  this.cxxCompiler=cxxCompiler;
  this.flags=flags;
  this.output=output;
  this.depInput=depInput;
  this.cDepInput=cDepInput;
  this.input=input;
  this.isLibrary=isLibrary;
  this.isBytecode=isBytecode;
  ImmutableList.Builder<String> ocamlInputBuilder=ImmutableList.builder();
  for (  String linkInput : Arg.stringify(depInput)) {
    if (isLibrary && linkInput.endsWith(OCamlCompilables.OCAML_CMXA)) {
      continue;
    }
    if (isBytecode) {
      linkInput=linkInput.replaceAll(OCamlCompilables.OCAML_CMXA_REGEX,OCamlCompilables.OCAML_CMA);
    }
    ocamlInputBuilder.add(linkInput);
  }
  ocamlInput=ocamlInputBuilder.build();
}
