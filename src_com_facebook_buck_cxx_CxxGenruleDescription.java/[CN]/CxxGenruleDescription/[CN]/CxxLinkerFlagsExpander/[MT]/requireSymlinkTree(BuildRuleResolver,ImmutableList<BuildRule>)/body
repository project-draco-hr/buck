{
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  BuildTarget symlinkTreeTarget=CxxDescriptionEnhancer.createSharedLibrarySymlinkTreeTarget(params.getBuildTarget(),cxxPlatform.getFlavor());
  SymlinkTree symlinkTree=resolver.getRuleOptionalWithType(symlinkTreeTarget,SymlinkTree.class).orNull();
  if (symlinkTree == null) {
    try {
      symlinkTree=resolver.addToIndex(CxxDescriptionEnhancer.createSharedLibrarySymlinkTree(params,pathResolver,cxxPlatform,rules,Predicates.instanceOf(NativeLinkable.class)));
    }
 catch (    NoSuchBuildTargetException e) {
      throw new MacroException(String.format("cannot create shared library symlink tree: %s: %s",e,e.getMessage()),e);
    }
  }
  return symlinkTree;
}
