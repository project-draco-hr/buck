{
  PreprocessorFlags.Builder ppFlagsBuilder=PreprocessorFlags.builder();
  ExplicitCxxToolFlags.Builder toolFlagsBuilder=CxxToolFlags.explicitBuilder();
  toolFlagsBuilder.setPlatformFlags(CxxSourceTypes.getPlatformPreprocessFlags(cxxPlatform,sourceType));
  for (  CxxPreprocessorInput input : transitivePreprocessorInput) {
    ppFlagsBuilder.addAllIncludes(input.getIncludes());
    ppFlagsBuilder.addAllSystemIncludePaths(input.getSystemIncludeRoots());
    ppFlagsBuilder.addAllFrameworkPaths(input.getFrameworks());
    toolFlagsBuilder.addAllRuleFlags(input.getPreprocessorFlags().get(sourceType));
  }
  ppFlagsBuilder.setOtherFlags(toolFlagsBuilder.build());
  return ppFlagsBuilder.build();
}
