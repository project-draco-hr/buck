{
  ImmutableBuildContext.Builder builder=ImmutableBuildContext.builder();
  builder.setActionGraph(createMock(ActionGraph.class));
  builder.setStepRunner(createMock(StepRunner.class));
  builder.setProjectFilesystem(createMock(ProjectFilesystem.class));
  builder.setArtifactCache(createMock(ArtifactCache.class));
  builder.setJavaPackageFinder(createMock(JavaPackageFinder.class));
  builder.setEventBus(BuckEventBusFactory.newInstance());
  builder.setClock(createMock(Clock.class));
  builder.setBuildId(createMock(BuildId.class));
  AndroidPlatformTarget androidPlatformTarget=createMock(AndroidPlatformTarget.class);
  List<Path> entries=ImmutableList.of(Paths.get("add-ons/addon-google_apis-google-15/libs/effects.jar"),Paths.get("add-ons/addon-google_apis-google-15/libs/maps.jar"),Paths.get("add-ons/addon-google_apis-google-15/libs/usb.jar"));
  expect(androidPlatformTarget.getBootclasspathEntries()).andReturn(entries);
  replay(androidPlatformTarget);
  builder.setAndroidBootclasspathSupplier(BuildContext.getAndroidBootclasspathSupplierForAndroidPlatformTarget(Optional.of(androidPlatformTarget)));
  BuildContext context=builder.build();
  Supplier<String> androidBootclasspathSupplier=context.getAndroidBootclasspathSupplier();
  String androidBootclasspath=MorePaths.pathWithUnixSeparators(androidBootclasspathSupplier.get());
  assertEquals("add-ons/addon-google_apis-google-15/libs/effects.jar:" + "add-ons/addon-google_apis-google-15/libs/maps.jar:" + "add-ons/addon-google_apis-google-15/libs/usb.jar",androidBootclasspath);
  androidBootclasspathSupplier.get();
  verify(androidPlatformTarget);
}
