{
  InstallEvent.Started started=configureTestEvent(InstallEvent.started(BuildTargetFactory.newInstance("//foo:bar")));
  InstallEvent.Started startedTwo=configureTestEvent(InstallEvent.started(BuildTargetFactory.newInstance("//foo:bar")));
  InstallEvent.Started startedDifferentEvent=configureTestEvent(InstallEvent.started(BuildTargetFactory.newInstance("//foo:raz")));
  InstallEvent finished=configureTestEvent(InstallEvent.finished(started,true,Optional.<Long>absent(),Optional.<String>absent()));
  InstallEvent finishedDifferentEvent=configureTestEvent(InstallEvent.finished(startedDifferentEvent,true,Optional.<Long>absent(),Optional.<String>absent()));
  InstallEvent finishedFail=configureTestEvent(InstallEvent.finished(started,false,Optional.<Long>absent(),Optional.<String>absent()));
  assertNotEquals(started,startedTwo);
  assertNotEquals(finished,finishedDifferentEvent);
  assertNotEquals(started,finished);
  try {
    finished.equals(finishedFail);
    fail("Expected an UnsupportedOperationException.");
  }
 catch (  UnsupportedOperationException e) {
    assertThat(e.toString(),Matchers.stringContainsInOrder("conflicting","events"));
  }
  assertThat(started.isRelatedTo(finished),Matchers.is(true));
  assertThat(started.isRelatedTo(startedTwo),Matchers.is(false));
  assertNotEquals(started.getEventKey(),startedTwo.getEventKey());
  assertEquals(started.getEventKey(),finished.getEventKey());
}
