{
  ImmutableSortedSet.Builder<Path> classpath=ImmutableSortedSet.naturalOrder();
  ImmutableCollection<Path> depPaths=Classpaths.getClasspathEntries(getDeclaredDeps()).values();
  classpath.addAll(depPaths);
  readBuckClasspath(classpath);
  ImmutableSortedSet<Path> declaredClasspath=classpath.build();
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  steps.add(new MakeCleanDirectoryStep(working));
  steps.add(new MkdirStep(output.getParent()));
  steps.add(JavacStepUtil.createJavacStep(javac,working,ImmutableSet.copyOf(getResolver().getAllPaths(srcs)),ImmutableSortedSet.<Path>of(),declaredClasspath,javacOptions,getBuildTarget(),BuildDependencies.FIRST_ORDER_ONLY,Optional.<JavacStep.SuggestBuildRules>absent(),Optional.<Path>absent(),Optional.<Path>absent()));
  steps.add(new CopyResourcesStep(getResolver(),getBuildTarget(),resources,output,context.getJavaPackageFinder()));
  steps.add(new JarDirectoryStep(output,ImmutableSortedSet.<Path>naturalOrder().add(working).addAll(depPaths).build(),null,null));
  return steps.build();
}
