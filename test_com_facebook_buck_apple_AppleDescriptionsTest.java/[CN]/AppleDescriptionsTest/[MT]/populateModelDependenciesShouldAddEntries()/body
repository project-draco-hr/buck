{
  BuildTarget binaryTarget=BuildTargetFactory.newInstance("//:binary");
  BuildTarget libraryTarget=BuildTargetFactory.newInstance("//:library");
  BuildTarget resourceTarget=BuildTargetFactory.newInstance("//:resource");
  BuildTarget modelTarget=BuildTargetFactory.newInstance("//:model");
  TargetNode<AppleNativeTargetDescriptionArg> binary=AppleBinaryBuilder.createBuilder(binaryTarget).setDeps(Optional.of(ImmutableSortedSet.of(libraryTarget))).build();
  TargetNode<AppleNativeTargetDescriptionArg> library=AppleLibraryBuilder.createBuilder(libraryTarget).setDeps(Optional.of(ImmutableSortedSet.of(resourceTarget,modelTarget))).build();
  TargetNode<AppleResourceDescription.Arg> resource=AppleResourceBuilder.createBuilder(resourceTarget).build();
  TargetNode<GraphQLDataDescription.Arg> model=GraphQLDataBuilder.createBuilder(modelTarget).build();
  TargetGraph graph=TargetGraphFactory.newInstance(ImmutableSet.of(binary,library,resource,model));
  assertEquals(ImmutableMap.of(binaryTarget,ImmutableSet.of(model),libraryTarget,ImmutableSet.of(model)),AppleDescriptions.getTargetsToTransitiveModelDependencies(graph));
}
