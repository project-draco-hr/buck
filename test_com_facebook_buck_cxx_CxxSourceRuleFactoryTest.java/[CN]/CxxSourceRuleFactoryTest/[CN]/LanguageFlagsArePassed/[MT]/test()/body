{
  BuildRuleResolver buildRuleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver sourcePathResolver=new SourcePathResolver(buildRuleResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  Path scratchDir=Paths.get("scratchDir");
  CxxSourceRuleFactory cxxSourceRuleFactory=CxxSourceRuleFactory.builder().setParams(params).setResolver(buildRuleResolver).setPathResolver(sourcePathResolver).setCxxBuckConfig(CxxPlatformUtils.DEFAULT_CONFIG).setCxxPlatform(CXX_PLATFORM).setPicType(CxxSourceRuleFactory.PicType.PDC).build();
  SourcePath input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  CxxSource cxxSource=CxxSource.of(CxxSource.Type.fromExtension(MorePaths.getFileExtension(Paths.get(name))).get(),input,ImmutableList.<String>of());
  CxxPreprocessAndCompile cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(name,cxxSource);
  assertThat(cxxCompile.makeMainStep(scratchDir).getCommand(),Matchers.hasItems("-x",expected));
}
