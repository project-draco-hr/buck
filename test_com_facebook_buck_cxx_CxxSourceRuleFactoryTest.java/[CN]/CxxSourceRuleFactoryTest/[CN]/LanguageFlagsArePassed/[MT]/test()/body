{
  BuildRuleResolver buildRuleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  SourcePathResolver sourcePathResolver=new SourcePathResolver(buildRuleResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  CxxSourceRuleFactory cxxSourceRuleFactory=new CxxSourceRuleFactory(params,buildRuleResolver,sourcePathResolver,CXX_PLATFORM,ImmutableList.<CxxPreprocessorInput>of(),ImmutableList.<String>of(),Optional.<SourcePath>absent(),CxxSourceRuleFactory.PicType.PDC);
  SourcePath input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  CxxSource cxxSource=CxxSource.of(CxxSource.Type.fromExtension(MorePaths.getFileExtension(Paths.get(name))).get(),input,ImmutableList.<String>of());
  CxxPreprocessAndCompile cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(buildRuleResolver,name,cxxSource);
  assertThat(cxxCompile.makeMainStep().getCommand(),Matchers.hasItems("-x",expected));
}
