{
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  CxxSourceRuleFactory.Builder cxxSourceRuleFactoryBuilder=CxxSourceRuleFactory.builder().setParams(params).setResolver(resolver).setPathResolver(new SourcePathResolver(resolver)).setCxxPlatform(CXX_PLATFORM);
  CxxSourceRuleFactory cxxSourceRuleFactoryPDC=cxxSourceRuleFactoryBuilder.setPicType(CxxSourceRuleFactory.PicType.PDC).build();
  CxxSourceRuleFactory cxxSourceRuleFactoryPIC=cxxSourceRuleFactoryBuilder.setPicType(CxxSourceRuleFactory.PicType.PIC).build();
  String name="foo/bar.ii";
  CxxSource cxxSource=CxxSource.of(CxxSource.Type.CXX_CPP_OUTPUT,new FakeSourcePath(name),ImmutableList.<String>of());
  CxxPreprocessAndCompile noPicCompile=cxxSourceRuleFactoryPDC.requireCompileBuildRule(name,cxxSource);
  assertFalse(noPicCompile.makeMainStep().getCommand().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactoryPDC.createCompileBuildTarget(name),noPicCompile.getBuildTarget());
  CxxPreprocessAndCompile picCompile=cxxSourceRuleFactoryPIC.requireCompileBuildRule(name,cxxSource);
  assertTrue(picCompile.makeMainStep().getCommand().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactoryPIC.createCompileBuildTarget(name),picCompile.getBuildTarget());
  name="foo/bar.cpp";
  cxxSource=CxxSource.of(CxxSource.Type.CXX,new FakeSourcePath(name),ImmutableList.<String>of());
  CxxPreprocessAndCompile noPicPreprocessAndCompile=cxxSourceRuleFactoryPDC.requirePreprocessAndCompileBuildRule(name,cxxSource,CxxPreprocessMode.SEPARATE);
  assertFalse(noPicPreprocessAndCompile.makeMainStep().getCommand().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactoryPDC.createCompileBuildTarget(name),noPicPreprocessAndCompile.getBuildTarget());
  CxxPreprocessAndCompile picPreprocessAndCompile=cxxSourceRuleFactoryPIC.requirePreprocessAndCompileBuildRule(name,cxxSource,CxxPreprocessMode.SEPARATE);
  assertTrue(picPreprocessAndCompile.makeMainStep().getCommand().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactoryPIC.createCompileBuildTarget(name),picPreprocessAndCompile.getBuildTarget());
}
