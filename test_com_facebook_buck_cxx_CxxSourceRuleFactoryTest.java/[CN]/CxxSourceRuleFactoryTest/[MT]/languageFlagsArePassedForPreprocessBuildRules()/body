{
  BuildRuleResolver buildRuleResolver=new BuildRuleResolver();
  SourcePathResolver pathResolver=new SourcePathResolver(buildRuleResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  CxxSourceRuleFactory cxxSourceRuleFactory=new CxxSourceRuleFactory(params,buildRuleResolver,pathResolver,CXX_PLATFORM,CxxPreprocessorInput.EMPTY,ImmutableList.<String>of());
  String name="foo/bar.cpp";
  SourcePath input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  CxxSource cxxSource=ImmutableCxxSource.of(CxxSource.Type.CXX,input,ImmutableList.<String>of());
  CxxPreprocessAndCompile cxxPreprocess=cxxSourceRuleFactory.createPreprocessBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocess.getFlags(),Matchers.contains("-x","c++"));
  CxxPreprocessAndCompile cxxPreprocessAndCompile=cxxSourceRuleFactory.createPreprocessAndCompileBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocessAndCompile.getFlags(),Matchers.contains("-x","c++"));
  name="foo/bar.m";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=ImmutableCxxSource.of(CxxSource.Type.OBJC,input,ImmutableList.<String>of());
  cxxPreprocess=cxxSourceRuleFactory.createPreprocessBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocess.getFlags(),Matchers.contains("-x","objective-c"));
  cxxPreprocessAndCompile=cxxSourceRuleFactory.createPreprocessAndCompileBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocessAndCompile.getFlags(),Matchers.contains("-x","objective-c"));
  name="foo/bar.mm";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=ImmutableCxxSource.of(CxxSource.Type.OBJCXX,input,ImmutableList.<String>of());
  cxxPreprocess=cxxSourceRuleFactory.createPreprocessBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocess.getFlags(),Matchers.contains("-x","objective-c++"));
  cxxPreprocessAndCompile=cxxSourceRuleFactory.createPreprocessAndCompileBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocessAndCompile.getFlags(),Matchers.contains("-x","objective-c++"));
  name="foo/bar.c";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=ImmutableCxxSource.of(CxxSource.Type.C,input,ImmutableList.<String>of());
  cxxPreprocess=cxxSourceRuleFactory.createPreprocessBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocess.getFlags(),Matchers.contains("-x","c"));
  cxxPreprocessAndCompile=cxxSourceRuleFactory.createPreprocessAndCompileBuildRule(name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxPreprocessAndCompile.getFlags(),Matchers.contains("-x","c"));
}
