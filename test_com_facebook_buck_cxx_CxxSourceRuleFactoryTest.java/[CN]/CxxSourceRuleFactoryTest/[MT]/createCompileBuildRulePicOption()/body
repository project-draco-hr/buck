{
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  BuildRuleResolver resolver=new BuildRuleResolver();
  CxxSourceRuleFactory cxxSourceRuleFactory=new CxxSourceRuleFactory(params,resolver,new SourcePathResolver(resolver),CXX_PLATFORM,ImmutableList.<CxxPreprocessorInput>of(),ImmutableList.<String>of(),Optional.<SourcePath>absent());
  String name="foo/bar.ii";
  CxxSource cxxSource=CxxSource.of(CxxSource.Type.CXX_CPP_OUTPUT,new FakeSourcePath(name),ImmutableList.<String>of());
  CxxPreprocessAndCompile noPicCompile=cxxSourceRuleFactory.requireCompileBuildRule(resolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertFalse(noPicCompile.getPlatformCompilerFlags().get().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactory.createCompileBuildTarget(name,CxxSourceRuleFactory.PicType.PDC),noPicCompile.getBuildTarget());
  CxxPreprocessAndCompile picCompile=cxxSourceRuleFactory.requireCompileBuildRule(resolver,name,cxxSource,CxxSourceRuleFactory.PicType.PIC);
  assertTrue(picCompile.getPlatformCompilerFlags().get().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactory.createCompileBuildTarget(name,CxxSourceRuleFactory.PicType.PIC),picCompile.getBuildTarget());
  name="foo/bar.cpp";
  cxxSource=CxxSource.of(CxxSource.Type.CXX,new FakeSourcePath(name),ImmutableList.<String>of());
  CxxPreprocessAndCompile noPicPreprocessAndCompile=cxxSourceRuleFactory.requirePreprocessAndCompileBuildRule(resolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC,CxxPreprocessMode.SEPARATE);
  assertFalse(noPicPreprocessAndCompile.getPlatformCompilerFlags().get().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactory.createCompileBuildTarget(name,CxxSourceRuleFactory.PicType.PDC),noPicPreprocessAndCompile.getBuildTarget());
  CxxPreprocessAndCompile picPreprocessAndCompile=cxxSourceRuleFactory.requirePreprocessAndCompileBuildRule(resolver,name,cxxSource,CxxSourceRuleFactory.PicType.PIC,CxxPreprocessMode.SEPARATE);
  assertTrue(picPreprocessAndCompile.getPlatformCompilerFlags().get().contains("-fPIC"));
  assertEquals(cxxSourceRuleFactory.createCompileBuildTarget(name,CxxSourceRuleFactory.PicType.PIC),picPreprocessAndCompile.getBuildTarget());
}
