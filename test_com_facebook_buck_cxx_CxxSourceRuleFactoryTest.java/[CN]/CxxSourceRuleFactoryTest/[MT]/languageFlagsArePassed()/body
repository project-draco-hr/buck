{
  BuildRuleResolver buildRuleResolver=new BuildRuleResolver();
  SourcePathResolver sourcePathResolver=new SourcePathResolver(buildRuleResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  String name="foo/bar.ii";
  SourcePath input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  CxxSource cxxSource=CxxSource.of(CxxSource.Type.CXX_CPP_OUTPUT,input,ImmutableList.<String>of());
  CxxSourceRuleFactory cxxSourceRuleFactory=new CxxSourceRuleFactory(params,buildRuleResolver,sourcePathResolver,CXX_PLATFORM,ImmutableList.<CxxPreprocessorInput>of(),ImmutableList.<String>of());
  CxxPreprocessAndCompile cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(buildRuleResolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxCompile.makeMainStep().getCommand(),Matchers.hasItems("-x","c++-cpp-output"));
  name="foo/bar.mi";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=CxxSource.of(CxxSource.Type.OBJC_CPP_OUTPUT,input,ImmutableList.<String>of());
  cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(buildRuleResolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxCompile.makeMainStep().getCommand(),Matchers.hasItems("-x","objective-c-cpp-output"));
  name="foo/bar.mii";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=CxxSource.of(CxxSource.Type.OBJCXX_CPP_OUTPUT,input,ImmutableList.<String>of());
  cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(buildRuleResolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxCompile.makeMainStep().getCommand(),Matchers.hasItems("-x","objective-c++-cpp-output"));
  name="foo/bar.i";
  input=new PathSourcePath(PROJECT_FILESYSTEM,target.getBasePath().resolve(name));
  cxxSource=CxxSource.of(CxxSource.Type.C_CPP_OUTPUT,input,ImmutableList.<String>of());
  cxxCompile=cxxSourceRuleFactory.createCompileBuildRule(buildRuleResolver,name,cxxSource,CxxSourceRuleFactory.PicType.PDC);
  assertThat(cxxCompile.makeMainStep().getCommand(),Matchers.hasItems("-x","cpp-output"));
}
