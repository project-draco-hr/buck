{
  BuildRuleResolver buildRuleResolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  ProjectFilesystem filesystem=new AllExistingProjectFilesystem();
  BuckConfig buckConfig=FakeBuckConfig.builder().setFilesystem(filesystem).build();
  CxxPlatform platform=DefaultCxxPlatforms.build(new CxxBuckConfig(buckConfig));
  String prefixHeaderName="test.pch";
  SourcePath prefixHeaderSourcePath=new FakeSourcePath(prefixHeaderName);
  CxxSourceRuleFactory cxxSourceRuleFactory=new CxxSourceRuleFactory(params,buildRuleResolver,new SourcePathResolver(buildRuleResolver),platform,ImmutableList.<CxxPreprocessorInput>of(),ImmutableList.<String>of(),Optional.<SourcePath>of(prefixHeaderSourcePath));
  String objcSourceName="test.m";
  CxxSource objcSource=CxxSource.of(CxxSource.Type.OBJC,new FakeSourcePath(objcSourceName),ImmutableList.<String>of());
  CxxPreprocessAndCompile objcPreprocessAndCompile=cxxSourceRuleFactory.requirePreprocessAndCompileBuildRule(buildRuleResolver,objcSourceName,objcSource,CxxSourceRuleFactory.PicType.PDC,CxxPreprocessMode.SEPARATE);
  ImmutableList<String> explicitPrefixHeaderRelatedFlags=ImmutableList.of("-include",prefixHeaderName);
  CxxPreprocessAndCompileStep step=objcPreprocessAndCompile.makeMainStep();
  assertContains(step.getCommand(),explicitPrefixHeaderRelatedFlags);
}
