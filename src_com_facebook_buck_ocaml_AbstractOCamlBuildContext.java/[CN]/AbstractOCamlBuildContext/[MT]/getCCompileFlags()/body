{
  ImmutableList.Builder<String> compileFlags=ImmutableList.builder();
  CxxPreprocessorInput cxxPreprocessorInput=getCxxPreprocessorInput();
  compileFlags.addAll(MoreIterables.zipAndConcat(Iterables.cycle("-ccopt"),CxxHeaders.getArgs(cxxPreprocessorInput.getIncludes(),getSourcePathResolver(),Optional.<Function<Path,Path>>absent())));
  for (  Path includes : cxxPreprocessorInput.getSystemIncludeRoots()) {
    compileFlags.add("-ccopt","-isystem" + includes.toString());
  }
  for (  String cFlag : cxxPreprocessorInput.getPreprocessorFlags().get(CxxSource.Type.C)) {
    compileFlags.add("-ccopt",cFlag);
  }
  return compileFlags.build();
}
