{
  return FluentIterable.from(getInput()).filter(OCamlUtil.sourcePathExt(getSourcePathResolver(),OCamlCompilables.OCAML_ML,OCamlCompilables.OCAML_RE,OCamlCompilables.OCAML_MLI,OCamlCompilables.OCAML_REI)).append(getLexOutput(getLexInput())).append(getYaccOutput(getYaccInput())).toSet().asList();
}
