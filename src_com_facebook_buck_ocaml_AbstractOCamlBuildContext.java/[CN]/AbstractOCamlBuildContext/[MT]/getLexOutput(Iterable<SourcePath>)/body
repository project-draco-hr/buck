{
  return FluentIterable.from(lexInputs).transform(new Function<SourcePath,SourcePath>(){
    @Override public SourcePath apply(    SourcePath lexInput){
      Path fileName=getSourcePathResolver().getAbsolutePath(lexInput).getFileName();
      Path out=getGeneratedSourceDir().resolve(fileName.toString().replaceFirst(OCamlCompilables.OCAML_MLL_REGEX,OCamlCompilables.OCAML_ML));
      return new PathSourcePath(getProjectFilesystem(),out);
    }
  }
);
}
