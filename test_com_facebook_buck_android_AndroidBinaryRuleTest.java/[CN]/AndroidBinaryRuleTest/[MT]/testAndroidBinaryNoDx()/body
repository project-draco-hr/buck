{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  JavaLibraryRule libraryOne=createAndroidLibraryRule("//java/src/com/facebook/base:libraryOne",ruleResolver,null,null,null);
  JavaLibraryRule libraryTwo=createAndroidLibraryRule("//java/src/com/facebook/base:libraryTwo",ruleResolver,null,null,null);
  BuildTarget binaryBuildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/base:apk");
  AndroidBinaryRule androidBinary=ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(binaryBuildTarget).addClasspathDep(libraryOne.getBuildTarget()).addClasspathDep(libraryTwo.getBuildTarget()).addBuildRuleToExcludeFromDex(BuildTargetFactory.newInstance("//java/src/com/facebook/base:libraryTwo")).setManifest(new FileSourcePath("java/src/com/facebook/base/AndroidManifest.xml")).setTarget("Google Inc.:Google APIs:16").setKeystore(addKeystoreRule(ruleResolver)).setPackageType("debug"));
  AndroidTransitiveDependencies transitiveDependencies=androidBinary.findTransitiveDependencies();
  AndroidDexTransitiveDependencies dexTransitiveDependencies=androidBinary.findDexTransitiveDependencies();
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  BuildContext context=createMock(BuildContext.class);
  replay(context);
  androidBinary.addProguardCommands(context,dexTransitiveDependencies.classpathEntriesToDex,transitiveDependencies.proguardConfigs,commands,ImmutableSet.<String>of());
  verify(context);
  MakeCleanDirectoryStep expectedClean=new MakeCleanDirectoryStep("buck-out/gen/java/src/com/facebook/base/.proguard/apk");
  GenProGuardConfigStep expectedGenProguard=new GenProGuardConfigStep("buck-out/bin/java/src/com/facebook/base/__manifest_apk#aapt_package__/AndroidManifest.xml",ImmutableSet.<String>of(),"buck-out/gen/java/src/com/facebook/base/.proguard/apk/proguard.txt");
  Step expectedObfuscation=ProGuardObfuscateStep.create("buck-out/gen/java/src/com/facebook/base/.proguard/apk/proguard.txt",ImmutableSet.<String>of(),false,ImmutableMap.of("buck-out/gen/java/src/com/facebook/base/lib__libraryOne__output/libraryOne.jar","buck-out/gen/java/src/com/facebook/base/.proguard/apk/buck-out/gen/java/src/com/" + "facebook/base/lib__libraryOne__output/libraryOne-obfuscated.jar"),ImmutableSet.of("buck-out/gen/java/src/com/facebook/base/lib__libraryTwo__output/libraryTwo.jar"),"buck-out/gen/java/src/com/facebook/base/.proguard/apk");
  assertEquals(ImmutableList.of(expectedClean,expectedGenProguard,expectedObfuscation),commands.build());
}
