{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  JavaLibraryRule libraryOne=createAndroidLibraryRule("//java/src/com/facebook/base:libraryOne",ruleResolver,null,null,null);
  JavaLibraryRule libraryTwo=createAndroidLibraryRule("//java/src/com/facebook/base:libraryTwo",ruleResolver,null,"java/src/com/facebook/base/assets2",null);
  AndroidResourceRule resourceOne=(AndroidResourceRule)ruleResolver.get(BuildTargetFactory.newInstance("//java/src/com/facebook/base:libraryTwo_resources"));
  BuildTarget binaryBuildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/base:apk");
  AndroidBinaryRule androidBinary=ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(binaryBuildTarget).addClasspathDep(libraryOne.getBuildTarget()).addClasspathDep(libraryTwo.getBuildTarget()).setManifest("java/src/com/facebook/base/AndroidManifest.xml").setTarget("Google Inc.:Google APIs:16").setKeystore(addKeystoreRule(ruleResolver)).setPackageType("debug"));
  Set<String> assetsDirectories=ImmutableSet.of(resourceOne.getAssets());
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  DirectoryTraverser traverser=new DirectoryTraverser(){
    @Override public void traverse(    DirectoryTraversal traversal) throws IOException {
      String rootPath=MorePaths.newPathInstance(traversal.getRoot()).toString();
      if ("java/src/com/facebook/base/assets2".equals(rootPath)) {
        traversal.visit(new File("java/src/com/facebook/base/assets2","fonts/Theinhardt-Medium.otf"),"fonts/Theinhardt-Medium.otf");
        traversal.visit(new File("java/src/com/facebook/base/assets2","fonts/Theinhardt-Regular.otf"),"fonts/Theinhardt-Regular.otf");
      }
 else {
        throw new RuntimeException("Unexpected path: " + rootPath);
      }
    }
  }
;
  Optional<String> allAssetsDirectory=androidBinary.createAllAssetsDirectory(assetsDirectories,commands,traverser);
  assertTrue(allAssetsDirectory.isPresent());
  assertEquals("Even though there is only one assets directory, the one in " + BIN_DIR + " should be used.",androidBinary.getPathToAllAssetsDirectory(),allAssetsDirectory.get());
}
