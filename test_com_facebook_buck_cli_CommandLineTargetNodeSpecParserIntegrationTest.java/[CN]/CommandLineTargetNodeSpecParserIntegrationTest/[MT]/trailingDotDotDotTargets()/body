{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"command_line_parser",tmp);
  workspace.setUp();
  ProjectWorkspace.ProcessResult result=workspace.runBuckCommand("targets","//simple/...").assertSuccess();
  assertEquals(ImmutableSet.of("//simple:simple","//simple/foo:foo","//simple/bar:bar"),ImmutableSet.copyOf(Splitter.on('\n').omitEmptyStrings().split(result.getStdout())));
  try {
    workspace.runBuckCommand("targets","//simple:...");
  }
 catch (  HumanReadableException e) {
    assertThat(e.getMessage(),Matchers.containsString("No rule found when resolving target //simple:... in build file //simple/BUCK"));
  }
  try {
    workspace.runBuckCommand("targets","//simple/....");
  }
 catch (  HumanReadableException e) {
    assertThat(e.getMessage(),Matchers.containsString("No build file at simple/..../BUCK when resolving target //simple/....:....."));
  }
  try {
    workspace.runBuckCommand("targets","//simple/.....");
  }
 catch (  HumanReadableException e) {
    assertThat(e.getMessage(),Matchers.containsString("No build file at simple/...../BUCK when resolving target //simple/.....:......"));
  }
  try {
    workspace.runBuckCommand("targets","//simple/......");
  }
 catch (  HumanReadableException e) {
    assertThat(e.getMessage(),Matchers.containsString("No build file at simple/....../BUCK when resolving target //simple/......:......."));
  }
}
