{
  Preconditions.checkState(!closed.get());
  final ListenableFuture<P> obtainedParser=obtainParser(cell);
  ListenableFuture<T> futureWork=Futures.transformAsync(obtainedParser,new AsyncFunction<P,T>(){
    @Override public ListenableFuture<T> apply(    P input) throws Exception {
      try {
        return withParser.apply(input);
      }
  finally {
        returnParser(cell,input);
      }
    }
  }
,executorService);
  return futureWork;
}
