{
  Preconditions.checkState(!closing.get());
  closing.set(true);
  ListenableFuture<List<Object>> closeFuture;
synchronized (pendingLeases) {
    closeFuture=Futures.successfulAsList(pendingLeases);
  }
  closeFuture.get();
  for (  Map.Entry<Cell,Deque<SettableFuture<P>>> cellDequeEntry : parserRequests.entrySet()) {
    Preconditions.checkState(cellDequeEntry.getValue().isEmpty(),"Error shutting down ParserLeaseVendor: enqueued parser requests would cause deadlock.");
  }
  for (  P parser : createdParsers.values()) {
    parser.close();
  }
}
