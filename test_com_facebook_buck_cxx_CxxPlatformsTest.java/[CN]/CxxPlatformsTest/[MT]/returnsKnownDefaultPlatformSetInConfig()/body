{
  ImmutableMap<String,ImmutableMap<String,String>> sections=ImmutableMap.of("cxx",ImmutableMap.of("default_platform","borland_cxx_452"));
  CompilerProvider compiler=new CompilerProvider(Paths.get("borland"),Optional.of(CxxToolProvider.Type.DEFAULT));
  PreprocessorProvider preprocessor=new PreprocessorProvider(Paths.get("borland"),Optional.of(CxxToolProvider.Type.DEFAULT));
  CxxPlatform borlandCxx452Platform=CxxPlatform.builder().setFlavor(ImmutableFlavor.of("borland_cxx_452")).setAs(compiler).setAspp(preprocessor).setCc(compiler).setCpp(preprocessor).setCxx(compiler).setCxxpp(preprocessor).setLd(new GnuLinker(new HashedFileTool(Paths.get("borland")))).setStrip(new HashedFileTool(Paths.get("borland"))).setSymbolNameTool(new PosixNmSymbolNameTool(new HashedFileTool(Paths.get("borland")))).setAr(new GnuArchiver(new HashedFileTool(Paths.get("borland")))).setRanlib(new HashedFileTool(Paths.get("borland"))).setSharedLibraryExtension(".so").setSharedLibraryVersionedExtensionFormat(".so.%s").setDebugPathSanitizer(CxxPlatforms.DEFAULT_DEBUG_PATH_SANITIZER).build();
  BuckConfig buckConfig=FakeBuckConfig.builder().setSections(sections).build();
  assertThat(CxxPlatforms.getConfigDefaultCxxPlatform(new CxxBuckConfig(buckConfig),ImmutableMap.of(borlandCxx452Platform.getFlavor(),borlandCxx452Platform),CxxPlatformUtils.DEFAULT_PLATFORM),equalTo(borlandCxx452Platform));
}
