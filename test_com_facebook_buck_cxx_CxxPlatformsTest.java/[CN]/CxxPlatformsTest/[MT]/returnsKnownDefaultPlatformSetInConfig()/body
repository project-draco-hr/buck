{
  ImmutableMap<String,ImmutableMap<String,String>> sections=ImmutableMap.of("cxx",ImmutableMap.of("default_platform","borland_cxx_452"));
  CxxPlatform borlandCxx452Platform=CxxPlatform.builder().setFlavor(ImmutableFlavor.of("borland_cxx_452")).setAs(new DefaultCompiler(new HashedFileTool(Paths.get("borland")))).setAspp(new DefaultPreprocessor(new HashedFileTool(Paths.get("borland")))).setCcSupplier(Suppliers.<Compiler>ofInstance(new DefaultCompiler(new HashedFileTool(Paths.get("borland"))))).setCppSupplier(Suppliers.<Preprocessor>ofInstance(new DefaultPreprocessor(new HashedFileTool(Paths.get("borland"))))).setCxxSupplier(Suppliers.<Compiler>ofInstance(new DefaultCompiler(new HashedFileTool(Paths.get("borland"))))).setCxxppSupplier(Suppliers.<Preprocessor>ofInstance(new DefaultPreprocessor(new HashedFileTool(Paths.get("borland"))))).setLd(new GnuLinker(new HashedFileTool(Paths.get("borland")))).setStrip(new HashedFileTool(Paths.get("borland"))).setSymbolNameTool(new PosixNmSymbolNameTool(new HashedFileTool(Paths.get("borland")))).setAr(new GnuArchiver(new HashedFileTool(Paths.get("borland")))).setRanlib(new HashedFileTool(Paths.get("borland"))).setSharedLibraryExtension(".so").setSharedLibraryVersionedExtensionFormat(".so.%s").setDebugPathSanitizer(CxxPlatforms.DEFAULT_DEBUG_PATH_SANITIZER).build();
  BuckConfig buckConfig=FakeBuckConfig.builder().setSections(sections).build();
  assertThat(CxxPlatforms.getConfigDefaultCxxPlatform(new CxxBuckConfig(buckConfig),ImmutableMap.of(borlandCxx452Platform.getFlavor(),borlandCxx452Platform),CxxPlatformUtils.DEFAULT_PLATFORM),equalTo(borlandCxx452Platform));
}
