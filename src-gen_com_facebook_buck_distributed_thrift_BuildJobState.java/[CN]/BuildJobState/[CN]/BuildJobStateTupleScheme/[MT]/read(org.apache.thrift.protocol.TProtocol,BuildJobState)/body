{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map63=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.cells=new HashMap<Integer,BuildJobStateCell>(2 * _map63.size);
      int _key64;
      BuildJobStateCell _val65;
      for (int _i66=0; _i66 < _map63.size; ++_i66) {
        _key64=iprot.readI32();
        _val65=new BuildJobStateCell();
        _val65.read(iprot);
        struct.cells.put(_key64,_val65);
      }
    }
    struct.setCellsIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list67=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.fileHashes=new ArrayList<BuildJobStateFileHashes>(_list67.size);
      BuildJobStateFileHashes _elem68;
      for (int _i69=0; _i69 < _list67.size; ++_i69) {
        _elem68=new BuildJobStateFileHashes();
        _elem68.read(iprot);
        struct.fileHashes.add(_elem68);
      }
    }
    struct.setFileHashesIsSet(true);
  }
  if (incoming.get(2)) {
    struct.targetGraph=new BuildJobStateTargetGraph();
    struct.targetGraph.read(iprot);
    struct.setTargetGraphIsSet(true);
  }
}
