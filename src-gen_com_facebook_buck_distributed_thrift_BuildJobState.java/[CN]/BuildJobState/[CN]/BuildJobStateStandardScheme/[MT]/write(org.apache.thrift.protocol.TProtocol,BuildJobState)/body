{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.cells != null) {
    if (struct.isSetCells()) {
      oprot.writeFieldBegin(CELLS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.STRUCT,struct.cells.size()));
        for (        Map.Entry<Integer,BuildJobStateCell> _iter59 : struct.cells.entrySet()) {
          oprot.writeI32(_iter59.getKey());
          _iter59.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.fileHashes != null) {
    if (struct.isSetFileHashes()) {
      oprot.writeFieldBegin(FILE_HASHES_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.fileHashes.size()));
        for (        BuildJobStateFileHashes _iter60 : struct.fileHashes) {
          _iter60.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.targetGraph != null) {
    if (struct.isSetTargetGraph()) {
      oprot.writeFieldBegin(TARGET_GRAPH_FIELD_DESC);
      struct.targetGraph.write(oprot);
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
