{
  this.modelBuilder=new DefaultModelBuilderFactory().newInstance().setProfileSelector(new DefaultProfileSelector()).setPluginConfigurationExpander(new DefaultPluginConfigurationExpander()).setPluginManagementInjector(new DefaultPluginManagementInjector()).setDependencyManagementImporter(new DefaultDependencyManagementImporter()).setDependencyManagementInjector(new DefaultDependencyManagementInjector());
  ServiceLocator locator=AetherUtil.initServiceLocator();
  this.repoSys=locator.getService(RepositorySystem.class);
  this.localRepo=new LocalRepository(Paths.get(config.mavenLocalRepo).toFile());
  this.session=newSession(repoSys,localRepo);
  this.buckRepoRoot=Paths.get(config.buckRepoRoot);
  this.buckThirdPartyRelativePath=Paths.get(config.thirdParty);
  this.visibility=config.visibility;
  this.repos=FluentIterable.from(config.repositories).transform(new Function<ArtifactConfig.Repository,RemoteRepository>(){
    @Override public RemoteRepository apply(    ArtifactConfig.Repository input){
      return AetherUtil.toRemoteRepository(input);
    }
  }
).toList();
}
