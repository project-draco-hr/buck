def _prepare_bootstrap(self):
    '\n      Write enough of distribute into the .pex .bootstrap directory so that\n      we can be fully self-contained.\n    '
    wrote_setuptools = False
    setuptools = DistributionHelper.distribution_from_path(self._interpreter.get_location('setuptools'), name='setuptools')
    if (setuptools is None):
        raise RuntimeError('Failed to find setuptools while building pex!')
    for (fn, content_stream) in DistributionHelper.walk_data(setuptools):
        if ((fn == 'pkg_resources.py') or fn.startswith('_markerlib')):
            self._chroot.write(content_stream.read(), os.path.join(self.BOOTSTRAP_DIR, fn), 'resource')
            wrote_setuptools = True
    if (not wrote_setuptools):
        raise RuntimeError('Failed to extract pkg_resources from setuptools.  Perhaps pants was linked with an incompatible setuptools.')
    libraries = ('twitter.common.python', 'twitter.common.python.http')
    for name in libraries:
        dirname = name.replace('twitter.common.python', '_twitter_common_python').replace('.', '/')
        provider = get_provider(name)
        if (not isinstance(provider, DefaultProvider)):
            mod = __import__(name, fromlist=['wutttt'])
            provider = ZipProvider(mod)
        for fn in provider.resource_listdir(''):
            if fn.endswith('.py'):
                self._chroot.write(provider.get_resource_string(name, fn), os.path.join(self.BOOTSTRAP_DIR, dirname, fn), 'resource')
