{
  Matcher matcher=BUILD_TARGET_PATTERN.matcher(cmd);
  StringBuffer buffer=new StringBuffer();
  Map<String,BuildRule> fullyQualifiedNameToBuildRule=null;
  while (matcher.find()) {
    if (fullyQualifiedNameToBuildRule == null) {
      fullyQualifiedNameToBuildRule=Maps.newHashMap();
      for (      BuildRule dep : deps) {
        fullyQualifiedNameToBuildRule.put(dep.getFullyQualifiedName(),dep);
      }
    }
    String buildTarget=matcher.group(3);
    String prefix=matcher.group(4);
    if (":".equals(prefix)) {
      buildTarget=String.format("//%s%s",contextBasePath,buildTarget);
    }
    BuildRule matchingRule=fullyQualifiedNameToBuildRule.get(buildTarget);
    if (matchingRule == null) {
      throw new RuntimeException(String.format("No dep named %s in %s",buildTarget,cmd));
    }
    if (!(matchingRule instanceof BinaryBuildRule)) {
      throw new RuntimeException(String.format("%s must correspond to a binary rule in %s",buildTarget,cmd));
    }
    BinaryBuildRule binaryBuildRule=(BinaryBuildRule)matchingRule;
    String replacement=matcher.group(1) + binaryBuildRule.getExecutableCommand();
    matcher.appendReplacement(buffer,replacement);
  }
  matcher.appendTail(buffer);
  return buffer.toString();
}
