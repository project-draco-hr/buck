{
  String sharedLibraryExtension;
switch (platform) {
case LINUX:
    sharedLibraryExtension="so";
  break;
case WINDOWS:
sharedLibraryExtension="dll";
break;
case MACOS:
sharedLibraryExtension="dylib";
break;
default :
throw new RuntimeException(String.format("Unsupported platform: %s",platform));
}
return CxxPlatforms.build(FLAVOR,platform,config,new HashedFileTool(DEFAULT_AS),new HashedFileTool(DEFAULT_ASPP),new DefaultCompiler(new HashedFileTool(DEFAULT_CC)),new DefaultCompiler(new HashedFileTool(DEFAULT_CXX)),new HashedFileTool(DEFAULT_CPP),new HashedFileTool(DEFAULT_CXXPP),new HashedFileTool(DEFAULT_CXXLD),Optional.<CxxPlatform.LinkerType>absent(),new HashedFileTool(DEFAULT_LD),ImmutableList.<String>of(),new HashedFileTool(DEFAULT_STRIP),new GnuArchiver(new HashedFileTool(DEFAULT_AR)),ImmutableList.<String>of(),ImmutableList.<String>of(),Optional.<Tool>of(new HashedFileTool(DEFAULT_LEX)),Optional.<Tool>of(new HashedFileTool(DEFAULT_YACC)),sharedLibraryExtension,Optional.<DebugPathSanitizer>absent());
}
