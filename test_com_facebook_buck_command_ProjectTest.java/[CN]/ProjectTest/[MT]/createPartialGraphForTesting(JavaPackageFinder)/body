{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//buck-out/android/com/facebook:R")).addSrc("buck-out/android/com/facebook/R.java").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  guava=ruleResolver.buildAndAddToIndex(PrebuiltJarRule.newPrebuiltJarRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//third_party/guava:guava")).setBinaryJar(PATH_TO_GUAVA_JAR).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/base:res")).setRes("android_res/base/res").setRDotJavaPackage("com.facebook").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ProjectConfigRule projectConfigRuleForResource=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/base:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//android_res/base:res"))).setSrcRoots(ImmutableList.of("res")));
  BuildTarget grandchild=BuildTargetFactory.newInstance("//java/src/com/facebook/grandchild:grandchild");
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(grandchild).addSrc("Grandchild.java").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook/child:child")).addSrc("Child.java").addDep(grandchild).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:exportlib")).addSrc("ExportLib.java").addDep(BuildTargetFactory.newInstance("//third_party/guava:guava")).setExportDeps(true).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ruleResolver.buildAndAddToIndex(AndroidLibraryRule.newAndroidLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base")).addSrc("Base.java").addDep(BuildTargetFactory.newInstance("//buck-out/android/com/facebook:R")).addDep(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:exportlib")).addDep(BuildTargetFactory.newInstance("//java/src/com/facebook/child:child")).addDep(BuildTargetFactory.newInstance("//android_res/base:res")).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ProjectConfigRule projectConfigRuleForLibrary=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook/base:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base"))).setSrcRoots(ImmutableList.of("src","src-gen")));
  ProjectConfigRule projectConfigRuleForExportLibrary=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:exportlib"))).setSrcRoots(ImmutableList.of("src")));
  BuildTarget keystoreTarget=BuildTargetFactory.newInstance("//keystore:debug");
  ruleResolver.buildAndAddToIndex(Keystore.newKeystoreBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(keystoreTarget).setStore("keystore/debug.keystore").setProperties("keystore/debug.keystore.properties"));
  ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//foo:app")).addDep(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base")).setManifest("foo/AndroidManifest.xml").setTarget("Google Inc.:Google APIs:16").setKeystore(keystoreTarget).addBuildRuleToExcludeFromDex(BuildTargetFactory.newInstance("//third_party/guava:guava")));
  ProjectConfigRule projectConfigRuleUsingNoDx=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//foo:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//foo:app"))));
  ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//bar:app")).addDep(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base")).setManifest("foo/AndroidManifest.xml").setTarget("Google Inc.:Google APIs:16").setKeystore(keystoreTarget));
  ProjectConfigRule projectConfigRule=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//bar:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//bar:app"))));
  return getModulesForPartialGraph(ruleResolver,ImmutableList.of(projectConfigRuleForExportLibrary,projectConfigRuleForLibrary,projectConfigRuleForResource,projectConfigRuleUsingNoDx,projectConfigRule),javaPackageFinder);
}
