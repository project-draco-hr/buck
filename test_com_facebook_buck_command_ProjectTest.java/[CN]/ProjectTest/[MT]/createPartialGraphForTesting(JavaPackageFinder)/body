{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildRule rRule=JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//buck-out/android/com/facebook:R")).addSrc(Paths.get("buck-out/android/com/facebook/R.java")).build(ruleResolver);
  guava=PrebuiltJarBuilder.createBuilder(BuildTargetFactory.newInstance("//third_party/guava:guava")).setBinaryJar(PATH_TO_GUAVA_JAR).build(ruleResolver);
  BuildRule androidResRule=ruleResolver.addToIndex(AndroidResourceRuleBuilder.newBuilder().setBuildTarget(BuildTargetFactory.newInstance("//android_res/base:res")).setRes(Paths.get("android_res/base/res")).setRDotJavaPackage("com.facebook").build());
  BuildRule projectConfigForResource=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//android_res/base:project_config")).setSrcRule(androidResRule).setSrcRoots(ImmutableList.of("res")).build(ruleResolver);
  BuildTarget grandchildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/grandchild:grandchild");
  BuildRule grandchild=JavaLibraryBuilder.createBuilder(grandchildTarget).addSrc(Paths.get("Grandchild.java")).build(ruleResolver);
  BuildRule childRule=JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/child:child")).addSrc(Paths.get("Child.java")).addDep(grandchild).build(ruleResolver);
  BuildRule exportLib=JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:exportlib")).addSrc(Paths.get("ExportLib.java")).addDep(guava).addExportedDep(guava).build(ruleResolver);
  BuildRule baseRule=AndroidLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/base:base")).addSrc(Paths.get("Base.java")).addDep(rRule).addDep(exportLib).addDep(childRule).addDep(androidResRule).build(ruleResolver);
  BuildRule projectConfigForLibrary=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/base:project_config")).setSrcRule(baseRule).setSrcRoots(ImmutableList.of("src","src-gen")).build(ruleResolver);
  BuildRule projectConfigForExportLibrary=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//java/src/com/facebook/exportlib:project_config")).setSrcRule(exportLib).setSrcRoots(ImmutableList.of("src")).build(ruleResolver);
  BuildTarget keystoreTarget=BuildTargetFactory.newInstance("//keystore:debug");
  Keystore keystore=(Keystore)KeystoreBuilder.createBuilder(keystoreTarget).setStore(Paths.get("keystore/debug.keystore")).setProperties(Paths.get("keystore/debug.keystore.properties")).build(ruleResolver).getBuildable();
  BuildRule androidBinaryRule=AndroidBinaryBuilder.newBuilder().setBuildTarget(BuildTargetFactory.newInstance("//foo:app")).setOriginalDeps(ImmutableSortedSet.of(baseRule)).setManifest(new FileSourcePath("foo/AndroidManifest.xml")).setTarget("Google Inc.:Google APIs:16").setKeystore(keystore).setBuildTargetsToExcludeFromDex(ImmutableSet.of(BuildTargetFactory.newInstance("//third_party/guava:guava"))).build(ruleResolver);
  androidBinaryRule.getBuildable().getEnhancedDeps(ruleResolver);
  BuildRule projectConfigUsingNoDx=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//foo:project_config")).setSrcRule(androidBinaryRule).build(ruleResolver);
  BuildRule barAppBuildRule=AndroidBinaryBuilder.newBuilder().setBuildTarget(BuildTargetFactory.newInstance("//bar:app")).setOriginalDeps(ImmutableSortedSet.of(baseRule)).setManifest(new FileSourcePath("foo/AndroidManifest.xml")).setTarget("Google Inc.:Google APIs:16").setKeystore(keystore).build(ruleResolver);
  barAppBuildRule.getBuildable().getEnhancedDeps(ruleResolver);
  BuildRule projectConfig=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//bar:project_config")).setSrcRule(barAppBuildRule).build(ruleResolver);
  return getModulesForPartialGraph(ruleResolver,ImmutableList.of(projectConfigForExportLibrary,projectConfigForLibrary,projectConfigForResource,projectConfigUsingNoDx,projectConfig),javaPackageFinder);
}
