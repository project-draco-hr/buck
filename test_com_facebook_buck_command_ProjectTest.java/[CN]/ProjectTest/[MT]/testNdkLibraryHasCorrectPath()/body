{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildTarget fooJni=BuildTargetFactory.newInstance("//third_party/java/foo/jni:foo-jni");
  BuildRule ndkLibrary=NdkLibraryBuilder.createNdkLibrary(fooJni).addSrc(Paths.get("Android.mk")).build();
  ruleResolver.addToIndex(ndkLibrary.getBuildTarget(),ndkLibrary);
  BuildRule ndkProjectConfig=ProjectConfigBuilder.newProjectConfigRuleBuilder(BuildTargetFactory.newInstance("//third_party/java/foo/jni:project_config")).setSrcRule(ndkLibrary).build(ruleResolver);
  ProjectWithModules projectWithModules=getModulesForPartialGraph(ruleResolver,ImmutableList.of(ndkProjectConfig),null);
  List<Module> modules=projectWithModules.modules;
  assertEquals("Should be one module for the ndk_library.",1,modules.size());
  Module androidLibraryModule=Iterables.getOnlyElement(modules);
  assertListEquals(ImmutableList.of(DependentModule.newSourceFolder(),DependentModule.newInheritedJdk()),androidLibraryModule.dependencies);
  assertEquals(String.format("../../../../%s",((NdkLibrary)ndkLibrary.getBuildable()).getLibraryPath()),androidLibraryModule.nativeLibs);
}
