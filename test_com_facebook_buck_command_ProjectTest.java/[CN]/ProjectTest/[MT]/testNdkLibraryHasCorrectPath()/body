{
  BuildRuleBuilderParams buildRuleBuilderParams=new BuildRuleBuilderParams();
  NdkLibraryRule ndkLibrary=buildRuleBuilderParams.buildAndAddToIndex(NdkLibraryRule.newNdkLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//third_party/java/foo/jni:foo-jni")).addSrc("Android.mk").addVisibilityPattern(new SingletonBuildTargetPattern("//third_party/java/foo:foo")));
  ProjectConfigRule ndkProjectConfig=buildRuleBuilderParams.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//third_party/java/foo/jni:project_config")).setSrcTarget(Optional.of("//third_party/java/foo/jni:foo-jni")));
  ProjectWithModules projectWithModules=getModulesForPartialGraph(buildRuleBuilderParams,ImmutableList.of(ndkProjectConfig),null);
  List<Module> modules=projectWithModules.modules;
  assertEquals("Should be one module for the ndk_library.",1,modules.size());
  Module androidLibraryModule=Iterables.getOnlyElement(modules);
  assertListEquals(ImmutableList.of(DependentModule.newSourceFolder(),DependentModule.newInheritedJdk()),androidLibraryModule.dependencies);
  assertEquals(String.format("../../../../%s",ndkLibrary.getLibraryPath()),androidLibraryModule.nativeLibs);
}
