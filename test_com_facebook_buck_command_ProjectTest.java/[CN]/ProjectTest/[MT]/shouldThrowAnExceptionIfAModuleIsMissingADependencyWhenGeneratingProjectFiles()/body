{
  BuildRuleBuilderParams buildRuleBuilderParams=new BuildRuleBuilderParams();
  DefaultJavaLibraryRule ex1=buildRuleBuilderParams.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//example/parent:ex1")).addSrc("DoesNotExist.java").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  DefaultJavaLibraryRule ex2=buildRuleBuilderParams.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//example/child:ex2")).addSrc("AlsoDoesNotExist.java").addDep(ex1.getFullyQualifiedName()).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  DefaultJavaLibraryRule tests=buildRuleBuilderParams.buildAndAddToIndex(JavaTestRule.newJavaTestRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//example/child:tests")).addSrc("SomeTestFile.java").addDep(ex2.getFullyQualifiedName()).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ProjectConfigRule config=buildRuleBuilderParams.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//example/child:config")).setSrcTarget(Optional.of(ex2.getFullyQualifiedName())).setTestTarget(Optional.of(tests.getFullyQualifiedName())));
  ProjectWithModules projectWithModules=getModulesForPartialGraph(buildRuleBuilderParams,ImmutableList.of(config),null);
  Module module=Iterables.getOnlyElement(projectWithModules.modules);
  List<Module> modules=projectWithModules.project.createModulesForProjectConfigs();
  Map<String,Module> map=projectWithModules.project.buildNameToModuleMap(modules);
  try {
    projectWithModules.project.writeProjectDotPropertiesFile(module,map);
    fail("Should have thrown a HumanReadableException");
  }
 catch (  HumanReadableException e) {
    assertEquals("You must define a project_config() in example/child/BUCK containing " + "//example/parent:ex1. The project_config() in //example/child:config transitively " + "depends on it.",e.getHumanReadableErrorMessage());
  }
}
