{
  BuildRuleBuilderParams buildRuleBuilderParams=new BuildRuleBuilderParams();
  PrebuiltJarRule guava=buildRuleBuilderParams.buildAndAddToIndex(PrebuiltJarRule.newPrebuiltJarRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//third_party/java/guava:guava")).setBinaryJar("third_party/java/guava.jar").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  buildRuleBuilderParams.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:base")).addDep("//third_party/java/guava:guava"));
  buildRuleBuilderParams.buildAndAddToIndex(JavaTestRule.newJavaTestRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:tests")).addDep("//third_party/java/guava:guava"));
  ProjectConfigRule projectConfig=buildRuleBuilderParams.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:project_config")).setSrcTarget(Optional.of("//java/com/example/base:base")).setTestTarget(Optional.of("//java/com/example/base:tests")).setTestRoots(ImmutableList.of("tests")));
  ProjectWithModules projectWithModules=getModulesForPartialGraph(buildRuleBuilderParams,ImmutableList.of(projectConfig),null);
  List<Module> modules=projectWithModules.modules;
  assertEquals(1,modules.size());
  Module comExampleBaseModule=Iterables.getOnlyElement(modules);
  assertListEquals(ImmutableList.of(DependentModule.newSourceFolder(),DependentModule.newLibrary(guava.getBuildTarget(),"guava"),DependentModule.newStandardJdk()),comExampleBaseModule.dependencies);
}
