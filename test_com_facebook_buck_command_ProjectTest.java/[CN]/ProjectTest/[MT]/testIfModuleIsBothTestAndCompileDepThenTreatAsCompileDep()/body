{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  PrebuiltJarRule guava=ruleResolver.buildAndAddToIndex(PrebuiltJarRule.newPrebuiltJarRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//third_party/java/guava:guava")).setBinaryJar("third_party/java/guava.jar").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:base")).addDep(BuildTargetFactory.newInstance("//third_party/java/guava:guava")));
  ruleResolver.buildAndAddToIndex(JavaTestRule.newJavaTestRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:tests")).addDep(BuildTargetFactory.newInstance("//third_party/java/guava:guava")));
  ProjectConfigRule projectConfig=ruleResolver.buildAndAddToIndex(ProjectConfigRule.newProjectConfigRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//java/com/example/base:project_config")).setSrcTarget(Optional.of(BuildTargetFactory.newInstance("//java/com/example/base:base"))).setTestTarget(Optional.of(BuildTargetFactory.newInstance("//java/com/example/base:tests"))).setTestRoots(ImmutableList.of("tests")));
  ProjectWithModules projectWithModules=getModulesForPartialGraph(ruleResolver,ImmutableList.of(projectConfig),null);
  List<Module> modules=projectWithModules.modules;
  assertEquals(1,modules.size());
  Module comExampleBaseModule=Iterables.getOnlyElement(modules);
  assertListEquals(ImmutableList.of(DependentModule.newSourceFolder(),DependentModule.newLibrary(guava.getBuildTarget(),"guava"),DependentModule.newStandardJdk()),comExampleBaseModule.dependencies);
}
