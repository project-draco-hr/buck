def actool_cmds(target, platform, devices, output, catalog_paths, split_into_bundles):
    'Returns an array of tuples.  Each tuple is (command, output_directory).\n     command is an array of command line parameters, while directory is a\n     directory that is expected to exist.'
    if split_into_bundles:
        if ((platform == 'macosx') and (minor_version_from_version_string(target) >= 9)):
            target = '10.8'
        elif (major_version_from_version_string(target) >= 7):
            target = '6.0'
    base_cmd = ['actool', '--output-format', 'human-readable-text', '--notices', '--warnings', '--platform', platform, '--minimum-deployment-target', target]
    for d in devices:
        base_cmd.extend(['--target-device', d])
    base_cmd.extend(['--compress-pngs', '--compile'])
    if split_into_bundles:
        bundle_directories = [(catalog_name_from_path(path) + '.bundle') for path in catalog_paths]
        output_directories = [os.path.join(output, bundle) for bundle in bundle_directories]
        pairs = zip(output_directories, catalog_paths)
        cmds = []
        for (output_directory, catalog_path) in pairs:
            cmd = list(base_cmd)
            cmd.extend([output_directory, catalog_path])
            cmds.append(cmd)
        return zip(cmds, output_directories)
    else:
        base_cmd.append(output)
        base_cmd.extend(catalog_paths)
        return [(base_cmd, output)]
