{
  LOG.debug("Searching for Xcode toolchains under %s",xcodeDir);
  ImmutableMap.Builder<String,Path> toolchainIdentifiersToPathsBuilder=ImmutableMap.builder();
  Path toolchainsDir=xcodeDir.resolve("Toolchains");
  Iterable<Path> toolchainPaths=Iterables.concat(ImmutableSet.of(toolchainsDir),extraDirs);
  for (  Path toolchains : toolchainPaths) {
    if (!Files.exists(toolchains)) {
      LOG.debug("Skipping toolchain search path %s that does not exist",toolchains);
      continue;
    }
    LOG.debug("Searching for Xcode toolchains in %s",toolchains);
    try (DirectoryStream<Path> toolchainStream=Files.newDirectoryStream(toolchains,"*.xctoolchain")){
      for (      Path toolchainPath : toolchainStream) {
        LOG.debug("Getting identifier for for Xcode toolchain under %s",toolchainPath);
        addIdentiferForToolchain(toolchainPath,toolchainIdentifiersToPathsBuilder);
      }
    }
   }
  return toolchainIdentifiersToPathsBuilder.build();
}
