{
  if (recursiveAssetCatalogs.isEmpty()) {
    return;
  }
  ImmutableList.Builder<String> assetCatalogsBuilder=ImmutableList.builder();
  for (  AppleAssetCatalogDescription.Arg assetCatalog : recursiveAssetCatalogs) {
    for (    Path dir : assetCatalog.dirs) {
      Path pathRelativeToProjectRoot=pathRelativizer.outputDirToRootRelative(dir);
      LOG.debug("Resolved asset catalog path %s, result %s",dir,pathRelativeToProjectRoot);
      String bundlePath="$PROJECT_DIR/" + pathRelativeToProjectRoot.toString();
      assetCatalogsBuilder.add(bundlePath);
    }
  }
  ImmutableList<String> assetCatalogs=assetCatalogsBuilder.build();
  Path buildScript=pathRelativizer.outputDirToRootRelative(assetCatalogBuildScript);
  StringBuilder scriptBuilder=new StringBuilder("set -e\n");
  scriptBuilder.append("TMPDIR=`mktemp -d -t buckAssetCatalogs.XXXXXX`\n").append("trap \"rm -rf '${TMPDIR}'\" exit\n");
  if (assetCatalogs.size() != 0) {
    scriptBuilder.append("COMMON_ARGS_FILE=\"${TMPDIR}\"/common_args\n").append("cat <<EOT >\"${COMMON_ARGS_FILE}\"\n");
    Joiner.on('\n').appendTo(scriptBuilder,assetCatalogs);
    scriptBuilder.append("\n").append("EOT\n").append("\"${PROJECT_DIR}/\"").append(buildScript.toString()).append(" @\"${COMMON_ARGS_FILE}\"\n");
  }
  PBXShellScriptBuildPhase phase=new PBXShellScriptBuildPhase();
  target.getBuildPhases().add(phase);
  phase.setShellPath("/bin/bash");
  phase.setShellScript(scriptBuilder.toString());
  LOG.debug("Added asset catalog build phase %s",phase);
}
