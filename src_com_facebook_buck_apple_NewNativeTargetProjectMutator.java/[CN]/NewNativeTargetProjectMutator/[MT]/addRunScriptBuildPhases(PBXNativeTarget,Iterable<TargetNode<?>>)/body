{
  for (  TargetNode<?> node : nodes) {
    PBXShellScriptBuildPhase shellScriptBuildPhase=new PBXShellScriptBuildPhase();
    target.getBuildPhases().add(shellScriptBuildPhase);
    if (XcodePrebuildScriptDescription.TYPE.equals(node.getType()) || XcodePostbuildScriptDescription.TYPE.equals(node.getType())) {
      XcodeScriptDescriptionArg arg=(XcodeScriptDescriptionArg)node.getConstructorArg();
      shellScriptBuildPhase.getInputPaths().addAll(FluentIterable.from(arg.srcs.get()).transform(sourcePathResolver).transform(pathRelativizer.outputDirToRootRelative()).transform(Functions.toStringFunction()).toSet());
      shellScriptBuildPhase.getOutputPaths().addAll(arg.outputs.get());
      shellScriptBuildPhase.setShellScript(arg.cmd);
    }
 else     if (IosReactNativeLibraryDescription.TYPE.equals(node.getType())) {
      shellScriptBuildPhase.setShellScript(generateXcodeShellScript(node));
    }
 else {
      throw new IllegalStateException("Invalid rule type for shell script build phase");
    }
  }
}
