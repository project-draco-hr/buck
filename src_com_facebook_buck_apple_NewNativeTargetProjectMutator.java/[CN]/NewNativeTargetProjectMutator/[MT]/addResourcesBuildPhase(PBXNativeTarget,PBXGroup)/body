{
  if (resources.isEmpty()) {
    return;
  }
  PBXGroup resourcesGroup=targetGroup.getOrCreateChildGroupByName("Resources");
  PBXBuildPhase phase=new PBXResourcesBuildPhase();
  target.getBuildPhases().add(phase);
  for (  AppleResourceDescription.Arg resource : resources) {
    for (    Path path : Iterables.transform(resource.files,sourcePathResolver)) {
      PBXFileReference fileReference=resourcesGroup.getOrCreateFileReferenceBySourceTreePath(SourceTreePath.ofAutodetectedType(PBXReference.SourceTree.SOURCE_ROOT,pathRelativizer.outputDirToRootRelative(path)));
      PBXBuildFile buildFile=new PBXBuildFile(fileReference);
      phase.getFiles().add(buildFile);
    }
    for (    Path path : Iterables.transform(resource.dirs,sourcePathResolver)) {
      PBXFileReference fileReference=resourcesGroup.getOrCreateFileReferenceBySourceTreePath(SourceTreePath.ofFolderType(PBXReference.SourceTree.SOURCE_ROOT,pathRelativizer.outputDirToRootRelative(path)));
      PBXBuildFile buildFile=new PBXBuildFile(fileReference);
      phase.getFiles().add(buildFile);
    }
    Map<String,PBXVariantGroup> variantGroups=Maps.newHashMap();
    for (    SourcePath variantSourcePath : resource.variants.get()) {
      String lprojSuffix=".lproj";
      Path variantFilePath=sourcePathResolver.apply(variantSourcePath);
      Path variantDirectory=variantFilePath.getParent();
      if (variantDirectory == null || !variantDirectory.toString().endsWith(lprojSuffix)) {
        throw new HumanReadableException("Variant files have to be in a directory with name ending in '.lproj', " + "but '%s' is not.",variantFilePath);
      }
      String variantDirectoryName=variantDirectory.getFileName().toString();
      String variantLocalization=variantDirectoryName.substring(0,variantDirectoryName.length() - lprojSuffix.length());
      String variantFileName=variantFilePath.getFileName().toString();
      PBXVariantGroup variantGroup=variantGroups.get(variantFileName);
      if (variantGroup == null) {
        variantGroup=resourcesGroup.getOrCreateChildVariantGroupByName(variantFileName);
        PBXBuildFile buildFile=new PBXBuildFile(variantGroup);
        phase.getFiles().add(buildFile);
        variantGroups.put(variantFileName,variantGroup);
      }
      SourceTreePath sourceTreePath=SourceTreePath.ofAutodetectedType(PBXReference.SourceTree.SOURCE_ROOT,pathRelativizer.outputPathToSourcePath(variantSourcePath));
      variantGroup.getOrCreateVariantFileReferenceByNameAndSourceTreePath(variantLocalization,sourceTreePath);
    }
  }
  LOG.debug("Added resources build phase %s",phase);
}
