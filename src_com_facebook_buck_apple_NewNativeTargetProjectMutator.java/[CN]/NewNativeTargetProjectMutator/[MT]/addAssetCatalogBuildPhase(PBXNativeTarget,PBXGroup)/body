{
  if (assetCatalogs.isEmpty()) {
    return;
  }
  PBXGroup resourcesGroup=targetGroup.getOrCreateChildGroupByName("Resources");
  ImmutableList.Builder<String> commonAssetCatalogsBuilder=ImmutableList.builder();
  ImmutableList.Builder<String> assetCatalogsToSplitIntoBundlesBuilder=ImmutableList.builder();
  for (  AppleAssetCatalogDescription.Arg assetCatalog : assetCatalogs) {
    for (    Path dir : assetCatalog.dirs) {
      Path pathRelativeToProjectRoot=pathRelativizer.outputDirToRootRelative(dir);
      resourcesGroup.getOrCreateFileReferenceBySourceTreePath(new SourceTreePath(PBXReference.SourceTree.SOURCE_ROOT,pathRelativeToProjectRoot));
      LOG.debug("Resolved asset catalog path %s, result %s",dir,pathRelativeToProjectRoot);
      String bundlePath="$PROJECT_DIR/" + pathRelativeToProjectRoot.toString();
      if (assetCatalog.getCopyToBundles()) {
        assetCatalogsToSplitIntoBundlesBuilder.add(bundlePath);
      }
 else {
        commonAssetCatalogsBuilder.add(bundlePath);
      }
    }
  }
  ImmutableList<String> commonAssetCatalogs=commonAssetCatalogsBuilder.build();
  ImmutableList<String> assetCatalogsToSplitIntoBundles=assetCatalogsToSplitIntoBundlesBuilder.build();
  Path buildScript=pathRelativizer.outputDirToRootRelative(assetCatalogBuildScript);
  StringBuilder scriptBuilder=new StringBuilder("set -e\n");
  scriptBuilder.append("TMPDIR=`mktemp -d -t buckAssetCatalogs.XXXXXX`\n").append("trap \"rm -rf '${TMPDIR}'\" exit\n");
  if (commonAssetCatalogs.size() != 0) {
    scriptBuilder.append("COMMON_ARGS_FILE=\"${TMPDIR}\"/common_args\n").append("cat <<EOT >\"${COMMON_ARGS_FILE}\"\n");
    Joiner.on('\n').appendTo(scriptBuilder,commonAssetCatalogs);
    scriptBuilder.append("\n").append("EOT\n").append("\"${PROJECT_DIR}/\"").append(buildScript.toString()).append(" @\"${COMMON_ARGS_FILE}\"\n");
  }
  if (assetCatalogsToSplitIntoBundles.size() != 0) {
    scriptBuilder.append("BUNDLE_ARGS_FILE=\"${TMPDIR}\"/bundle_args\n").append("cat <<EOT >\"${BUNDLE_ARGS_FILE}\"\n");
    Joiner.on('\n').appendTo(scriptBuilder,assetCatalogsToSplitIntoBundles);
    scriptBuilder.append("\n").append("EOT\n").append("\"${PROJECT_DIR}/\"").append(buildScript.toString()).append(" -b ").append("@\"${BUNDLE_ARGS_FILE}\"\n");
  }
  PBXShellScriptBuildPhase phase=new PBXShellScriptBuildPhase();
  target.getBuildPhases().add(phase);
  phase.setShellPath("/bin/bash");
  phase.setShellScript(scriptBuilder.toString());
  LOG.debug("Added asset catalog build phase %s",phase);
}
