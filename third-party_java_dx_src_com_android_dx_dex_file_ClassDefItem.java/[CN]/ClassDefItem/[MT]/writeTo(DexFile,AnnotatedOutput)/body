{
  boolean annotates=out.annotates();
  TypeIdsSection typeIds=file.getTypeIds();
  int classIdx=typeIds.indexOf(thisClass);
  int superIdx=(superclass == null) ? -1 : typeIds.indexOf(superclass);
  int interOff=OffsettedItem.getAbsoluteOffsetOr0(interfaces);
  int annoOff=annotationsDirectory.isEmpty() ? 0 : annotationsDirectory.getAbsoluteOffset();
  int sourceFileIdx=(sourceFile == null) ? -1 : file.getStringIds().indexOf(sourceFile);
  int dataOff=classData.isEmpty() ? 0 : classData.getAbsoluteOffset();
  int staticValuesOff=OffsettedItem.getAbsoluteOffsetOr0(staticValuesItem);
  if (annotates) {
    out.annotate(0,indexString() + ' ' + thisClass.toHuman());
    out.annotate(4,"  class_idx:           " + Hex.u4(classIdx));
    out.annotate(4,"  access_flags:        " + AccessFlags.classString(accessFlags));
    out.annotate(4,"  superclass_idx:      " + Hex.u4(superIdx) + " // "+ ((superclass == null) ? "<none>" : superclass.toHuman()));
    out.annotate(4,"  interfaces_off:      " + Hex.u4(interOff));
    if (interOff != 0) {
      TypeList list=interfaces.getList();
      int sz=list.size();
      for (int i=0; i < sz; i++) {
        out.annotate(0,"    " + list.getType(i).toHuman());
      }
    }
    out.annotate(4,"  source_file_idx:     " + Hex.u4(sourceFileIdx) + " // "+ ((sourceFile == null) ? "<none>" : sourceFile.toHuman()));
    out.annotate(4,"  annotations_off:     " + Hex.u4(annoOff));
    out.annotate(4,"  class_data_off:      " + Hex.u4(dataOff));
    out.annotate(4,"  static_values_off:   " + Hex.u4(staticValuesOff));
  }
  out.writeInt(classIdx);
  out.writeInt(accessFlags);
  out.writeInt(superIdx);
  out.writeInt(interOff);
  out.writeInt(sourceFileIdx);
  out.writeInt(annoOff);
  out.writeInt(dataOff);
  out.writeInt(staticValuesOff);
}
