{
  Path outputDir=getPathToOutput();
  String shortName=getBuildTarget().getShortName();
  buildableContext.recordArtifact(outputDir.resolve(getLibraryName()));
  buildableContext.recordArtifact(outputDir.resolve(shortName + ".h"));
  Tool archiver=cxxPlatform.getAr();
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  commands.add(new MakeCleanDirectoryStep(getProjectFilesystem(),outputDir));
  commands.add(new HalideCompilerStep(getProjectFilesystem().getRootPath(),halideCompiler.getEnvironment(getResolver()),halideCompiler.getCommandPrefix(getResolver()),outputDir,shortName,halideBuckConfig.getHalideTargetForPlatform(cxxPlatform)));
  commands.add(new ArchiveStep(getProjectFilesystem().getRootPath(),archiver.getEnvironment(getResolver()),archiver.getCommandPrefix(getResolver()),outputDir.resolve(getLibraryName()),ImmutableList.of(outputDir.resolve(shortName + ".o"))));
  return commands.build();
}
