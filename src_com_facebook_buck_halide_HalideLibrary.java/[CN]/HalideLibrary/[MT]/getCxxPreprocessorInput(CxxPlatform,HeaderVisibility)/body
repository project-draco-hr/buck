{
switch (headerVisibility) {
case PUBLIC:
    return CxxPreprocessables.getCxxPreprocessorInput(params,ruleResolver,true,cxxPlatform,headerVisibility,CxxPreprocessables.IncludeType.SYSTEM,ImmutableMultimap.<CxxSource.Type,String>of(),ImmutableList.<FrameworkPath>of());
case PRIVATE:
  return CxxPreprocessorInput.EMPTY;
}
throw new RuntimeException("Invalid header visibility: " + headerVisibility);
}
