{
  BuildTarget publishableTargetA=BuildTargetFactory.newInstance("//:a").withFlavors(JavaLibrary.MAVEN_JAR);
  BuildTarget publishableTargetB=BuildTargetFactory.newInstance("//:b").withFlavors(JavaLibrary.MAVEN_JAR);
  BuildTarget targetC=BuildTargetFactory.newInstance("//:c");
  JavaLibraryBuilder.createBuilder(targetC).addSrc(Paths.get("c.java")).build(ruleResolver);
  MavenPublishable publishableA=(MavenPublishable)JavaLibraryBuilder.createBuilder(publishableTargetA).addSrc(Paths.get("a.java")).setMavenCoords(MVN_COORDS_A).addDep(targetC).build(ruleResolver);
  MavenPublishable publishableB=(MavenPublishable)JavaLibraryBuilder.createBuilder(publishableTargetB).addSrc(Paths.get("b.java")).setMavenCoords(MVN_COORDS_B).addDep(targetC).build(ruleResolver);
  expectedException.expect(DeploymentException.class);
  expectedException.expectMessage(Matchers.containsString(targetC.getUnflavoredBuildTarget().getFullyQualifiedName()));
  expectedException.expectMessage(Matchers.containsString(publishableTargetA.getUnflavoredBuildTarget().getFullyQualifiedName()));
  expectedException.expectMessage(Matchers.containsString(publishableTargetB.getUnflavoredBuildTarget().getFullyQualifiedName()));
  publisher.publish(ImmutableSet.of(publishableA,publishableB));
}
