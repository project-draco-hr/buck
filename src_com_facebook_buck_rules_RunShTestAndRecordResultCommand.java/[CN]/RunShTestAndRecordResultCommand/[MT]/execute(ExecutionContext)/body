{
  ShellCommand test=new ShellCommand(){
    @Override public String getShortName(    ExecutionContext context){
      return pathToShellScript;
    }
    @Override protected ImmutableList<String> getShellCommandInternal(    ExecutionContext context){
      return ImmutableList.of(pathToShellScript);
    }
    @Override protected boolean shouldRecordStdout(){
      return true;
    }
  }
;
  int exitCode=test.execute(context);
  TestResultSummary summary=new TestResultSummary(pathToShellScript,"sh_test",exitCode == 0,-1L,null,null,test.getStdOut(),null);
  ObjectMapper mapper=new ObjectMapper();
  try {
    mapper.writeValue(Files.newWriter(new File(pathToTestResultFile),Charsets.UTF_8),summary);
  }
 catch (  JsonGenerationException e) {
    Throwables.propagate(e);
  }
catch (  JsonMappingException e) {
    Throwables.propagate(e);
  }
catch (  FileNotFoundException e) {
    Throwables.propagate(e);
  }
catch (  IOException e) {
    Throwables.propagate(e);
  }
  return 0;
}
