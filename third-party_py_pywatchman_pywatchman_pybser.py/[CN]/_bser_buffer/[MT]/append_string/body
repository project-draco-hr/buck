def append_string(self, s):
    if isinstance(s, unicode):
        s = s.encode('utf-8')
    s_len = len(s)
    size = _int_size(s_len)
    to_write = ((2 + size) + s_len)
    self.ensure_size(to_write)
    if (size == 1):
        struct.pack_into((('=ccb' + str(s_len)) + 's'), self.buf, self.wpos, BSER_STRING, BSER_INT8, s_len, s)
    elif (size == 2):
        struct.pack_into((('=cch' + str(s_len)) + 's'), self.buf, self.wpos, BSER_STRING, BSER_INT16, s_len, s)
    elif (size == 4):
        struct.pack_into((('=cci' + str(s_len)) + 's'), self.buf, self.wpos, BSER_STRING, BSER_INT32, s_len, s)
    elif (size == 8):
        struct.pack_into((('=ccq' + str(s_len)) + 's'), self.buf, self.wpos, BSER_STRING, BSER_INT64, s_len, s)
    else:
        raise RuntimeError('Cannot represent this string value')
    self.wpos += to_write
