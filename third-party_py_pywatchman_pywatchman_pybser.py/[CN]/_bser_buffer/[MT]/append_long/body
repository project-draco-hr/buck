def append_long(self, val):
    size = _int_size(val)
    to_write = (size + 1)
    self.ensure_size(to_write)
    if (size == 1):
        struct.pack_into('=cb', self.buf, self.wpos, BSER_INT8, val)
    elif (size == 2):
        struct.pack_into('=ch', self.buf, self.wpos, BSER_INT16, val)
    elif (size == 4):
        struct.pack_into('=ci', self.buf, self.wpos, BSER_INT32, val)
    elif (size == 8):
        struct.pack_into('=cq', self.buf, self.wpos, BSER_INT64, val)
    else:
        raise RuntimeError('Cannot represent this long value')
    self.wpos += to_write
