{
  Logger.get(Depfiles.class).debug("Processing dependency file %s as Makefile",sourceDepFile);
  ImmutableMap<String,Object> params=ImmutableMap.<String,Object>of("input",inputPath,"output",outputPath);
  try (InputStream input=filesystem.newFileInputStream(sourceDepFile);BufferedReader reader=new BufferedReader(new InputStreamReader(input));OutputStream output=filesystem.newFileOutputStream(destDepFile);BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output));SimplePerfEvent.Scope perfEvent=SimplePerfEvent.scope(context.getBuckEventBus(),PerfEventId.of("depfile-parse"),params)){
    for (    String prereq : parseDepfile(reader).getPrereqs()) {
      Path path=Paths.get(prereq);
      Optional<Path> absolutePath=headerPathNormalizer.getAbsolutePathForUnnormalizedPath(path);
      if (absolutePath.isPresent()) {
        Preconditions.checkState(absolutePath.get().isAbsolute());
        writer.write(absolutePath.get().toString());
        writer.newLine();
      }
    }
  }
 }
