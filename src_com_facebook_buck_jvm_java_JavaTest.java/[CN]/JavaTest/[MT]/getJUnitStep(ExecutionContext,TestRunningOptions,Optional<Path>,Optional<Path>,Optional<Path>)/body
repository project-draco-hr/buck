{
  Set<String> testClassNames=getClassNamesForSources();
  Iterable<String> reorderedTestClasses=reorderClasses(testClassNames,options.isShufflingTests());
  ImmutableList<String> properVmArgs=amendVmArgs(this.vmArgs,executionContext.getTargetDeviceOptional());
  BuckEventBus buckEventBus=executionContext.getBuckEventBus();
  BuildId buildId=buckEventBus.getBuildId();
  TestSelectorList testSelectorList=options.getTestSelectorList();
  JUnitJvmArgs args=JUnitJvmArgs.builder().setTestType(testType).setDirectoryForTestResults(outDir).setTmpDirectory(tempDir).setClasspathFile(getClassPathFile()).setTestRunnerClasspath(TESTRUNNER_CLASSES).setCodeCoverageEnabled(executionContext.isCodeCoverageEnabled()).setDebugEnabled(executionContext.isDebugEnabled()).setPathToJavaAgent(options.getPathToJavaAgent()).setBuildId(buildId).setBuckModuleBaseSourceCodePath(getBuildTarget().getBasePath()).setStdOutLogLevel(stdOutLogLevel).setStdErrLogLevel(stdErrLogLevel).setRobolectricLogPath(robolectricLogPath).setExtraJvmArgs(properVmArgs).addAllTestClasses(reorderedTestClasses).setDryRun(options.isDryRun()).setTestSelectorList(testSelectorList).build();
  return new JUnitStep(getProjectFilesystem(),nativeLibsEnvironment,testRuleTimeoutMs,javaRuntimeLauncher,args);
}
