{
  assertThat(createRendererAndRenderLines(4200,ImmutableMap.of(1L,createTestStartedEventOptional(1,1200,TARGET2),3L,createTestStartedEventOptional(3,2300,TARGET3),4L,createTestStartedEventOptional(4,1100,TARGET1),5L,Optional.<TestRuleEvent>absent(),8L,createTestStartedEventOptional(6,3000,TARGET4)),ImmutableMap.of(1L,Optional.<TestSummaryEvent>absent(),3L,createTestSummaryEventOptional(1,1600,"Test Case A","Test A"),4L,Optional.<TestSummaryEvent>absent(),5L,Optional.<TestSummaryEvent>absent(),8L,Optional.<TestSummaryEvent>absent()),ImmutableMap.of(1L,Optional.<TestStatusMessageEvent>absent(),3L,Optional.<TestStatusMessageEvent>absent(),4L,Optional.<TestStatusMessageEvent>absent(),5L,Optional.<TestStatusMessageEvent>absent(),8L,createTestStatusMessageEventOptional(1,3800,"Installing Sim",Level.INFO)),ImmutableMap.of(1L,createStepStartedEventOptional(1,1500,"step A"),3L,Optional.<LeafEvent>absent(),4L,Optional.<LeafEvent>absent(),5L,Optional.<LeafEvent>absent(),8L,createStepStartedEventOptional(1,3700,"step B")),ImmutableMap.of(TARGET1,new AtomicLong(200),TARGET2,new AtomicLong(1400),TARGET3,new AtomicLong(700),TARGET4,new AtomicLong(0))),is(equalTo(ImmutableList.of(" |=> //:target2...  4.4s (running step A[2.7s])"," |=> //:target1...  3.3s"," |=> //:target3...  2.6s (running Test A[2.6s])"," |=> //:target4...  1.2s (running Installing Sim[0.4s])"," |=> IDLE"))));
}
