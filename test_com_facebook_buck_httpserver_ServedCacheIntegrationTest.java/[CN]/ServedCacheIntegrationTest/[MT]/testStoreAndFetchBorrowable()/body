{
  webServer=new WebServer(0,projectFilesystem,"/static/",MAPPER);
  webServer.updateAndStartIfNeeded(ArtifactCaches.newServedCache(createMockLocalConfig("[cache]","dir = test-cache","serve_local_cache = true","served_local_cache_mode = readwrite"),projectFilesystem));
  ArtifactCache serverBackedCache=ArtifactCaches.newInstance(createMockLocalHttpCacheConfig(webServer.getPort().get()),buckEventBus,projectFilesystem,Optional.<String>absent(),DIRECT_EXECUTOR_SERVICE);
  RuleKey ruleKey=new RuleKey("00111222333444");
  ImmutableMap<String,String> metadata=ImmutableMap.of("some key","some value");
  Path originalDataPath=tmpDir.newFile();
  String data="you won't believe this!";
  projectFilesystem.writeContentsToPath(data,originalDataPath);
  LazyPath fetchedContents=LazyPath.ofInstance(tmpDir.newFile());
  CacheResult cacheResult=serverBackedCache.fetch(ruleKey,fetchedContents);
  assertThat(cacheResult.getType().isSuccess(),Matchers.is(false));
  serverBackedCache.store(ImmutableSet.of(ruleKey),metadata,BorrowablePath.borrowablePath(originalDataPath));
  cacheResult=serverBackedCache.fetch(ruleKey,fetchedContents);
  assertThat(cacheResult.getType().isSuccess(),Matchers.is(true));
  assertThat(cacheResult.getMetadata(),Matchers.equalTo(metadata));
  assertThat(projectFilesystem.readFileIfItExists(fetchedContents.get()).get(),Matchers.equalTo(data));
}
