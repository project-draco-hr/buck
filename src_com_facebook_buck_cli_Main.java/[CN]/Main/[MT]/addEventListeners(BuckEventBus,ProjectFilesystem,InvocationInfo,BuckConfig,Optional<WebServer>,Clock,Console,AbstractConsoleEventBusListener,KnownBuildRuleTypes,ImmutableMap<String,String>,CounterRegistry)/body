{
  ImmutableList.Builder<BuckEventListener> eventListenersBuilder=ImmutableList.<BuckEventListener>builder().add(new JavaUtilsLoggingBuildListener()).add(consoleEventBusListener).add(new LoggingBuildListener());
  if (config.isChromeTraceCreationEnabled()) {
    try {
      eventListenersBuilder.add(new ChromeTraceBuildListener(projectFilesystem,invocationInfo,clock,objectMapper,config.getMaxTraces(),config.getCompressTraces()));
    }
 catch (    IOException e) {
      LOG.error("Unable to create ChromeTrace listener!");
    }
  }
 else {
    LOG.warn("::: ChromeTrace listener disabled");
  }
  if (webServer.isPresent()) {
    eventListenersBuilder.add(webServer.get().createListener());
  }
  loadListenersFromBuckConfig(eventListenersBuilder,projectFilesystem,config);
  if (config.isRuleKeyLoggerEnabled()) {
    eventListenersBuilder.add(new RuleKeyLoggerListener(projectFilesystem,invocationInfo,MostExecutors.newSingleThreadExecutor(new CommandThreadFactory(getClass().getName()))));
  }
  JavaBuckConfig javaBuckConfig=new JavaBuckConfig(config);
  if (!javaBuckConfig.getSkipCheckingMissingDeps()) {
    JavacOptions javacOptions=javaBuckConfig.getDefaultJavacOptions();
    eventListenersBuilder.add(MissingSymbolsHandler.createListener(projectFilesystem,knownBuildRuleTypes.getAllDescriptions(),config,buckEventBus,console,javacOptions,environment));
  }
  eventListenersBuilder.add(new LoadBalancerEventsListener(counterRegistry));
  eventListenersBuilder.add(new CacheRateStatsListener(buckEventBus));
  ImmutableList<BuckEventListener> eventListeners=eventListenersBuilder.build();
  for (  BuckEventListener eventListener : eventListeners) {
    buckEventBus.register(eventListener);
  }
  return eventListeners;
}
