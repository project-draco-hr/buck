{
  return new CxxPreprocessAndCompile(params,resolver,CxxPreprocessAndCompileStep.Operation.COMPILE,Optional.<Tool>absent(),Optional.<ImmutableList<String>>absent(),Optional.<ImmutableList<String>>absent(),Optional.of(compiler),Optional.of(platformFlags),Optional.of(ruleFlags),output,input,inputType,ImmutableSet.<Path>of(),ImmutableSet.<Path>of(),ImmutableSet.<Path>of(),ImmutableList.<CxxHeaders>of(),sanitizer);
}
