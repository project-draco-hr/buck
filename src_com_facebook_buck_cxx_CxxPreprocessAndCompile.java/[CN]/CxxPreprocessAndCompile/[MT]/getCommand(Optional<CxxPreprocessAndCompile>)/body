{
  if (operation == CxxPreprocessAndCompileStep.Operation.COMPILE_MUNGE_DEBUGINFO) {
    return makeMainStep(getProjectFilesystem().getRootPath(),false).getCommand();
  }
  CxxPreprocessAndCompile preprocessRule=externalPreprocessRule.or(this);
  if (!preprocessRule.preprocessDelegate.isPresent()) {
    throw new HumanReadableException("Neither %s nor %s handles preprocessing.",externalPreprocessRule,this);
  }
  PreprocessorDelegate effectivePreprocessorDelegate=preprocessRule.preprocessDelegate.get();
  ImmutableList.Builder<String> cmd=ImmutableList.builder();
  cmd.addAll(compilerDelegate.getCommand(effectivePreprocessorDelegate.getFlagsWithSearchPaths()));
  cmd.add("-x",preprocessRule.inputType.getLanguage());
  cmd.add("-c");
  cmd.add("-o",output.toString());
  cmd.add(getResolver().getAbsolutePath(preprocessRule.input).toString());
  return cmd.build();
}
