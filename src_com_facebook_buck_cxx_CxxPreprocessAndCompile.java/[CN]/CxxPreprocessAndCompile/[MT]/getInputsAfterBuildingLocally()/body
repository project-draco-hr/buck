{
  SourcePathResolver resolver=getResolver();
  ImmutableList.Builder<Path> inputs=ImmutableList.builder();
  if (preprocessor.isPresent()) {
    inputs.addAll(Ordering.natural().immutableSortedCopy(resolver.getAllPaths(preprocessor.get().getInputs())));
  }
  if (compiler.isPresent()) {
    inputs.addAll(Ordering.natural().immutableSortedCopy(resolver.getAllPaths(compiler.get().getInputs())));
  }
  inputs.add(resolver.getPath(input));
  Set<Path> prefixHeaders=Sets.newTreeSet();
  for (  CxxHeaders headers : includes) {
    for (    SourcePath prefixHeader : headers.getPrefixHeaders()) {
      prefixHeaders.add(resolver.getPath(prefixHeader));
    }
  }
  inputs.addAll(prefixHeaders);
  inputs.addAll(Iterables.transform(getProjectFilesystem().readLines(getDepFilePath()),MorePaths.TO_PATH));
  return inputs.build();
}
