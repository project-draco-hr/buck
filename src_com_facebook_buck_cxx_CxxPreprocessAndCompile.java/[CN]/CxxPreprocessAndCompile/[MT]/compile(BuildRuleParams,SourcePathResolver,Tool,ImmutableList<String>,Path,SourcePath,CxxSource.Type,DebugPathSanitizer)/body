{
  return new CxxPreprocessAndCompile(params,resolver,CxxPreprocessAndCompileStep.Operation.COMPILE,Optional.<Tool>absent(),Optional.<ImmutableList<String>>absent(),Optional.of(compiler),Optional.of(flags),output,input,inputType,ImmutableList.<Path>of(),ImmutableList.<Path>of(),ImmutableList.<Path>of(),CxxHeaders.builder().build(),sanitizer);
}
