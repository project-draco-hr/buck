{
  builder.setReflectively("platformPreprocessorFlags",sanitizeFlags(platformPreprocessorFlags));
  builder.setReflectively("rulePreprocessorFlags",sanitizeFlags(rulePreprocessorFlags));
  builder.setReflectively("platformCompilerFlags",sanitizeFlags(platformCompilerFlags));
  builder.setReflectively("ruleCompilerFlags",sanitizeFlags(ruleCompilerFlags));
  ImmutableList<String> frameworkRoots=FluentIterable.from(this.frameworkRoots).transform(Functions.toStringFunction()).transform(sanitizer.sanitize(Optional.<Path>absent(),false)).toList();
  builder.setReflectively("frameworkRoots",frameworkRoots);
  if (operation == CxxPreprocessAndCompileStep.Operation.COMPILE_MUNGE_DEBUGINFO) {
    builder.setReflectively("compilationDirectory",sanitizer.getCompilationDirectory());
  }
  return builder;
}
