def configure_clp():
    usage = '%prog [-o OUTPUT.PEX] [options] [-- arg1 arg2 ...]\n\n%prog builds a PEX (Python Executable) file based on the given specifications: sources, requirements, their dependencies and other options.'
    parser = OptionParser(usage=usage, version='%prog {0}'.format(__version__))
    resolver_options_builder = ResolverOptionsBuilder()
    configure_clp_pex_resolution(parser, resolver_options_builder)
    configure_clp_pex_options(parser)
    configure_clp_pex_environment(parser)
    configure_clp_pex_entry_points(parser)
    parser.add_option('-o', '--output-file', dest='pex_name', default=None, help='The name of the generated .pex file: Omiting this will run PEX immediately and not save it to a file.')
    parser.add_option('-r', '--requirement', dest='requirement_files', metavar='FILE', default=[], type=str, action='append', help='Add requirements from the given requirements file.  This option can be used multiple times.')
    parser.add_option('-v', dest='verbosity', default=0, action='callback', callback=increment_verbosity, help='Turn on logging verbosity, may be specified multiple times.')
    parser.add_option('--help-variables', action='callback', callback=print_variable_help, help='Print out help about the various environment variables used to change the behavior of a running PEX file.')
    return (parser, resolver_options_builder)
