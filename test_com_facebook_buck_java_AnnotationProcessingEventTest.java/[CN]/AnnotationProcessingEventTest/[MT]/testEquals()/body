{
  BuildTarget target=BuildTargetFactory.newInstance("//fake:rule");
  BuildTarget targetTwo=BuildTargetFactory.newInstance("//fake:rule2");
  String annotationProcessorName="com.facebook.FakeProcessor";
  String annotationProcessorName2="com.facebook.FakeProcessor2";
  AnnotationProcessingEvent.Started initStartedEventOne=configureTestEvent(AnnotationProcessingEvent.started(target,annotationProcessorName,AnnotationProcessingEvent.Operation.INIT,0,false));
  AnnotationProcessingEvent.Started initStartedEventTwo=configureTestEvent(AnnotationProcessingEvent.started(target,annotationProcessorName,AnnotationProcessingEvent.Operation.INIT,0,false));
  AnnotationProcessingEvent targetTwoInitStartedEvent=configureTestEvent(AnnotationProcessingEvent.started(targetTwo,annotationProcessorName,AnnotationProcessingEvent.Operation.INIT,0,false));
  AnnotationProcessingEvent annotationProcessorTwoInitStartedEvent=configureTestEvent(AnnotationProcessingEvent.started(target,annotationProcessorName2,AnnotationProcessingEvent.Operation.INIT,0,false));
  AnnotationProcessingEvent getSupportedOptionsStartedEvent=configureTestEvent(AnnotationProcessingEvent.started(target,annotationProcessorName,AnnotationProcessingEvent.Operation.GET_SUPPORTED_OPTIONS,0,false));
  AnnotationProcessingEvent finishedInitEventOne=configureTestEvent(AnnotationProcessingEvent.finished(initStartedEventOne));
  AnnotationProcessingEvent finishedInitEventTwo=configureTestEvent(AnnotationProcessingEvent.finished(initStartedEventTwo));
  assertEquals(initStartedEventOne,initStartedEventOne);
  assertNotEquals(initStartedEventOne,initStartedEventTwo);
  assertNotEquals(initStartedEventOne,targetTwoInitStartedEvent);
  assertNotEquals(initStartedEventOne,annotationProcessorTwoInitStartedEvent);
  assertNotEquals(initStartedEventOne,getSupportedOptionsStartedEvent);
  assertNotEquals(finishedInitEventOne,finishedInitEventTwo);
  assertThat(initStartedEventOne.isRelatedTo(finishedInitEventOne),Matchers.is(true));
  assertThat(initStartedEventOne.isRelatedTo(finishedInitEventTwo),Matchers.is(false));
}
