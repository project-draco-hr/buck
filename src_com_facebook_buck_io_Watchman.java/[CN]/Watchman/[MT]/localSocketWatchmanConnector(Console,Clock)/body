{
  return new Function<Path,Optional<WatchmanClient>>(){
    @Override public Optional<WatchmanClient> apply(    Path socketPath){
      try {
        return Optional.<WatchmanClient>of(new WatchmanSocketClient(console,clock,createLocalWatchmanSocket(socketPath)));
      }
 catch (      IOException e) {
        LOG.warn(e,"Could not connect to Watchman at path %s",socketPath);
        return Optional.absent();
      }
    }
    private Socket createLocalWatchmanSocket(    Path socketPath) throws IOException {
      return UnixDomainSocket.createSocketWithPath(socketPath);
    }
  }
;
}
