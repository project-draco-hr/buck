{
  WatchKey key;
  while ((key=watchService.poll()) != null) {
    Path dir=keys.get(key);
    if (dir == null) {
      continue;
    }
    for (    final WatchEvent<?> event : key.pollEvents()) {
      if (filesystem.isPathChangeEvent(event)) {
        Path name=(Path)event.context();
        final Path child=dir.resolve(name);
        if (shouldIgnore(child)) {
          continue;
        }
        if (filesystem.isDirectory(child,LinkOption.NOFOLLOW_LINKS)) {
          if (event.kind() == StandardWatchEventKinds.ENTRY_CREATE) {
            registerAll(child);
          }
          continue;
        }
        eventBus.post(new WatchEvent<Path>(){
          @Override @SuppressWarnings("unchecked") public Kind<Path> kind(){
            return (Kind<Path>)event.kind();
          }
          @Override public int count(){
            return event.count();
          }
          @Override public Path context(){
            return child;
          }
        }
);
      }
 else {
        eventBus.post(event);
      }
    }
    if (!key.reset()) {
      keys.remove(key);
    }
  }
}
