{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"java_binary_with_blacklist",tmp);
  workspace.setUp();
  Path binaryJarWithBlacklist=workspace.buildAndReturnOutput("//:bin-blacklist");
  Path binaryJarWithoutBlacklist=workspace.buildAndReturnOutput("//:bin-no-blacklist");
  ImmutableSet<String> commonEntries=ImmutableSet.of("META-INF/","META-INF/MANIFEST.MF","com/","com/example/","com/example/B.class");
  ImmutableSet<String> blacklistedEntries=ImmutableSet.of("com/example/A.class","com/example/A$C.class","com/example/Alligator.class");
  assertEquals("com.example.Alligator, com.example.A and any inner classes should be removed.",commonEntries,new ZipInspector(binaryJarWithBlacklist).getZipFileEntries());
  assertEquals(ImmutableSet.builder().addAll(commonEntries).addAll(blacklistedEntries).build(),new ZipInspector(binaryJarWithoutBlacklist).getZipFileEntries());
}
