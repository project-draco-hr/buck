{
  final ImmutableList.Builder<TestResults> resultsBuilder=ImmutableList.builder();
  BuckEventListener eventListener=new BuckEventListener(){
    @Subscribe public void onEvent(    TestRunEvent.Finished event){
      resultsBuilder.addAll(event.getResults());
    }
    @Override public void outputTrace(    BuildId buildId) throws InterruptedException {
    }
  }
;
  String[] totalArgs=new String[args.length + 1];
  totalArgs[0]="test";
  System.arraycopy(args,0,totalArgs,1,args.length);
  ProcessResult result=runBuckCommandWithEnvironmentAndContext(destPath,Optional.<NGContext>absent(),Optional.of(eventListener),Optional.<ImmutableMap<String,String>>absent(),totalArgs);
  assertThat(result.getStdout() + result.getStderr(),result.getExitCode(),Matchers.in(new Integer[]{0,TestRunning.TEST_FAILURES_EXIT_CODE}));
  return resultsBuilder.build();
}
