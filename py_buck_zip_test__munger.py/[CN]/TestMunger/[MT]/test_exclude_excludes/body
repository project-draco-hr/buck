def test_exclude_excludes(self):
    with munger.tempdir() as temp_dir:
        output_file = os.path.join(temp_dir, 'output')
        input_file = os.path.join(temp_dir, 'input')
        included = os.path.join(temp_dir, 'included')
        with open(included, 'w') as f:
            f.write('some content')
        excluded = os.path.join(temp_dir, 'excluded')
        with open(excluded, 'w') as f:
            f.write('some content')
        with contextlib.closing(zipfile.ZipFile(input_file, 'w')) as input:
            input.write(included, os.path.relpath(included, temp_dir))
            input.write(excluded, os.path.relpath(excluded, temp_dir))
        munger.process_jar(input_file, output_file, [], ['excluded'])
        with contextlib.closing(zipfile.ZipFile(output_file)) as output:
            self.assertEqual(len(output.infolist()), 1, 'Only one file ended up in the zip')
            exists = False
            for info in output.infolist():
                exists = (exists or (info.filename == 'included'))
            self.assertTrue(exists, 'Included file was included')
