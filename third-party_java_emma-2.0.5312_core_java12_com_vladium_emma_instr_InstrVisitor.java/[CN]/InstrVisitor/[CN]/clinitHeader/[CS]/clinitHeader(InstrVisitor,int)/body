{
  super(visitor);
  final ByteArrayOStream buf=new ByteArrayOStream(CLINIT_HEADER_INIT_CAPACITY);
  m_buf=buf;
  final ClassDef cls=visitor.m_cls;
  final int[] blockCounts=visitor.m_classBlockCounts;
  final int instrMethodCount=visitor.m_classInstrMethodCount;
  if ($assert.ENABLED)   $assert.ASSERT(blockCounts != null && blockCounts.length >= instrMethodCount,"invalid block count map");
  final int coverageFieldrefIndex=visitor.m_coverageFieldrefIndex;
  final int preclinitMethodrefIndex=visitor.m_preclinitMethodrefIndex;
  final int classNameConstantIndex=visitor.m_classNameConstantIndex;
  if ($assert.ENABLED) {
    $assert.ASSERT(coverageFieldrefIndex > 0,"invalid coverageFieldrefIndex");
    $assert.ASSERT(preclinitMethodrefIndex > 0,"invalid registerMethodrefIndex");
    $assert.ASSERT(classNameConstantIndex > 0,"invalid classNameConstantIndex");
  }
  buf.write3(_invokestatic,preclinitMethodrefIndex >>> 8,preclinitMethodrefIndex);
  CodeGen.push_int_value(buf,cls,visitor.m_methodID);
  buf.write(_aaload);
  CodeGen.store_local_object_var(buf,localVarIndex);
}
