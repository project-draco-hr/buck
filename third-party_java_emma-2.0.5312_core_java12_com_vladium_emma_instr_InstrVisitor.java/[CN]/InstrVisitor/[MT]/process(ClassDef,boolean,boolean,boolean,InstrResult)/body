{
  out.m_instrumented=false;
  out.m_descriptor=null;
  if (!(instrument || metadata))   return;
  if (cls.isInterface())   return;
 else {
    reset();
    m_cls=cls;
    m_instrument=instrument;
    m_metadata=metadata;
    m_ignoreAlreadyInstrumented=ignoreAlreadyInstrumented;
    visit((ClassDef)null,null);
    if (m_metadata) {
      setClassName(cls.getName());
      out.m_descriptor=new ClassDescriptor(m_classPackageName,m_className,m_classSignature,m_classSrcFileName,m_classMethodDescriptors);
    }
    out.m_instrumented=m_instrument;
  }
}
