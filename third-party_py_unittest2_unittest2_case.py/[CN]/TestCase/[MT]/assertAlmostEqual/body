def assertAlmostEqual(self, first, second, places=None, msg=None, delta=None):
    'Fail if the two objects are unequal as determined by their\n           difference rounded to the given number of decimal places\n           (default 7) and comparing to zero, or by comparing that the\n           between the two objects is more than the given delta.\n\n           Note that decimal places (from zero) are usually not the same\n           as significant digits (measured from the most signficant digit).\n\n           If the two objects compare equal then they will automatically\n           compare almost equal.\n        '
    if (first == second):
        return
    if ((delta is not None) and (places is not None)):
        raise TypeError('specify delta or places not both')
    if (delta is not None):
        if (abs((first - second)) <= delta):
            return
        standardMsg = ('%s != %s within %s delta' % (safe_repr(first), safe_repr(second), safe_repr(delta)))
    else:
        if (places is None):
            places = 7
        if (round(abs((second - first)), places) == 0):
            return
        standardMsg = ('%s != %s within %r places' % (safe_repr(first), safe_repr(second), places))
    msg = self._formatMessage(msg, standardMsg)
    raise self.failureException(msg)
