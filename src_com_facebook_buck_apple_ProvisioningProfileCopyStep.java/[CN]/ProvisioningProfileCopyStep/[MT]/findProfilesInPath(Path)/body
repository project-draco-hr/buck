{
  final ImmutableSet.Builder<ProvisioningProfileMetadata> profilesBuilder=ImmutableSet.builder();
  try {
    Files.walkFileTree(searchPath.toAbsolutePath(),new SimpleFileVisitor<Path>(){
      @Override public FileVisitResult visitFile(      Path file,      BasicFileAttributes attrs) throws IOException {
        if (file.toString().endsWith(".mobileprovision")) {
          try {
            ProvisioningProfileMetadata profile=ProvisioningProfileMetadata.fromProvisioningProfilePath(file);
            profilesBuilder.add(profile);
          }
 catch (          IOException|IllegalArgumentException e) {
            LOG.error(e,"Ignoring invalid or malformed .mobileprovision file");
          }
catch (          InterruptedException e) {
            throw new IOException(e);
          }
        }
        return FileVisitResult.CONTINUE;
      }
    }
);
  }
 catch (  IOException e) {
    if (e.getCause() instanceof InterruptedException) {
      throw ((InterruptedException)e.getCause());
    }
    LOG.error(e,"Error while searching for mobileprovision files");
  }
  return profilesBuilder.build();
}
