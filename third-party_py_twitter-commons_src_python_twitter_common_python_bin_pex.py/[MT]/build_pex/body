def build_pex(args, options):
    interpreter = interpreter_from_options(options)
    pex_builder = PEXBuilder(path=safe_mkdtemp(), interpreter=interpreter)
    pex_info = pex_builder.info
    pex_info.zip_safe = options.zip_safe
    pex_info.always_write_cache = options.always_write_cache
    pex_info.ignore_errors = options.ignore_errors
    pex_info.inherit_path = options.inherit_path
    installer = (WheelInstaller if options.use_wheel else EggInstaller)
    resolveds = requirement_resolver(options.requirements, obtainer=build_obtainer(options), interpreter=interpreter, platform=options.platform)
    if resolveds:
        log('Resolved distributions:', v=options.verbosity)
    for pkg in resolveds:
        log(('  %s' % pkg), v=options.verbosity)
        pex_builder.add_distribution(pkg)
        pex_builder.add_requirement(pkg.as_requirement())
    for source_dir in options.source_dirs:
        try:
            bdist = installer(source_dir).bdist()
        except installer.Error:
            die(('Failed to run installer for %s' % source_dir), CANNOT_DISTILL)
        pex_builder.add_dist_location(bdist)
    if (options.entry_point is not None):
        log(('Setting entry point to %s' % options.entry_point), v=options.verbosity)
        pex_builder.info.entry_point = options.entry_point
    else:
        log('Creating environment PEX.', v=options.verbosity)
    return pex_builder
