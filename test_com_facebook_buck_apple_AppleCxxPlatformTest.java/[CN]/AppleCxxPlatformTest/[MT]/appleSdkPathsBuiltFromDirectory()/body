{
  Path root=Paths.get("test/com/facebook/buck/apple/testdata/apple-cxx-platform");
  AppleSdkPaths appleSdkPaths=ImmutableAppleSdkPaths.builder().addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).setPlatformDeveloperPath(root.resolve("Platforms/iPhoneOS.platform/Developer")).setSdkPath(root.resolve("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk")).build();
  AppleCxxPlatform appleCxxPlatform=new AppleCxxPlatform(Platform.MACOS,ApplePlatform.IPHONEOS,"iphoneos8.0","7.0","armv7",appleSdkPaths);
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver());
  assertEquals(new Flavor("iphoneos8.0-armv7"),appleCxxPlatform.asFlavor());
  assertEquals(root.resolve("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang").toString(),appleCxxPlatform.getCc().getCommandPrefix(resolver).get(0));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-isysroot",root.resolve("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk").toString()));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-arch","armv7"));
  assertThat(appleCxxPlatform.getCflags(),hasConsecutiveItems("-mios-version-min=7.0"));
  assertEquals(root.resolve("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++").toString(),appleCxxPlatform.getCxx().getCommandPrefix(resolver).get(0));
  assertEquals(root.resolve("Platforms/iPhoneOS.platform/Developer/usr/bin/ar").toString(),appleCxxPlatform.getAr().getCommandPrefix(resolver).get(0));
}
