def apply_UUIDs_map(binary_path, dwarffile_path, uuids_map, verbose):
    tmp_binary_path = (binary_path + '_tmp')
    tmp_dwarffile_path = (dwarffile_path + '_tmp')
    shutil.copy(binary_path, tmp_binary_path)
    shutil.copy(dwarffile_path, tmp_dwarffile_path)
    binary_file = open(tmp_binary_path, 'r+b')
    dwarf_file = open(tmp_dwarffile_path, 'r+b')
    if verbose:
        print ('Temporary binary path: ' + tmp_binary_path)
        print ('Temporary dwarf  path: ' + tmp_dwarffile_path)
    for (old_uuid, new_uuid) in uuids_map.iteritems():
        update_UUID_in_file(binary_file, old_uuid.bytes, new_uuid.bytes, verbose)
        update_UUID_in_file(dwarf_file, old_uuid.bytes, new_uuid.bytes, verbose)
    binary_file.close()
    dwarf_file.close()
    check_UUIDs_have_been_replaced(tmp_binary_path, tmp_dwarffile_path, uuids_map, verbose)
    os.remove(binary_path)
    os.rename(tmp_binary_path, binary_path)
    os.remove(dwarffile_path)
    os.rename(tmp_dwarffile_path, dwarffile_path)
    return
