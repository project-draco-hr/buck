def test_do_not_override_overridden_builtins(self):
    "\n        We want to ensure that if you override something like java_binary, and then use\n        include_defs to get another file, you don't end up clobbering your override.\n        "
    build_defs = ProjectFile(self.project_root, path='BUILD_DEFS', contents=('old_get_base_path = get_base_path', 'def get_base_path(*args, **kwargs):', '  raise ValueError()', 'include_defs("//OTHER_DEFS")'))
    other_defs = ProjectFile(self.project_root, path='OTHER_DEFS', contents=())
    build_file = ProjectFile(self.project_root, path='BUCK', contents=('get_base_path()',))
    self.write_files(build_defs, other_defs, build_file)
    build_file_processor = self.create_build_file_processor(includes=[build_defs.name])
    build_file_processor.install_builtins(__builtin__.__dict__)
    self.assertRaises(ValueError, build_file_processor.process, build_file.root, build_file.prefix, build_file.path, set())
