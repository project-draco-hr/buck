{
  final ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"buck_events/test",tmp);
  workspace.setUp();
  WebServerBuckEventListener webServerBuckEventListener=createMock(WebServerBuckEventListener.class);
  webServerBuckEventListener.buildStarted(anyObject(BuildEvent.Started.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.buildProgressUpdated(anyObject(ProgressEvent.BuildProgressUpdated.class));
  EasyMock.expectLastCall().atLeastOnce();
  webServerBuckEventListener.buildFinished(anyObject(BuildEvent.Finished.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.parseStarted(anyObject(ParseEvent.Started.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.parsingProgressUpdated(anyObject(ProgressEvent.ParsingProgressUpdated.class));
  EasyMock.expectLastCall().atLeastOnce();
  webServerBuckEventListener.parseFinished(anyObject(ParseEvent.Finished.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.testAwaitingResults(anyObject(IndividualTestEvent.Started.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.testResultsAvailable(anyObject(IndividualTestEvent.Finished.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.testRunStarted(anyObject(TestRunEvent.Started.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.testRunCompleted(anyObject(TestRunEvent.Finished.class));
  EasyMock.expectLastCall().times(1);
  webServerBuckEventListener.outputTrace(anyObject(BuildId.class));
  EasyMock.expectLastCall().times(1);
  EasyMock.replay(webServerBuckEventListener);
  ProjectWorkspace.ProcessResult build=workspace.runBuckdCommand(new TestContext(),"test","//:simple_test");
  build.assertSuccess();
  verify(webServerBuckEventListener);
}
