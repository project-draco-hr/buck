{
  return getRule(targetNode).transform(new Function<IjLibraryRule,IjLibrary>(){
    @Override public IjLibrary apply(    IjLibraryRule rule){
      String libraryName=Util.intelliJLibraryName(targetNode.getBuildTarget());
      Preconditions.checkState(!uniqueLibraryNamesSet.contains(libraryName),"Trying to use the same library name for different targets.");
      IjLibrary.Builder libraryBuilder=IjLibrary.builder();
      rule.applyRule(targetNode,libraryBuilder);
      libraryBuilder.setName(libraryName);
      libraryBuilder.setTargets(ImmutableSet.<TargetNode<?>>of(targetNode));
      return libraryBuilder.build();
    }
  }
);
}
