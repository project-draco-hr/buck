{
  String xmlInput="<string name='name1'>1</string>" + "<plurals name='name1'>" + "<item quantity='one'>2</item>"+ "<item quantity='other'>3</item>"+ "</plurals>"+ "<string-array name='name1'>"+ "<item>4</item>"+ "<item>5</item>"+ "</string-array>";
  NodeList stringNodes=XmlDomParser.parse(createResourcesXml(xmlInput)).getElementsByTagName("string");
  NodeList pluralsNodes=XmlDomParser.parse(createResourcesXml(xmlInput)).getElementsByTagName("plurals");
  NodeList arrayNodes=XmlDomParser.parse(createResourcesXml(xmlInput)).getElementsByTagName("string-array");
  Map<Integer,String> stringMap=Maps.newTreeMap();
  Map<Integer,ImmutableMap<String,String>> pluralsMap=Maps.newTreeMap();
  Map<Integer,ImmutableList<String>> arraysMap=Maps.newTreeMap();
  CompileStringsStep step=createNonExecutingStep();
  step.addStringResourceNameToIdMap(ImmutableMap.of("name1",1));
  step.addPluralsResourceNameToIdMap(ImmutableMap.of("name1",2));
  step.addArrayResourceNameToIdMap(ImmutableMap.of("name1",3));
  step.scrapeStringNodes(stringNodes,stringMap);
  step.scrapePluralsNodes(pluralsNodes,pluralsMap);
  step.scrapeStringArrayNodes(arrayNodes,arraysMap);
  assertEquals("Incorrect map of resource id to string.",ImmutableMap.of(1,"1"),stringMap);
  assertEquals("Incorrect map of resource id to plurals.",ImmutableMap.of(2,ImmutableMap.of("one","2","other","3")),pluralsMap);
  assertEquals("Incorrect map of resource id to string arrays.",ImmutableMap.of(3,ImmutableList.of("4","5")),arraysMap);
}
