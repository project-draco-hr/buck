{
  Node node=basePathToNodeIndex.get(basePath);
  if (node.children == null) {
    return ImmutableList.of();
  }
 else {
    int basePathLength=basePath.length();
    final int lengthOfPrefixToStrip=basePathLength == 0 ? basePathLength : basePathLength + 1;
    return Iterables.transform(node.children,new Function<Node,String>(){
      @Override public String apply(      Node child){
        return child.basePath.substring(lengthOfPrefixToStrip);
      }
    }
);
  }
}
