{
  if (m_specs != null)   return m_specs;
 else {
    if ((m_filterList == null) || m_filterList.isEmpty()) {
      m_specs=IConstants.EMPTY_STRING_ARRAY;
    }
 else {
      final String[] values=new String[m_filterList.size()];
      int j=0;
      for (Iterator i=m_filterList.iterator(); i.hasNext(); ++j)       values[j]=((StringValue)i.next()).getValue();
      try {
        m_specs=Strings.mergeAT(values,COMMA_DELIMITERS,true);
      }
 catch (      IOException ioe) {
        throw (BuildException)SuppressableTask.newBuildException(m_task.getTaskName() + ": I/O exception while processing input",ioe,m_task.getLocation()).fillInStackTrace();
      }
    }
    return m_specs;
  }
}
