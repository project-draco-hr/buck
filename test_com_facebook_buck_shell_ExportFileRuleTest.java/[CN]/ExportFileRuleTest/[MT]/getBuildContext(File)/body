{
  return BuildContext.builder().setProjectRoot(root).setProjectFilesystem(new ProjectFilesystem(root)).setArtifactCache(EasyMock.createMock(ArtifactCache.class)).setEventBus(BuckEventBusFactory.newInstance()).setAndroidBootclasspathForAndroidPlatformTarget(Optional.<AndroidPlatformTarget>absent()).setJavaPackageFinder(new JavaPackageFinder(){
    @Override public String findJavaPackageFolderForPath(    String pathRelativeToProjectRoot){
      return null;
    }
    @Override public String findJavaPackageForPath(    String pathRelativeToProjectRoot){
      return null;
    }
  }
).setDependencyGraph(new DependencyGraph(new MutableDirectedGraph<BuildRule>())).setStepRunner(new StepRunner(){
    @Override public void runStep(    Step step) throws StepFailedException {
    }
    @Override public void runStepForBuildTarget(    Step step,    BuildTarget buildTarget) throws StepFailedException {
    }
    @Override public <T>ListenableFuture<T> runStepsAndYieldResult(    List<Step> steps,    Callable<T> interpretResults,    BuildTarget buildTarget){
      return null;
    }
    @Override public ListeningExecutorService getListeningExecutorService(){
      return null;
    }
  }
).build();
}
