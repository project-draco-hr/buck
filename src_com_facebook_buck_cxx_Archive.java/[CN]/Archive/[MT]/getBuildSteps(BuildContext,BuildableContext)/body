{
  buildableContext.recordArtifact(output);
  return ImmutableList.of(new MkdirStep(getProjectFilesystem(),output.getParent()),new RmStep(getProjectFilesystem(),output,true),new ArchiveStep(getProjectFilesystem(),archiver.getEnvironment(getResolver()),archiver.getCommandPrefix(getResolver()),output,getResolver().getAllAbsolutePaths(inputs)),new ShellStep(getProjectFilesystem().getRootPath()){
    @Override protected ImmutableList<String> getShellCommandInternal(    ExecutionContext context){
      return ImmutableList.<String>builder().addAll(ranlib.getCommandPrefix(getResolver())).add(output.toString()).build();
    }
    @Override public String getShortName(){
      return "ranlib";
    }
  }
,new FileScrubberStep(getProjectFilesystem(),output,archiver.getScrubbers()));
}
