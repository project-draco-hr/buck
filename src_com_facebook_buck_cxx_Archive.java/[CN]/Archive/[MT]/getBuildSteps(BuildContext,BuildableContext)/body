{
  buildableContext.recordArtifact(output);
  for (  SourcePath input : inputs) {
    Preconditions.checkState(getResolver().getFilesystem(input).getRootPath().equals(getProjectFilesystem().getRootPath()));
  }
  return ImmutableList.of(new MkdirStep(getProjectFilesystem(),output.getParent()),new RmStep(getProjectFilesystem(),output,true),new ArchiveStep(getProjectFilesystem(),archiver.getEnvironment(getResolver()),archiver.getCommandPrefix(getResolver()),contents,output,FluentIterable.from(inputs).transform(getResolver().getRelativePathFunction()).toList()),new RanlibStep(getProjectFilesystem(),ranlib.getEnvironment(getResolver()),ranlib.getCommandPrefix(getResolver()),output),new FileScrubberStep(getProjectFilesystem(),output,archiver.getScrubbers()));
}
