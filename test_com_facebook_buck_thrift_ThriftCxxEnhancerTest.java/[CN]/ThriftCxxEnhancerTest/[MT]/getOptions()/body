{
  ThriftConstructorArg arg=new ThriftConstructorArg();
  ImmutableSet<String> options;
  options=ImmutableSet.of();
  arg.cppOptions=Optional.of(options);
  assertEquals(getExpectedOptions(TARGET,options),ENHANCER_CPP.getOptions(TARGET,arg));
  arg.cpp2Options=Optional.of(options);
  assertEquals(getExpectedOptions(TARGET,options),ENHANCER_CPP2.getOptions(TARGET,arg));
  options=ImmutableSet.of("test","option");
  arg.cppOptions=Optional.of(options);
  assertEquals(getExpectedOptions(TARGET,options),ENHANCER_CPP.getOptions(TARGET,arg));
  arg.cpp2Options=Optional.of(options);
  assertEquals(getExpectedOptions(TARGET,options),ENHANCER_CPP.getOptions(TARGET,arg));
  arg.cppOptions=Optional.absent();
  assertEquals(getExpectedOptions(TARGET,ImmutableSet.<String>of()),ENHANCER_CPP.getOptions(TARGET,arg));
  arg.cpp2Options=Optional.absent();
  assertEquals(getExpectedOptions(TARGET,ImmutableSet.<String>of()),ENHANCER_CPP2.getOptions(TARGET,arg));
}
