{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  CxxBinaryBuilder cxxBinaryBuilder=new CxxBinaryBuilder(BuildTargetFactory.newInstance("//:dep"));
  CxxLibraryBuilder cxxLibraryBuilder=new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:lib")).setExportedDeps(ImmutableSortedSet.of(cxxBinaryBuilder.getTarget()));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraphFactory.newInstance(cxxLibraryBuilder.build(),cxxBinaryBuilder.build()),new DefaultTargetNodeToBuildRuleTransformer());
  cxxBinaryBuilder.build(resolver,filesystem);
  CxxLibrary cxxLibrary=(CxxLibrary)cxxLibraryBuilder.build(resolver,filesystem);
  assertThat(FluentIterable.from(cxxLibrary.getRuntimeDeps()).transform(HasBuildTarget.TO_TARGET).toSet(),hasItem(cxxBinaryBuilder.getTarget()));
}
