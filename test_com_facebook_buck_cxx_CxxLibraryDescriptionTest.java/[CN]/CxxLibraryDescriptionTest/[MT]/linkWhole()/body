{
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  CxxPlatform cxxPlatform=CxxLibraryBuilder.createDefaultPlatform();
  BuildTarget target=BuildTargetFactory.newInstance("//:test");
  Path staticLib=CxxDescriptionEnhancer.getStaticLibraryPath(target,cxxPlatform.getFlavor(),CxxSourceRuleFactory.PicType.PDC);
  Linker linker=cxxPlatform.getLd();
  Set<String> linkWholeFlags=Sets.newHashSet(linker.linkWhole(staticLib.toString()));
  linkWholeFlags.remove(staticLib.toString());
  CxxLibraryBuilder normalBuilder=new CxxLibraryBuilder(target);
  CxxLibrary normal=(CxxLibrary)normalBuilder.build(new BuildRuleResolver(),filesystem,TargetGraphFactory.newInstance(normalBuilder.build()));
  assertNotContains(normal.getNativeLinkableInput(cxxPlatform,Linker.LinkableDepType.STATIC).getArgs(),linkWholeFlags);
  CxxLibraryBuilder linkWholeBuilder=new CxxLibraryBuilder(target).setLinkWhole(true);
  CxxLibrary linkWhole=(CxxLibrary)linkWholeBuilder.build(new BuildRuleResolver(),filesystem,TargetGraphFactory.newInstance(linkWholeBuilder.build()));
  assertContains(linkWhole.getNativeLinkableInput(cxxPlatform,Linker.LinkableDepType.STATIC).getArgs(),linkWholeFlags);
}
