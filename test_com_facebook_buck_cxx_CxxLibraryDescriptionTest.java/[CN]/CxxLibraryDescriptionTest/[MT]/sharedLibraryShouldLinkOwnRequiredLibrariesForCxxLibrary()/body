{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  CxxPlatform platform=CxxLibraryBuilder.createDefaultPlatform();
  ImmutableSortedSet<FrameworkPath> libraries=ImmutableSortedSet.of(FrameworkPath.ofSourcePath(new FakeSourcePath("/some/path/libs.dylib")),FrameworkPath.ofSourcePath(new FakeSourcePath("/another/path/liba.dylib")));
  CxxLibraryBuilder libraryBuilder=new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:foo#shared"));
  libraryBuilder.setLibraries(libraries).setSrcs(ImmutableSortedSet.of(SourceWithFlags.of(new FakeSourcePath("foo.c"))));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(libraryBuilder.build());
  BuildRuleResolver resolver=new BuildRuleResolver(targetGraph,new DefaultTargetNodeToBuildRuleTransformer());
  CxxLibrary library=(CxxLibrary)libraryBuilder.build(resolver,filesystem,targetGraph);
  assertThat(library.getNativeLinkTargetInput(platform).getLibraries(),Matchers.<ImmutableSet<FrameworkPath>>equalTo(libraries));
}
