{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  CxxLibrary dep=(CxxLibrary)new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:dep")).build(resolver);
  CxxLibrary exportedDep=(CxxLibrary)new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:exported_dep")).build(resolver);
  CxxLibrary rule=(CxxLibrary)new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:rule")).setExportedDeps(ImmutableSortedSet.of(dep.getBuildTarget(),exportedDep.getBuildTarget())).build(resolver);
  assertThat(ImmutableList.copyOf(rule.getSharedNativeLinkTargetDeps(CxxLibraryBuilder.createDefaultPlatform())),Matchers.<NativeLinkable>hasItems(dep,exportedDep));
}
