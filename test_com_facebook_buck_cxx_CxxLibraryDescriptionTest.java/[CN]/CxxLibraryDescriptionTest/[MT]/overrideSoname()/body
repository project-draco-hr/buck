{
  BuildRuleResolver resolver=new BuildRuleResolver();
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  CxxPlatform cxxPlatform=CxxLibraryBuilder.createDefaultPlatform();
  String soname="test_soname";
  BuildTarget target=BuildTargetFactory.newInstance(String.format("//:rule#shared,%s",CxxPlatformUtils.DEFAULT_PLATFORM.getFlavor()));
  AbstractCxxSourceBuilder<CxxLibraryDescription.Arg> ruleBuilder=new CxxLibraryBuilder(target).setSoname(soname).setSrcs(ImmutableSortedSet.of(SourceWithFlags.of(new FakeSourcePath("foo.cpp"))));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(ruleBuilder.build());
  CxxLink rule=(CxxLink)ruleBuilder.build(resolver,filesystem,targetGraph);
  Linker linker=cxxPlatform.getLd();
  ImmutableList<String> sonameArgs=ImmutableList.copyOf(linker.soname(soname));
  assertThat(rule.getArgs(),Matchers.hasItems(sonameArgs.toArray(new String[sonameArgs.size()])));
}
