{
  ProcessExecutor executor=new ProcessExecutor(new TestConsole(Verbosity.ALL));
  final AtomicBoolean called=new AtomicBoolean(false);
  Function<Process,Void> handler=new Function<Process,Void>(){
    @Override public Void apply(    Process input){
      called.set(true);
      return null;
    }
  }
;
  String cmd=(Platform.detect() == Platform.WINDOWS) ? "ping -n 50 0.0.0.0" : "sleep 50";
  ProcessExecutorParams params=ProcessExecutorParams.ofCommand(makeCommandArray(cmd));
  ProcessExecutor.Result result=executor.launchAndExecute(params,ImmutableSet.<ProcessExecutor.Option>builder().build(),Optional.<String>absent(),Optional.of((long)100),Optional.of(handler));
  assertTrue("process was reported as timed out",result.isTimedOut());
  assertTrue("timeOutHandler was called when a timeout was hit",called.get());
}
