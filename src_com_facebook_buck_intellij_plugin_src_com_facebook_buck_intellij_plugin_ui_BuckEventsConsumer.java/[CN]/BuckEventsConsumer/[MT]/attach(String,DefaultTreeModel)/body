{
  mTreeModel=treeModel;
  mTarget=target;
  mCurrentBuildRootElement=new BuckTreeNodeBuild(mTarget);
  mTreeModel.setRoot(mCurrentBuildRootElement);
  mMainBuildStartTimestamp=0;
  mConnection=mProject.getMessageBus().connect();
  mConnection.subscribe(BuckProjectGenerationFinishedConsumer.PROJECT_GENERATION_FINISHED_CONSUMER,this);
  mConnection.subscribe(BuckProjectGenerationStartedConsumer.PROJECT_GENERATION_STARTED_CONSUMER,this);
  mConnection.subscribe(BuckProjectGenerationProgressConsumer.PROJECT_GENERATION_PROGRESS_CONSUMER,this);
  mConnection.subscribe(BuckBuildStartConsumer.BUCK_BUILD_START,this);
  mConnection.subscribe(BuckBuildEndConsumer.BUCK_BUILD_END,this);
  mConnection.subscribe(BuckBuildProgressUpdateConsumer.BUCK_BUILD_PROGRESS_UPDATE,this);
  mConnection.subscribe(RulesParsingStartConsumer.BUCK_PARSE_RULE_START,this);
  mConnection.subscribe(RulesParsingEndConsumer.BUCK_PARSE_RULE_END,this);
  mConnection.subscribe(RulesParsingProgressUpdateConsumer.BUCK_PARSE_PROGRESS_UPDATE,this);
  mConnection.subscribe(CompilerErrorConsumer.COMPILER_ERROR_CONSUMER,this);
  mConnection.subscribe(BuckConsoleEventConsumer.BUCK_CONSOLE_EVENT,this);
  mConnection.subscribe(TestRunStartedConsumer.BUCK_TEST_RUN_STARTED,this);
  mConnection.subscribe(TestRunCompleteConsumer.BUCK_TEST_RUN_COMPLETE,this);
  mConnection.subscribe(TestResultsAvailableConsumer.BUCK_TEST_RESULTS_AVAILABLE,this);
}
