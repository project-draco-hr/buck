{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      float duration=(mTestingEndTimestamp - mTestingStartTimestamp) / 1000;
      StringBuilder message=new StringBuilder("Testing ended, took " + duration + " seconds!\n");
      for (      TestResults testResults : mTestResultsList) {
        for (        TestCaseSummary testCaseSummary : testResults.getTestCases()) {
          long time=testCaseSummary.getTotalTime();
          String formattedTime;
          if (time >= 1000) {
            formattedTime=(time / 1000 + time % 1000) + "s";
          }
 else {
            formattedTime=time + "ms";
          }
          if (testCaseSummary.isSuccess() == true) {
            message.append("PASS  " + formattedTime + "  "+ testCaseSummary.getTestResults().size()+ " passed  "+ testCaseSummary.getTestCaseName()+ "\n");
          }
 else {
            int failureCount=0;
            StringBuilder failureMessage=new StringBuilder();
            for (            TestResultsSummary testResultSummary : testCaseSummary.getTestResults()) {
              if (!testResultSummary.isSuccess()) {
                failureMessage.append(testResultSummary.getStacktrace() + "\n");
                failureCount++;
              }
            }
            message.append("FAILED  " + formattedTime + "  "+ (testCaseSummary.getTestResults().size() - failureCount)+ " passed  "+ failureCount+ " failed  "+ testCaseSummary.getTestCaseName()+ "\n");
            message.append(failureMessage);
          }
        }
      }
      BuckEventsConsumer.this.mTestResults.setDetail(message.toString());
      BuckEventsConsumer.this.mTreeModel.reload();
      mTestResultsList.clear();
    }
  }
);
}
