{
  while (true) {
    int notAligned64bitRegAccess=0;
    int aligned64bitRegAccess=0;
    int notAligned64bitParamAccess=0;
    int aligned64bitParamAccess=0;
    int lastParameter=unreservedRegCount + reservedCount + reservedParameterCount;
    int firstParameter=lastParameter - paramSize;
    for (    DalvInsn insn : insns) {
      RegisterSpecList regs=insn.getRegisters();
      for (int usedRegIdx=0; usedRegIdx < regs.size(); usedRegIdx++) {
        RegisterSpec reg=regs.get(usedRegIdx);
        if (reg.isCategory2()) {
          boolean isParameter=reg.getReg() >= firstParameter;
          if (reg.isEvenRegister()) {
            if (isParameter) {
              aligned64bitParamAccess++;
            }
 else {
              aligned64bitRegAccess++;
            }
          }
 else {
            if (isParameter) {
              notAligned64bitParamAccess++;
            }
 else {
              notAligned64bitRegAccess++;
            }
          }
        }
      }
    }
    if (notAligned64bitParamAccess > aligned64bitParamAccess && notAligned64bitRegAccess > aligned64bitRegAccess) {
      addReservedRegisters(1);
    }
 else     if (notAligned64bitParamAccess > aligned64bitParamAccess) {
      addReservedParameters(1);
    }
 else     if (notAligned64bitRegAccess > aligned64bitRegAccess) {
      addReservedRegisters(1);
      if (paramSize != 0 && aligned64bitParamAccess > notAligned64bitParamAccess) {
        addReservedParameters(1);
      }
    }
 else {
      break;
    }
    if (!reserveRegisters(opcodes)) {
      break;
    }
  }
}
