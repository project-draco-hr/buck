{
  assumeTrue(Platform.detect() == Platform.MACOS);
  assumeTrue(AppleNativeIntegrationTestUtils.isApplePlatformAvailable(ApplePlatform.MACOSX));
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"apple_library_shared",tmp);
  workspace.setUp();
  ProjectWorkspace.ProcessResult result=workspace.runBuckCommand("build","//Libraries/TestLibrary:TestLibrary#shared,macosx-x86_64,dwarf-and-dsym","--config","cxx.cflags=-g");
  result.assertSuccess();
  Path output=tmp.getRootPath().resolve(BuckConstant.getGenDir()).resolve("Libraries/TestLibrary/TestLibrary#macosx-x86_64,shared").resolve("libLibraries_TestLibrary_TestLibrary.dylib");
  assertThat(Files.exists(output),is(true));
  Path dsymPath=tmp.getRootPath().resolve(BuckConstant.getGenDir()).resolve("Libraries/TestLibrary").resolve("TestLibrary#apple-dsym,macosx-x86_64,shared.dSYM");
  assertThat(Files.exists(dsymPath),is(true));
  AppleDsymTestUtil.checkDsymFileHasDebugSymbol("+[TestClass answer]",workspace,dsymPath);
}
