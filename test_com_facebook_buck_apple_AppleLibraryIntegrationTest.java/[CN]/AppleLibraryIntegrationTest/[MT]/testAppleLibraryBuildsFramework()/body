{
  assumeTrue(Platform.detect() == Platform.MACOS);
  assumeTrue(AppleNativeIntegrationTestUtils.isApplePlatformAvailable(ApplePlatform.MACOSX));
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"apple_library_builds_something",tmp);
  workspace.setUp();
  ProjectWorkspace.ProcessResult result=workspace.runBuckCommand("build","//Libraries/TestLibrary:TestLibrary#framework,macosx-x86_64");
  result.assertSuccess();
  Path frameworkPath=tmp.getRootPath().resolve(BuckConstant.GEN_DIR).resolve("Libraries/TestLibrary/" + "TestLibrary#framework,include-frameworks,macosx-x86_64,transitive-resources/" + "TestLibrary.framework");
  assertThat(Files.exists(frameworkPath),is(true));
  assertThat(Files.exists(frameworkPath.resolve("Contents/Info.plist")),is(true));
  Path libraryPath=frameworkPath.resolve("Contents/MacOS/TestLibrary");
  assertThat(Files.exists(libraryPath),is(true));
  assertThat(workspace.runCommand("file",libraryPath.toString()).getStdout().get(),containsString("dynamically linked shared library"));
}
