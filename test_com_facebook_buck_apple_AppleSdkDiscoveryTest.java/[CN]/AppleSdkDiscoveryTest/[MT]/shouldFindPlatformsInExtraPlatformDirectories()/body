{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"sdk-discovery-minimal",temp);
  workspace.setUp();
  Path root=workspace.getPath("");
  ProjectWorkspace emptyWorkspace=TestDataHelper.createProjectWorkspaceForScenario(this,"sdk-discovery-empty",temp);
  emptyWorkspace.setUp();
  Path path=emptyWorkspace.getPath("");
  ImmutableMap<String,AppleToolchain> toolchains=ImmutableMap.of("com.apple.dt.toolchain.XcodeDefault",getDefaultToolchain(path));
  AppleSdk macosx109Sdk=AppleSdk.builder().setName("macosx10.9").setVersion("10.9").setApplePlatform(ApplePlatform.MACOSX).addArchitectures("i386","x86_64").addAllToolchains(toolchains.values()).build();
  AppleSdkPaths macosx109Paths=AppleSdkPaths.builder().setDeveloperPath(path).addToolchainPaths(path.resolve("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(root.resolve("Platforms/MacOSX.platform")).setSdkPath(root.resolve("Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk")).build();
  ImmutableMap<AppleSdk,AppleSdkPaths> expected=ImmutableMap.<AppleSdk,AppleSdkPaths>builder().put(macosx109Sdk,macosx109Paths).put(macosx109Sdk.withName("macosx"),macosx109Paths).build();
  assertThat(AppleSdkDiscovery.discoverAppleSdkPaths(Optional.of(path),ImmutableList.of(root),toolchains),equalTo(expected));
}
