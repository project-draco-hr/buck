{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"sdk-discovery",temp);
  workspace.setUp();
  Path root=workspace.getPath("");
  createSymLinkIosSdks(root,"8.0");
  ImmutableAppleSdk macosx109Sdk=ImmutableAppleSdk.builder().name("macosx10.9").version("10.9").applePlatform(ApplePlatform.MACOSX).addArchitectures("i386","x86_64").build();
  ImmutableAppleSdkPaths macosx109Paths=ImmutableAppleSdkPaths.builder().addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).platformDeveloperPath(root.resolve("Platforms/MacOSX.platform/Developer")).sdkPath(root.resolve("Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk")).build();
  ImmutableAppleSdk iphoneos80Sdk=ImmutableAppleSdk.builder().name("iphoneos8.0").version("8.0").applePlatform(ApplePlatform.IPHONEOS).addArchitectures("armv7","arm64").addToolchains("com.apple.dt.toolchain.iOS8_0").build();
  ImmutableAppleSdkPaths iphoneos80Paths=ImmutableAppleSdkPaths.builder().addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).platformDeveloperPath(root.resolve("Platforms/iPhoneOS.platform/Developer")).sdkPath(root.resolve("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk")).build();
  ImmutableAppleSdk iphonesimulator80Sdk=ImmutableAppleSdk.builder().name("iphonesimulator8.0").version("8.0").applePlatform(ApplePlatform.IPHONESIMULATOR).addArchitectures("i386","x86_64").addToolchains("com.apple.dt.toolchain.iOS8_0").build();
  ImmutableAppleSdkPaths iphonesimulator80Paths=ImmutableAppleSdkPaths.builder().addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).platformDeveloperPath(root.resolve("Platforms/iPhoneSimulator.platform/Developer")).sdkPath(root.resolve("Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk")).build();
  ImmutableMap<String,Path> toolchainPaths=ImmutableMap.of("com.apple.dt.toolchain.XcodeDefault",root.resolve("Toolchains/XcodeDefault.xctoolchain"));
  ImmutableMap<AppleSdk,AppleSdkPaths> expected=ImmutableMap.<AppleSdk,AppleSdkPaths>builder().put(macosx109Sdk,macosx109Paths).put(macosx109Sdk.withName("macosx"),macosx109Paths).put(iphoneos80Sdk,iphoneos80Paths).put(iphoneos80Sdk.withName("iphoneos"),iphoneos80Paths).put(iphonesimulator80Sdk,iphonesimulator80Paths).put(iphonesimulator80Sdk.withName("iphonesimulator"),iphonesimulator80Paths).build();
  assertThat(AppleSdkDiscovery.discoverAppleSdkPaths(root,toolchainPaths),equalTo(expected));
}
