{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"sdk-discovery",temp);
  workspace.setUp();
  Path root=workspace.getPath("");
  Path versionPlistPath=workspace.getPath("version.plist");
  createSymLinkIosSdks(root,"8.0");
  AppleSdk macosx109Sdk=AppleSdk.builder().setName("macosx10.9").setVersion("10.9").setXcodeVersion("6A2008a").setApplePlatform(ApplePlatform.builder().setName(ApplePlatform.Name.MACOSX).build()).addArchitectures("i386","x86_64").build();
  AppleSdkPaths macosx109Paths=AppleSdkPaths.builder().setDeveloperPath(root).addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(root.resolve("Platforms/MacOSX.platform")).setSdkPath(root.resolve("Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk")).build();
  AppleSdk iphoneos80Sdk=AppleSdk.builder().setName("iphoneos8.0").setVersion("8.0").setXcodeVersion("6A2008a").setApplePlatform(ApplePlatform.builder().setName(ApplePlatform.Name.IPHONEOS).build()).addArchitectures("armv7","arm64").addToolchains("com.apple.dt.toolchain.iOS8_0").build();
  AppleSdkPaths iphoneos80Paths=AppleSdkPaths.builder().setDeveloperPath(root).addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(root.resolve("Platforms/iPhoneOS.platform")).setSdkPath(root.resolve("Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk")).build();
  AppleSdk iphonesimulator80Sdk=AppleSdk.builder().setName("iphonesimulator8.0").setVersion("8.0").setXcodeVersion("6A2008a").setApplePlatform(ApplePlatform.builder().setName(ApplePlatform.Name.IPHONESIMULATOR).build()).addArchitectures("i386","x86_64").addToolchains("com.apple.dt.toolchain.iOS8_0").build();
  AppleSdkPaths iphonesimulator80Paths=AppleSdkPaths.builder().setDeveloperPath(root).addToolchainPaths(root.resolve("Toolchains/XcodeDefault.xctoolchain")).setPlatformPath(root.resolve("Platforms/iPhoneSimulator.platform")).setSdkPath(root.resolve("Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk")).build();
  ImmutableMap<String,Path> toolchainPaths=ImmutableMap.of("com.apple.dt.toolchain.XcodeDefault",root.resolve("Toolchains/XcodeDefault.xctoolchain"));
  ImmutableMap<AppleSdk,AppleSdkPaths> expected=ImmutableMap.<AppleSdk,AppleSdkPaths>builder().put(macosx109Sdk,macosx109Paths).put(macosx109Sdk.withName("macosx"),macosx109Paths).put(iphoneos80Sdk,iphoneos80Paths).put(iphoneos80Sdk.withName("iphoneos"),iphoneos80Paths).put(iphonesimulator80Sdk,iphonesimulator80Paths).put(iphonesimulator80Sdk.withName("iphonesimulator"),iphonesimulator80Paths).build();
  assertThat(AppleSdkDiscovery.discoverAppleSdkPaths(root,ImmutableList.<Path>of(),versionPlistPath,toolchainPaths),equalTo(expected));
}
