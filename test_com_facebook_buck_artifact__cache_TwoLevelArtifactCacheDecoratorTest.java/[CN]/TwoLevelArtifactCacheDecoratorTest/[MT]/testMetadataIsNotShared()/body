{
  try (InMemoryArtifactCache inMemoryArtifactCache=new InMemoryArtifactCache();TwoLevelArtifactCacheDecorator twoLevelCache=new TwoLevelArtifactCacheDecorator(inMemoryArtifactCache,new ProjectFilesystem(tmp.getRoot()),BuckEventBusFactory.newInstance(),MoreExecutors.newDirectExecutorService(),true,0L,Optional.<Long>absent())){
    LazyPath dummyFile=LazyPath.ofInstance(tmp.newFile());
    final String testMetadataKey="testMetaKey";
    twoLevelCache.store(ArtifactInfo.builder().addRuleKeys(dummyRuleKey).setMetadata(ImmutableMap.of(testMetadataKey,"value1")).build(),BorrowablePath.notBorrowablePath(dummyFile.get()));
    twoLevelCache.store(ArtifactInfo.builder().addRuleKeys(dummyRuleKey2).setMetadata(ImmutableMap.of(testMetadataKey,"value2")).build(),BorrowablePath.notBorrowablePath(dummyFile.get()));
    CacheResult fetch1=twoLevelCache.fetch(dummyRuleKey,dummyFile);
    CacheResult fetch2=twoLevelCache.fetch(dummyRuleKey2,dummyFile);
    assertEquals(fetch1.getMetadata().get(TwoLevelArtifactCacheDecorator.METADATA_KEY),fetch2.getMetadata().get(TwoLevelArtifactCacheDecorator.METADATA_KEY));
    assertNotEquals(fetch1.getMetadata().get(testMetadataKey),fetch2.getMetadata().get(testMetadataKey));
  }
 }
