{
  JavaCompiler compiler=createCompiler(context,resolver);
  StandardJavaFileManager fileManager=fileManagerFactory.or(DEFAULT_FILE_MANAGER_FACTORY).create(compiler);
  try {
    Iterable<? extends JavaFileObject> compilationUnits;
    try {
      compilationUnits=createCompilationUnits(fileManager,filesystem.getAbsolutifier(),javaSourceFilePaths);
    }
 catch (    IOException e) {
      LOG.warn(e,"Error building compilation units");
      return 1;
    }
    try {
      return buildWithClasspath(context,filesystem,invokingRule,options,safeAnnotationProcessors,javaSourceFilePaths,pathToSrcsList,compiler,usedClassesFileWriter,fileManager,compilationUnits);
    }
  finally {
      close(compilationUnits);
    }
  }
  finally {
    try {
      fileManager.close();
    }
 catch (    IOException e) {
      LOG.warn(e,"Unable to close java filemanager. We may be leaking memory.");
    }
  }
}
