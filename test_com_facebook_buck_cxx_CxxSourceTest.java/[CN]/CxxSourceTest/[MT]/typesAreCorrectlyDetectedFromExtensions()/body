{
  assertEquals(Optional.of(CxxSource.Type.C),CxxSource.Type.fromExtension("c"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("c++"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("cc"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("cp"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("cxx"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("cpp"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("CPP"));
  assertEquals(Optional.of(CxxSource.Type.CXX),CxxSource.Type.fromExtension("C"));
  assertEquals(Optional.of(CxxSource.Type.C_CPP_OUTPUT),CxxSource.Type.fromExtension("i"));
  assertEquals(Optional.of(CxxSource.Type.CXX_CPP_OUTPUT),CxxSource.Type.fromExtension("ii"));
  assertEquals(Optional.of(CxxSource.Type.ASSEMBLER),CxxSource.Type.fromExtension("s"));
  assertEquals(Optional.of(CxxSource.Type.ASSEMBLER_WITH_CPP),CxxSource.Type.fromExtension("S"));
}
