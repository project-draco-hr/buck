{
  ProjectFilesystem filesystem=params.getCell().getFilesystem();
  if (distributedBuildStateFile != null) {
    Path stateDumpPath=Paths.get(distributedBuildStateFile);
    TTransport transport;
    boolean loading=Files.exists(stateDumpPath);
    if (loading) {
      transport=new TIOStreamTransport(filesystem.newFileInputStream(stateDumpPath));
    }
 else {
      transport=new TIOStreamTransport(filesystem.newFileOutputStream(stateDumpPath));
    }
    transport=new TZlibTransport(transport);
    TProtocol protocol=new TTupleProtocol(transport);
    try {
      if (loading) {
        DistributedBuildState state=DistributedBuildState.load(protocol);
        BuckConfig buckConfig=state.createBuckConfig(filesystem);
        params.getBuckEventBus().post(ConsoleEvent.info("Done loading state. Aliases: %s",buckConfig.getAliases()));
      }
 else {
        BuckConfig buckConfig=params.getBuckConfig();
        BuildJobState jobState=DistributedBuildState.dump(buckConfig);
        jobState.write(protocol);
        transport.flush();
      }
    }
 catch (    TException e) {
      throw new RuntimeException(e);
    }
 finally {
      transport.close();
    }
  }
  DistributedBuild build=new DistributedBuild(new DistBuildService(new DistBuildConfig(params.getBuckConfig()),params.getBuckEventBus()));
  return build.executeAndPrintFailuresToEventBus();
}
