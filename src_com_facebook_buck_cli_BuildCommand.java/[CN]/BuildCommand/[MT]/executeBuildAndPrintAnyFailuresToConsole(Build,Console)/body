{
  Set<BuildRule> rulesToBuild=build.getDependencyGraph().getNodesWithNoIncomingEdges();
  int exitCode;
  try {
    build.executeBuild(rulesToBuild).get();
    exitCode=0;
  }
 catch (  IOException e) {
    console.printBuildFailureWithoutStacktrace(e);
    exitCode=1;
  }
catch (  StepFailedException e) {
    console.printBuildFailureWithoutStacktrace(e);
    exitCode=e.getExitCode();
  }
catch (  ExecutionException e) {
    Throwable cause=e.getCause();
    if (cause instanceof HumanReadableException) {
      throw ((HumanReadableException)cause);
    }
 else     if (cause instanceof ExceptionWithHumanReadableMessage) {
      throw new HumanReadableException((ExceptionWithHumanReadableMessage)cause);
    }
 else {
      if (cause instanceof RuntimeException) {
        console.printBuildFailureWithStacktrace(e);
      }
 else {
        console.printBuildFailureWithoutStacktrace(e);
      }
      exitCode=1;
    }
  }
catch (  InterruptedException e) {
    console.printBuildFailureWithoutStacktrace(e);
    exitCode=1;
  }
  return exitCode;
}
