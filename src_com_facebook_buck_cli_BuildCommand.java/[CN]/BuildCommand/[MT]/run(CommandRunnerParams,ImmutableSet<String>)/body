{
  if (getArguments().isEmpty()) {
    params.getConsole().printBuildFailure("Must specify at least one build target.");
    ImmutableSet<String> aliases=params.getBuckConfig().getAliases();
    if (!aliases.isEmpty()) {
      params.getBuckEventBus().post(ConsoleEvent.severe(String.format("Try building one of the following targets:\n%s",Joiner.on(' ').join(Iterators.limit(aliases.iterator(),10)))));
    }
    return 1;
  }
  if (!additionalTargets.isEmpty()) {
    this.arguments.addAll(additionalTargets);
  }
  BuildEvent.Started started=BuildEvent.started(getArguments());
  if (params.getParser().getParseStartTime().isPresent()) {
    params.getBuckEventBus().post(started,params.getParser().getParseStartTime().get());
  }
 else {
    params.getBuckEventBus().post(started);
  }
  try (CommandThreadManager pool=new CommandThreadManager("Build",params.getBuckConfig().getWorkQueueExecutionOrder(),getConcurrencyLimit(params.getBuckConfig()))){
    Pair<ActionGraph,BuildRuleResolver> actionGraphAndResolver=createActionGraphAndResolver(params,pool.getExecutor());
    if (actionGraphAndResolver == null) {
      return 1;
    }
    int exitCode=executeBuild(params,actionGraphAndResolver,pool.getExecutor());
    params.getBuckEventBus().post(BuildEvent.finished(started,exitCode));
    return exitCode;
  }
 }
