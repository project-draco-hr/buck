{
  if (!additionalTargets.isEmpty()) {
    this.arguments.addAll(additionalTargets);
  }
  BuildEvent.Started started=BuildEvent.started(getArguments(),useDistributedBuild);
  if (params.getParser().getParseStartTime().isPresent()) {
    params.getBuckEventBus().post(started,params.getParser().getParseStartTime().get());
  }
 else {
    params.getBuckEventBus().post(started);
  }
  int exitCode;
  try {
    TargetGraphAndBuildTargets targetGraphAndBuildTargets=createTargetGraph(params,executorService);
    ActionGraphAndResolver actionGraphAndResolver=createActionGraphAndResolver(params,targetGraphAndBuildTargets);
    if (useDistributedBuild) {
      exitCode=executeDistributedBuild(params,targetGraphAndBuildTargets,actionGraphAndResolver,executorService);
    }
 else {
      exitCode=executeLocalBuild(params,actionGraphAndResolver,executorService);
    }
    if (exitCode == 0 && (showOutput || showFullOutput || showRuleKey)) {
      showOutputs(params,actionGraphAndResolver);
    }
  }
 catch (  ActionGraphCreationException e) {
    params.getConsole().printBuildFailure(e.getMessage());
    exitCode=1;
  }
  params.getBuckEventBus().post(BuildEvent.finished(started,exitCode));
  return exitCode;
}
