{
  Verbosity verbosity=console.getVerbosity();
  Logging.setLoggingLevelForVerbosity(verbosity);
  try {
    buildTargets=getBuildTargets(options.getArgumentsFormattedAsBuildTargets());
  }
 catch (  NoSuchBuildTargetException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (buildTargets.isEmpty()) {
    console.printBuildFailure("Must specify at least one build target.");
    return 1;
  }
  getBuckEventBus().getEventBus().post(BuildEvent.started(buildTargets));
  DependencyGraph dependencyGraph;
  try {
    dependencyGraph=getParser().parseBuildFilesForTargets(buildTargets,options.getDefaultIncludes(),getBuckEventBus());
  }
 catch (  NoSuchBuildTargetException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  ArtifactCache artifactCache=getArtifactCache();
  build=options.createBuild(options.getBuckConfig(),dependencyGraph,getProjectFilesystem(),artifactCache,console,getBuckEventBus());
  getStdErr().printf("BUILDING %s\n",Joiner.on(' ').join(buildTargets));
  int exitCode=0;
  try {
    exitCode=executeBuildAndPrintAnyFailuresToConsole(build,console);
  }
  finally {
    build.getStepRunner().getListeningExecutorService().shutdownNow();
  }
  getBuckEventBus().getEventBus().post(BuildEvent.finished(buildTargets,exitCode));
  if (exitCode != 0) {
    return exitCode;
  }
  console.getAnsi().printlnHighlightedSuccessText(getStdErr(),"BUILD SUCCESSFUL");
  return 0;
}
