{
  if (getArguments().isEmpty()) {
    params.getConsole().printBuildFailure("Must specify at least one build target.");
    ImmutableSet<String> aliases=params.getBuckConfig().getAliases();
    if (!aliases.isEmpty()) {
      params.getBuckEventBus().post(ConsoleEvent.severe(String.format("Try building one of the following targets:\n%s",Joiner.on(' ').join(Iterators.limit(aliases.iterator(),10)))));
    }
    return null;
  }
  Pair<ActionGraph,BuildRuleResolver> actionGraphAndResolver;
  try {
    Pair<ImmutableSet<BuildTarget>,TargetGraph> result=params.getParser().buildTargetGraphForTargetNodeSpecs(parseArgumentsAsTargetNodeSpecs(params.getBuckConfig(),getArguments()),new ParserConfig(params.getBuckConfig()),params.getBuckEventBus(),params.getConsole(),params.getEnvironment(),getEnableProfiling());
    buildTargets=result.getFirst();
    buildTargetsHaveBeenCalculated=true;
    TargetGraphToActionGraph targetGraphToActionGraph=new TargetGraphToActionGraph(params.getBuckEventBus(),new BuildTargetNodeToBuildRuleTransformer(),params.getFileHashCache());
    actionGraphAndResolver=Preconditions.checkNotNull(targetGraphToActionGraph.apply(result.getSecond()));
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    params.getBuckEventBus().post(ConsoleEvent.severe(MoreExceptions.getHumanReadableOrLocalizedMessage(e)));
    return null;
  }
  if (justBuildTarget != null) {
    BuildTarget explicitTarget=BuildTargetParser.INSTANCE.parse(justBuildTarget,BuildTargetPatternParser.fullyQualified(),params.getCell().getCellRoots());
    Iterable<BuildRule> actionGraphRules=Preconditions.checkNotNull(actionGraphAndResolver.getFirst().getNodes());
    ImmutableSet<BuildTarget> actionGraphTargets=ImmutableSet.copyOf(Iterables.transform(actionGraphRules,HasBuildTarget.TO_TARGET));
    if (!actionGraphTargets.contains(explicitTarget)) {
      params.getBuckEventBus().post(ConsoleEvent.severe("Targets specified via `--just-build` must be a subset of action graph."));
      return null;
    }
    buildTargets=ImmutableSet.of(explicitTarget);
  }
  return actionGraphAndResolver;
}
