{
  Set<BuildRule> baseBuildRules=FluentIterable.from(buildTargets).transform(new Function<HasBuildTarget,BuildRule>(){
    @Override public BuildRule apply(    HasBuildTarget hasBuildTarget){
      return Preconditions.checkNotNull(actionGraph.findBuildRuleByTarget(hasBuildTarget.getBuildTarget()));
    }
  }
).toSet();
  Set<BuildRule> allBuildRules=Sets.newHashSet();
  for (  BuildRule rule : baseBuildRules) {
    addTransitiveDepsForRule(rule,allBuildRules);
  }
  allBuildRules.addAll(baseBuildRules);
  return allBuildRules.size();
}
