{
  ArtifactCache artifactCache=getArtifactCache();
  try {
    buildTargets=getBuildTargets(options.getArgumentsFormattedAsBuildTargets());
  }
 catch (  NoSuchBuildTargetException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (buildTargets.isEmpty()) {
    console.printBuildFailure("Must specify at least one build target.");
    ImmutableSet<String> aliases=options.getBuckConfig().getAliases();
    if (!aliases.isEmpty()) {
      console.getStdErr().println(String.format("Try building one of the following targets:\n%s",Joiner.on(' ').join(Iterators.limit(aliases.iterator(),10))));
    }
    return 1;
  }
  if (getParser().getParseStartTime().isPresent()) {
    getBuckEventBus().post(BuildEvent.started(buildTargets),getParser().getParseStartTime().get());
  }
 else {
    getBuckEventBus().post(BuildEvent.started(buildTargets));
  }
  ActionGraph actionGraph;
  try {
    actionGraph=getParser().buildTargetGraphForBuildTargets(buildTargets,options.getDefaultIncludes(),getBuckEventBus(),console,environment,options.getEnableProfiling()).getActionGraph();
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  int numRules=getNumRulesToBuild(buildTargets,actionGraph);
  getBuckEventBus().post(BuildEvent.ruleCountCalculated(buildTargets,numRules));
  build=options.createBuild(options.getBuckConfig(),actionGraph,getProjectFilesystem(),getAndroidDirectoryResolver(),getBuildEngine(),artifactCache,console,getBuckEventBus(),Optional.<TargetDevice>absent(),getCommandRunnerParams().getPlatform(),getCommandRunnerParams().getEnvironment(),getCommandRunnerParams().getObjectMapper(),getCommandRunnerParams().getClock());
  int exitCode=0;
  try {
    exitCode=executeBuildAndPrintAnyFailuresToConsole(buildTargets,build,options,console);
  }
  finally {
    build.close();
  }
  getBuckEventBus().post(BuildEvent.finished(buildTargets,exitCode));
  return exitCode;
}
