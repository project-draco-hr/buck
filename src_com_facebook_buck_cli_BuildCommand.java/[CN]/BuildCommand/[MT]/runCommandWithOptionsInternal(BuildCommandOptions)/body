{
  ArtifactCache artifactCache=getArtifactCache();
  buildTargets=getBuildTargets(options.getArgumentsFormattedAsBuildTargets());
  if (buildTargets.isEmpty()) {
    console.printBuildFailure("Must specify at least one build target.");
    ImmutableSet<String> aliases=options.getBuckConfig().getAliases();
    if (!aliases.isEmpty()) {
      console.getStdErr().println(String.format("Try building one of the following targets:\n%s",Joiner.on(' ').join(Iterators.limit(aliases.iterator(),10))));
    }
    return 1;
  }
  if (getParser().getParseStartTime().isPresent()) {
    getBuckEventBus().post(BuildEvent.started(buildTargets),getParser().getParseStartTime().get());
  }
 else {
    getBuckEventBus().post(BuildEvent.started(buildTargets));
  }
  ActionGraph actionGraph;
  try {
    TargetGraph targetGraph=getParser().buildTargetGraphForBuildTargets(buildTargets,new ParserConfig(options.getBuckConfig()),getBuckEventBus(),console,environment,options.getEnableProfiling());
    actionGraph=targetGraphTransformer.apply(targetGraph);
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  try (CommandThreadManager pool=new CommandThreadManager("Build",options.getConcurrencyLimit());Build build=options.createBuild(options.getBuckConfig(),actionGraph,getProjectFilesystem(),getAndroidPlatformTargetSupplier(),new CachingBuildEngine(pool.getExecutor(),options.getBuckConfig().getSkipLocalBuildChainDepth().or(1L)),artifactCache,console,getBuckEventBus(),Optional.<TargetDevice>absent(),getCommandRunnerParams().getPlatform(),getCommandRunnerParams().getEnvironment(),getCommandRunnerParams().getObjectMapper(),getCommandRunnerParams().getClock())){
    lastBuild=build;
    int exitCode=build.executeAndPrintFailuresToConsole(buildTargets,options.isKeepGoing(),console,options.getPathToBuildReport());
    getBuckEventBus().post(BuildEvent.finished(buildTargets,exitCode));
    return exitCode;
  }
 }
