{
  Iterable<GroupedSource> sources=ImmutableList.of(GroupedSource.ofSourcePath(new TestSourcePath("foo.h")));
{
    BuildTarget testBuildTarget=BuildTarget.builder("//foo","lib").build();
    NewNativeTargetProjectMutator mutator=mutatorWithCommonDefaults(testBuildTarget);
    mutator.setShouldGenerateCopyHeadersPhase(false).setSources(sources,ImmutableMap.<SourcePath,String>of());
    NewNativeTargetProjectMutator.Result result=mutator.buildTargetAndAddToProject(generatedProject);
    assertThat("copy headers phase should be omitted",Iterables.filter(result.target.getBuildPhases(),PBXHeadersBuildPhase.class),emptyIterable());
  }
{
    BuildTarget testBuildTarget=BuildTarget.builder("//foo","lib").build();
    NewNativeTargetProjectMutator mutator=mutatorWithCommonDefaults(testBuildTarget);
    mutator.setShouldGenerateCopyHeadersPhase(true).setSources(sources,ImmutableMap.<SourcePath,String>of());
    NewNativeTargetProjectMutator.Result result=mutator.buildTargetAndAddToProject(generatedProject);
    assertThat("copy headers phase should be generated",Iterables.filter(result.target.getBuildPhases(),PBXHeadersBuildPhase.class),not(emptyIterable()));
  }
}
