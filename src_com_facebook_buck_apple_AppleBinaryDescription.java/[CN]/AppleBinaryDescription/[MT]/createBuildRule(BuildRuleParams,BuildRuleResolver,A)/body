{
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  TargetSources targetSources=TargetSources.ofAppleSources(pathResolver,args.srcs.get());
  Optional<BuildRule> flavoredRule=AbstractAppleNativeTargetBuildRuleDescriptions.createFlavoredRule(params,resolver,args,appleConfig,pathResolver,targetSources);
  if (flavoredRule.isPresent()) {
    return flavoredRule.get();
  }
  CxxBinaryDescription.Arg delegateArg=delegate.createUnpopulatedConstructorArg();
  CxxLibraryDescription.TypeAndPlatform typeAndPlatform=CxxLibraryDescription.getTypeAndPlatform(params.getBuildTarget(),cxxPlatformFlavorDomain);
  Optional<AppleSdkPaths> appleSdkPaths=Optional.fromNullable(appleCxxPlatformsToAppleSdkPaths.get(typeAndPlatform.getPlatform()));
  AbstractAppleNativeTargetBuildRuleDescriptions.populateCxxConstructorArg(delegateArg,args,params.getBuildTarget(),targetSources,appleSdkPaths);
  return delegate.createBuildRule(params,resolver,delegateArg);
}
