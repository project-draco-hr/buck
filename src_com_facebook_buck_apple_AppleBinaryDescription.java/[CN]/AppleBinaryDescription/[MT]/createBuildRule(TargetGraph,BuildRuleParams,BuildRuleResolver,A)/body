{
  if (params.getBuildTarget().getFlavors().contains(APP_FLAVOR)) {
    if (!args.infoPlist.isPresent()) {
      throw new HumanReadableException("Cannot create application for apple_binary '%s':\n","No value specified for 'info_plist' attribute.",params.getBuildTarget().getUnflavoredBuildTarget());
    }
    if (!AppleDescriptions.INCLUDE_FRAMEWORKS.getValue(params.getBuildTarget()).isPresent()) {
      CxxPlatform cxxPlatform=cxxPlatformFlavorDomain.getValue(params.getBuildTarget()).or(defaultCxxPlatform);
      ApplePlatform applePlatform=Preconditions.checkNotNull(platformFlavorsToAppleCxxPlatforms.get(cxxPlatform.getFlavor())).getAppleSdk().getApplePlatform();
      if (applePlatform.getAppIncludesFrameworks()) {
        return resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleDescriptions.INCLUDE_FRAMEWORKS_FLAVOR).build());
      }
      return resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleDescriptions.NO_INCLUDE_FRAMEWORKS_FLAVOR).build());
    }
    Optional<AppleDebugFormat> flavoredDebugInfoFormat=AppleDebugFormat.FLAVOR_DOMAIN.getValue(params.getBuildTarget());
    BuildTarget binaryTarget=params.withoutFlavor(APP_FLAVOR).getBuildTarget();
    return AppleDescriptions.createAppleBundle(cxxPlatformFlavorDomain,defaultCxxPlatform,platformFlavorsToAppleCxxPlatforms,targetGraph,params,resolver,codeSignIdentityStore,provisioningProfileStore,binaryTarget,Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.APP),Optional.<String>absent(),args.infoPlist.get(),args.infoPlistSubstitutions,args.deps.get(),args.getTests(),flavoredDebugInfoFormat.or(defaultDebugInfoFormat));
  }
  return createBinary(targetGraph,params,resolver,args);
}
