{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"interactive_report",temporaryFolder);
  workspace.setUp();
  ProjectFilesystem filesystem=workspace.asCell().getFilesystem();
  ObjectMapper objectMapper=ObjectMappers.newDefaultInstance();
  BuckConfig buckConfig=workspace.asCell().getBuckConfig();
  DefectReporter defectReporter=new DefectReporter(filesystem,objectMapper,RageBuckConfig.create(buckConfig));
  CapturingPrintStream outputStream=new CapturingPrintStream();
  ByteArrayInputStream inputStream=new ByteArrayInputStream("report text\n0,1\n".getBytes("UTF-8"));
  InteractiveReport interactiveReport=new InteractiveReport(defectReporter,filesystem,outputStream,inputStream,TestBuildEnvironmentDescription.INSTANCE,VcsInfoCollector.create(new NoOpCmdLineInterface()));
  DefectSubmitResult defectSubmitResult=interactiveReport.collectAndSubmitResult();
  Path reportFile=filesystem.resolve(defectSubmitResult.getReportLocalLocation().get());
  ZipInspector zipInspector=new ZipInspector(reportFile);
  zipInspector.assertFileExists("report.json");
  zipInspector.assertFileExists("buck-out/log/buck-0.log");
  zipInspector.assertFileExists("buck-out/log/buck-1.log");
}
