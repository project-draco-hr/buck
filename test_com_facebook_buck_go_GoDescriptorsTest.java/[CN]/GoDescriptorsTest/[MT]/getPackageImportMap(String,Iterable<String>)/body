{
  return ImmutableMap.copyOf(FluentIterable.from(GoDescriptors.getPackageImportMap(Paths.get(basePackage),FluentIterable.from(packages).transform(MorePaths.TO_PATH)).entrySet()).transform(new Function<Map.Entry<Path,Path>,Map.Entry<String,String>>(){
    @Override public Map.Entry<String,String> apply(    Map.Entry<Path,Path> input){
      return Maps.immutableEntry(input.getKey().toString(),input.getValue().toString());
    }
  }
));
}
