{
  BuildTarget target=createAggregatedPreprocessDepsBuildTarget();
  Optional<DependencyAggregation> existingRule=getResolver().getRuleOptionalWithType(target,DependencyAggregation.class);
  if (existingRule.isPresent()) {
    return existingRule.get();
  }
 else {
    BuildRuleParams params=getParams().copyWithChanges(target,Suppliers.ofInstance(getPreprocessDeps()),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()));
    DependencyAggregation rule=new DependencyAggregation(params,getPathResolver());
    getResolver().addToIndex(rule);
    return rule;
  }
}
