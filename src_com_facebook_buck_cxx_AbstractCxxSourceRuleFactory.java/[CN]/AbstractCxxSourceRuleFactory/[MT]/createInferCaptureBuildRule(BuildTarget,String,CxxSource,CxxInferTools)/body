{
  Preconditions.checkArgument(CxxSourceTypes.isPreprocessableType(source.getType()));
  LOG.verbose("Creating preprocessed InferCapture build rule %s for %s",target,source);
  CxxInferCapture result=new CxxInferCapture(getParams().copyWithChanges(target,Suppliers.ofInstance(computeSourcePreprocessorAndToolDeps(Optional.<Tool>absent(),source)),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of())),getPathResolver(),Optional.of(CxxSourceTypes.getPlatformPreprocessFlags(getCxxPlatform(),source.getType())),Optional.of(preprocessorFlags.getUnchecked(source.getType())),Optional.of(computePlatformCompilerFlags(source)),Optional.of(computeRuleCompilerFlags(source)),source.getPath(),source.getType(),getCompileOutputPath(target,name),getIncludeRoots(),getSystemIncludeRoots(),getHeaderMaps(),getFrameworks(),CxxDescriptionEnhancer.frameworkPathToSearchPath(getCxxPlatform(),getPathResolver()),getPrefixHeader(),inferTools,getCxxPlatform().getDebugPathSanitizer());
  getResolver().addToIndex(result);
  return result;
}
