{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  AndroidBinaryRuleTest.createAndroidLibraryRule("//facebook/base:libraryOne",ruleResolver,null,"facebook/base/assets1",null);
  AndroidBinaryRuleTest.createAndroidLibraryRule("//facebook/base:libraryTwo",ruleResolver,null,"facebook/base/assets2",null);
  ResourcesFilter resourcesFilter=EasyMock.createMock(ResourcesFilter.class);
  UberRDotJava uberRDotJava=EasyMock.createMock(UberRDotJava.class);
  EasyMock.replay(resourcesFilter,uberRDotJava);
  AaptPackageResources aaptPackageResources=new AaptPackageResources(new BuildTarget("//facebook/base","apk","aapt_package"),new FileSourcePath("facebook/base/AndroidManifest.xml"),resourcesFilter,uberRDotJava,PackageType.DEBUG,ImmutableSet.<TargetCpuType>of());
  AndroidResourceRule resourceOne=(AndroidResourceRule)ruleResolver.get(BuildTargetFactory.newInstance("//facebook/base:libraryOne_resources"));
  AndroidResourceRule resourceTwo=(AndroidResourceRule)ruleResolver.get(BuildTargetFactory.newInstance("//facebook/base:libraryTwo_resources"));
  Set<Path> assetsDirectories=ImmutableSet.of(resourceOne.getAssets(),resourceTwo.getAssets());
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  DirectoryTraverser traverser=new FakeDirectoryTraverser(ImmutableMap.<String,Collection<FakeDirectoryTraverser.Entry>>of("facebook/base/assets1",ImmutableList.of(new FakeDirectoryTraverser.Entry(new File("facebook/base/assets1","guava-10.0.1-fork.dex.1.jar"),"guava-10.0.1-fork.dex.1.jar")),"facebook/base/assets2",ImmutableList.of(new FakeDirectoryTraverser.Entry(new File("facebook/base/assets2","fonts/Theinhardt-Medium.otf"),"fonts/Theinhardt-Medium.otf"),new FakeDirectoryTraverser.Entry(new File("facebook/base/assets2","fonts/Theinhardt-Regular.otf"),"fonts/Theinhardt-Regular.otf"))));
  Optional<Path> allAssetsDirectory=aaptPackageResources.createAllAssetsDirectory(assetsDirectories,commands,traverser);
  EasyMock.verify(resourcesFilter,uberRDotJava);
  assertTrue(allAssetsDirectory.isPresent());
  assertEquals(BIN_PATH.resolve("facebook/base/__assets_apk#aapt_package__"),allAssetsDirectory.get());
  List<? extends Step> expectedCommands=ImmutableList.of(new MakeCleanDirectoryStep(BIN_PATH.resolve("facebook/base/__assets_apk#aapt_package__")),new MkdirAndSymlinkFileStep(Paths.get("facebook/base/assets1/guava-10.0.1-fork.dex.1.jar"),BIN_PATH.resolve("facebook/base/__assets_apk#aapt_package__/guava-10.0.1-fork.dex.1.jar")),new MkdirAndSymlinkFileStep(Paths.get("facebook/base/assets2/fonts/Theinhardt-Medium.otf"),BIN_PATH.resolve("facebook/base/__assets_apk#aapt_package__/fonts/Theinhardt-Medium.otf")),new MkdirAndSymlinkFileStep(Paths.get("facebook/base/assets2/fonts/Theinhardt-Regular.otf"),BIN_PATH.resolve("facebook/base/__assets_apk#aapt_package__/fonts/Theinhardt-Regular.otf")));
  MoreAsserts.assertListEquals(expectedCommands,commands.build());
}
