{
  return Optional.<Function<String,Iterable<String>>>of(new Function<String,Iterable<String>>(){
    @Override public Iterable<String> apply(    String input){
      String remainder=input;
      ImmutableList.Builder<String> processedLines=ImmutableList.builder();
      while (!remainder.isEmpty()) {
        Matcher m=PRAGMA_TOKEN_PLACEHOLDER_PATTERN.matcher(remainder);
        if (!m.matches()) {
          processedLines.add(remainder);
          break;
        }
        processedLines.add(m.group(1));
        processedLines.add("#pragma " + m.group(2).replaceAll("\\\\\"","\""));
        remainder=m.group(3);
      }
      return processedLines.build();
    }
  }
);
}
