{
  tempDir.newFolder("foo");
  tempDir.newFolder("bar");
  Path testFooBuckFile=tempDir.newFile("foo/BUCK");
  Files.write(testFooBuckFile,"java_library(name = 'foo', visibility=['PUBLIC'])\n".getBytes(UTF_8));
  Path testBarBuckFile=tempDir.newFile("bar/BUCK");
  Files.write(testBarBuckFile,("java_library(name = 'bar',\n" + "  deps = ['//foo:foo'])\n").getBytes(UTF_8));
  BuildTarget barTarget=BuildTarget.builder(cellRoot,"//bar","bar").addFlavors(ImmutableFlavor.of("src")).build();
  Iterable<BuildTarget> buildTargets=ImmutableList.of(barTarget);
  parser.buildTargetGraph(eventBus,cell,false,buildTargets);
  Files.delete(testFooBuckFile);
  Files.write(testBarBuckFile,"java_library(name = 'bar')\n".getBytes(UTF_8));
  WatchEvent<Path> deleteEvent=createPathEvent(Paths.get("foo").resolve("BUCK"),StandardWatchEventKinds.ENTRY_DELETE);
  parser.onFileSystemChange(deleteEvent);
  WatchEvent<Path> modifyEvent=createPathEvent(Paths.get("bar").resolve("BUCK"),StandardWatchEventKinds.ENTRY_MODIFY);
  parser.onFileSystemChange(modifyEvent);
  parser.buildTargetGraph(eventBus,cell,false,buildTargets);
}
