{
  Pattern versionedExtension=Pattern.compile(Joiner.on("[.\\d]*").join(Iterables.transform(Splitter.on("%s").split(cxxPlatform.getSharedLibraryVersionedExtensionFormat()),new Function<String,String>(){
    @Override public String apply(    String input){
      return input.isEmpty() ? input : Pattern.quote(input);
    }
  }
)));
  Map<String,SourcePath> librariesPaths=new HashMap<>();
  for (  Map.Entry<String,SourcePath> ent : libraries.entrySet()) {
    String name=ent.getKey();
    if (librariesPaths.containsKey(name) && librariesPaths.get(name) != ent.getValue()) {
      throw new HumanReadableException("Library %s has multiple possible paths: %s and %s",name,ent.getValue(),librariesPaths.get(name));
    }
    librariesPaths.put(name,ent.getValue());
    Matcher matcher=versionedExtension.matcher(name);
    String versionLessName=matcher.replaceAll(cxxPlatform.getSharedLibraryExtension());
    if (!versionLessName.equals(ent.getKey()) && !libraries.containsKey(versionLessName)) {
      librariesPaths.put(versionLessName,ent.getValue());
    }
  }
  return ImmutableSortedMap.copyOf(librariesPaths);
}
