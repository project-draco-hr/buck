{
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  CxxPlatform cxxPlatform=cxxPlatforms.getValue(params.getBuildTarget()).or(defaultCxxPlatform);
  PythonPlatform pythonPlatform=pythonPlatforms.getValue(params.getBuildTarget()).or(pythonPlatforms.getValue(args.pythonPlatform.transform(Flavor.TO_FLAVOR).or(pythonPlatforms.getFlavors().iterator().next())));
  LuaBinaryPackageComponents components=getPackageComponentsFromDeps(params,resolver,pathResolver,cxxPlatform,pythonPlatform,args.nativeStarterLibrary.or(luaConfig.getNativeStarterLibrary()),args.mainModule,args.packageStyle.or(luaConfig.getPackageStyle()),params.getDeps());
  Tool binary=getBinary(params,resolver,pathResolver,cxxPlatform,args.mainModule,components.getStarter(),components.getComponents(),args.packageStyle.or(luaConfig.getPackageStyle()));
  return new LuaBinary(params.appendExtraDeps(binary.getDeps(pathResolver)),pathResolver,getOutputPath(params.getBuildTarget(),params.getProjectFilesystem()),binary,args.mainModule,components.getComponents(),luaConfig.getLua(resolver));
}
