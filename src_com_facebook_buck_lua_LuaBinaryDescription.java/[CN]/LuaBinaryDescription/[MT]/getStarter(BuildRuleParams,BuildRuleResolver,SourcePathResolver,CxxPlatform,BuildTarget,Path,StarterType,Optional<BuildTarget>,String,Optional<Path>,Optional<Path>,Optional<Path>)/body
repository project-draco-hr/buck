{
switch (starterType) {
case PURE:
    if (relativeNativeLibsDir.isPresent()) {
      throw new HumanReadableException("%s: cannot use pure starter with native libraries",baseParams.getBuildTarget());
    }
  return LuaScriptStarter.of(baseParams,ruleResolver,pathResolver,luaConfig,cxxPlatform,target,output,mainModule,relativeModulesDir,relativePythonModulesDir);
case NATIVE:
return NativeExecutableStarter.of(baseParams,ruleResolver,pathResolver,luaConfig,cxxBuckConfig,cxxPlatform,target,output,mainModule,nativeStarterLibrary,relativeModulesDir,relativePythonModulesDir,relativeNativeLibsDir);
}
throw new IllegalStateException(String.format("%s: unexpected starter type %s",baseParams.getBuildTarget(),luaConfig.getStarterType()));
}
