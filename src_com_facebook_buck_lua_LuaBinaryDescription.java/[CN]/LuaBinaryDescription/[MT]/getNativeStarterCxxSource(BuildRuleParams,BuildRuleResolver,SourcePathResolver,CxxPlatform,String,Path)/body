{
  BuildTarget target=BuildTarget.builder(baseParams.getBuildTarget()).addFlavors(ImmutableFlavor.of("native-starter-cxx-source")).build();
  Path output=BuildTargets.getGenPath(baseParams.getProjectFilesystem(),target,"%s/native-starter.cpp");
  ruleResolver.addToIndex(WriteStringTemplateRule.from(baseParams,pathResolver,target,output,new PathSourcePath(baseParams.getProjectFilesystem(),LuaBinaryDescription.class + "/" + NATIVE_STARTER_CXX_SOURCE,new PackagedResource(baseParams.getProjectFilesystem(),LuaBinaryDescription.class,NATIVE_STARTER_CXX_SOURCE)),ImmutableMap.of("MAIN_MODULE",Escaper.escapeAsPythonString(mainModule),"MODULES_DIR",Escaper.escapeAsPythonString(relativeModulesDir.toString()),"EXT_SUFFIX",Escaper.escapeAsPythonString(cxxPlatform.getSharedLibraryExtension()))));
  return CxxSource.of(CxxSource.Type.CXX,new BuildTargetSourcePath(target),ImmutableList.<String>of());
}
