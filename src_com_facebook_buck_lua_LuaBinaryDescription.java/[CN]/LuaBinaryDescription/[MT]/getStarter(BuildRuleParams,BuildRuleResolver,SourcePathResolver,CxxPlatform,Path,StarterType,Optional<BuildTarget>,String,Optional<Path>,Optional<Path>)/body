{
switch (starterType) {
case PURE:
    if (relativeNativeLibsDir.isPresent()) {
      throw new HumanReadableException("%s: cannot use pure starter with native libraries",baseParams.getBuildTarget());
    }
  return getPureStarter(baseParams,ruleResolver,pathResolver,cxxPlatform,output,mainModule,relativeModulesDir);
case NATIVE:
return getNativeStarter(baseParams,ruleResolver,pathResolver,cxxPlatform,output,nativeStarterLibrary,mainModule,relativeModulesDir,relativeNativeLibsDir);
}
throw new IllegalStateException(String.format("%s: unexpected starter type %s",baseParams.getBuildTarget(),luaConfig.getStarterType()));
}
