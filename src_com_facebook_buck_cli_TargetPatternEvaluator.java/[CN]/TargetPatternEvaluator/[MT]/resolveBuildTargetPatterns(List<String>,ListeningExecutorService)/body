{
  List<TargetNodeSpec> specs=new ArrayList<>();
  for (  String pattern : patterns) {
    specs.add(targetNodeSpecParser.parse(params.getCell().getCellPathResolver(),pattern));
  }
  ImmutableList<ImmutableSet<BuildTarget>> buildTargets=params.getParser().resolveTargetSpecs(params.getBuckEventBus(),params.getCell(),enableProfiling,executor,specs,SpeculativeParsing.of(false),ParserConfig.ApplyDefaultFlavorsMode.DISABLED);
  LOG.verbose("Resolved target patterns %s -> targets %s",patterns,buildTargets);
  ImmutableMap.Builder<String,ImmutableSet<QueryTarget>> queryTargets=ImmutableMap.builder();
  for (int index=0; index < buildTargets.size(); index++) {
    ImmutableSet<BuildTarget> targets=buildTargets.get(index);
    ImmutableSet.Builder<QueryTarget> builder=ImmutableSortedSet.naturalOrder();
    for (    BuildTarget target : targets) {
      builder.add(QueryBuildTarget.of(target));
    }
    queryTargets.put(patterns.get(index),builder.build());
  }
  return queryTargets.build();
}
