{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  TestCommand command=getCommand("--exclude","linux","windows");
  TestRule rule1=new FakeTestRule(JavaTestDescription.TYPE,ImmutableSet.<Label>of(Label.of("windows"),Label.of("linux")),BuildTargetFactory.newInstance("//:for"),pathResolver,ImmutableSortedSet.<BuildRule>of());
  TestRule rule2=new FakeTestRule(JavaTestDescription.TYPE,ImmutableSet.<Label>of(Label.of("android")),BuildTargetFactory.newInstance("//:teh"),pathResolver,ImmutableSortedSet.<BuildRule>of());
  TestRule rule3=new FakeTestRule(JavaTestDescription.TYPE,ImmutableSet.<Label>of(Label.of("windows")),BuildTargetFactory.newInstance("//:lulz"),pathResolver,ImmutableSortedSet.<BuildRule>of());
  List<TestRule> testRules=ImmutableList.of(rule1,rule2,rule3);
  Iterable<TestRule> result=command.filterTestRules(new FakeBuckConfig(),ImmutableSet.<BuildTarget>of(),testRules);
  assertThat(result,contains(rule2));
}
