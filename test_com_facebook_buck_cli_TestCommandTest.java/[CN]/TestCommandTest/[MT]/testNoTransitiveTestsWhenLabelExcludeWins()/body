{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  TestCommand command=getCommand("--labels","!linux","--always-exclude","--exclude-transitive-tests","//:for","//:lulz");
  FakeTestRule rule1=new FakeTestRule(ImmutableSet.of(Label.of("windows"),Label.of("linux")),BuildTargetFactory.newInstance("//:for"),pathResolver,ImmutableSortedSet.<BuildRule>of());
  FakeTestRule rule2=new FakeTestRule(ImmutableSet.of(Label.of("windows")),BuildTargetFactory.newInstance("//:lulz"),pathResolver,ImmutableSortedSet.<BuildRule>of(rule1));
  List<TestRule> testRules=ImmutableList.<TestRule>of(rule1,rule2);
  Iterable<TestRule> filtered=command.filterTestRules(FakeBuckConfig.builder().build(),ImmutableSet.of(BuildTargetFactory.newInstance("//:for"),BuildTargetFactory.newInstance("//:lulz")),testRules);
  assertEquals(rule2,Iterables.getOnlyElement(filtered));
}
