{
  ExecutionContext executionContext=createMock(ExecutionContext.class);
  expect(executionContext.isDebugEnabled()).andReturn(false);
  FakeTestRule testRule=new FakeTestRule(JavaTestDescription.TYPE,ImmutableSet.<Label>of(Label.of("windows")),BuildTargetFactory.newInstance("//:lulz"),new SourcePathResolver(new BuildRuleResolver()),ImmutableSortedSet.<BuildRule>of());
  CachingBuildEngine cachingBuildEngine=createMock(CachingBuildEngine.class);
  expect(cachingBuildEngine.getBuildRuleResult(BuildTargetFactory.newInstance("//:lulz"))).andReturn(new BuildRuleSuccess(testRule,BuildRuleSuccess.Type.FETCHED_FROM_CACHE));
  replay(executionContext,cachingBuildEngine);
  assertTrue("A cache hit updates the build artifact but not the test results. " + "Therefore, the test should be re-run to ensure the test results are up to date.",TestCommand.isTestRunRequiredForTest(testRule,cachingBuildEngine,executionContext,createMock(TestRuleKeyFileHelper.class),true,false));
  verify(executionContext,cachingBuildEngine);
}
