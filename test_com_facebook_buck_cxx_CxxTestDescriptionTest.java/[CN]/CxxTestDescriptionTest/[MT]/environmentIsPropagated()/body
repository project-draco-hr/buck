{
  ImmutableMap<String,String> env=ImmutableMap.of("TEST","value");
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildRule gtest=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:gtest")).setOut("out").build(resolver);
  CxxTestBuilder builder=new CxxTestBuilder(BuildTargetFactory.newInstance("//:test"),new CxxBuckConfig(new FakeBuckConfig(ImmutableMap.of("cxx",ImmutableMap.of("gtest_dep",gtest.getBuildTarget().toString())))),CxxTestBuilder.createDefaultPlatform(),CxxTestBuilder.createDefaultPlatforms());
  CxxTest test=(CxxTest)builder.setEnv(env).build(resolver);
  ImmutableList<Step> steps=test.runTests(FakeBuildContext.NOOP_CONTEXT,TestExecutionContext.newInstance(),false,false,TestSelectorList.empty(),TestRule.NOOP_REPORTING_CALLBACK);
  CxxTestStep testStep=(CxxTestStep)Iterables.getLast(steps);
  assertThat(testStep.getEnv(),Matchers.equalTo(env));
}
