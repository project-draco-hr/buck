{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildTarget cxxBinaryTarget=BuildTargetFactory.newInstance("//:dep");
  BuildTarget cxxLibraryTarget=BuildTargetFactory.newInstance("//:lib");
  CxxBinaryBuilder cxxBinaryBuilder=new CxxBinaryBuilder(cxxBinaryTarget);
  CxxLibraryBuilder cxxLibraryBuilder=new CxxLibraryBuilder(cxxLibraryTarget).setDeps(ImmutableSortedSet.of(cxxBinaryTarget));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraphFactory.newInstance(cxxLibraryBuilder.build(),cxxBinaryBuilder.build()),new DefaultTargetNodeToBuildRuleTransformer());
  BuildRule cxxBinary=cxxBinaryBuilder.build(resolver,filesystem);
  cxxLibraryBuilder.build(resolver,filesystem);
  CxxTestBuilder cxxTestBuilder=createTestBuilder(resolver,filesystem).setDeps(ImmutableSortedSet.of(cxxLibraryTarget));
  CxxTest cxxTest=(CxxTest)cxxTestBuilder.build(resolver,filesystem);
  assertThat(BuildRules.getTransitiveRuntimeDeps(cxxTest),Matchers.hasItem(cxxBinary));
}
