{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  Set<TargetNode<?>> targetNodes=Sets.newTreeSet();
  BuildRule someRule=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:some_rule")).setOut("someRule").build(resolver);
  CxxTest cxxTest=(CxxTest)createTestBuilder(resolver,filesystem,targetNodes).setArgs(ImmutableList.of("value $(location //:some_rule)")).build(resolver);
  TestRunningOptions testOptions=TestRunningOptions.builder().setDryRun(false).setShufflingTests(false).setTestSelectorList(TestSelectorList.empty()).build();
  ImmutableList<Step> steps=cxxTest.runTests(FakeBuildContext.NOOP_CONTEXT,TestExecutionContext.newInstance(),testOptions,TestRule.NOOP_REPORTING_CALLBACK);
  CxxTestStep testStep=(CxxTestStep)Iterables.getLast(steps);
  assertThat(testStep.getCommand(),Matchers.hasItem("value " + Preconditions.checkNotNull(someRule.getPathToOutput()).toAbsolutePath()));
}
