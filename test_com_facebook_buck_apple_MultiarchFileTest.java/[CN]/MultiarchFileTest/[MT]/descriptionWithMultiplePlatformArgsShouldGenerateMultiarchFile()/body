{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildRule multiarchRule=nodeBuilderFactory.getNodeBuilder(BuildTargetFactory.newInstance("//foo:thing#iphoneos-i386,iphoneos-x86_64")).build(resolver,filesystem);
  assertThat(multiarchRule,instanceOf(MultiarchFile.class));
  ImmutableList<Step> steps=multiarchRule.getBuildSteps(FakeBuildContext.NOOP_CONTEXT,new FakeBuildableContext());
  ShellStep step=Iterables.getLast(Iterables.filter(steps,ShellStep.class));
  ExecutionContext executionContext=TestExecutionContext.newInstance();
  ImmutableList<String> command=step.getShellCommand(executionContext);
  assertThat(command,Matchers.contains(endsWith("lipo"),equalTo("-create"),equalTo("-output"),containsString("foo/thing#"),containsString("/thing#"),containsString("/thing#")));
}
