{
  Callable<BuildRuleSuccess> callable=new Callable<BuildRuleSuccess>(){
    @Override public BuildRuleSuccess call() throws Exception {
      AbstractCachingBuildRule buildRule=AbstractCachingBuildRule.this;
      File output=getOutput();
      boolean fromCache=(output != null && artifactCache.fetch(getRuleKey(),output));
      if (!fromCache) {
        List<Step> steps=buildInternal(context);
        StepRunner stepRunner=context.getCommandRunner();
        for (        Step step : steps) {
          stepRunner.runStepForBuildTarget(step,getBuildTarget());
        }
      }
      resetOutputKey();
      buildRule.writeSuccessFile();
      if (output != null && !fromCache) {
        artifactCache.store(getRuleKey(),output);
      }
      return new BuildRuleSuccess(buildRule);
    }
  }
;
  return context.getCommandRunner().getListeningExecutorService().submit(callable);
}
