{
  RuleKey ruleKey=getRuleKey();
  Optional<RuleKey> cachedRuleKey=onDiskBuildInfo.getRuleKey();
  if (ruleKey.equals(cachedRuleKey.orNull())) {
    context.logBuildInfo("[UNCHANGED %s]",getFullyQualifiedName());
    return new BuildResult(BuildRuleSuccess.Type.MATCHING_RULE_KEY,CacheResult.LOCAL_KEY_UNCHANGED_HIT);
  }
  if (this instanceof AbiRule) {
    AbiRule abiRule=(AbiRule)this;
    RuleKey ruleKeyNoDeps=getRuleKeyWithoutDeps();
    Optional<RuleKey> cachedRuleKeyNoDeps=onDiskBuildInfo.getRuleKeyWithoutDeps();
    if (ruleKeyNoDeps.equals(cachedRuleKeyNoDeps.orNull())) {
      Sha1HashCode abiKeyForDeps=abiRule.getAbiKeyForDeps();
      Optional<Sha1HashCode> cachedAbiKeyForDeps=onDiskBuildInfo.getHash(AbiRule.ABI_KEY_FOR_DEPS_ON_DISK_METADATA);
      if (abiKeyForDeps.equals(cachedAbiKeyForDeps.orNull())) {
        return new BuildResult(BuildRuleSuccess.Type.MATCHING_DEPS_ABI_AND_RULE_KEY_NO_DEPS,CacheResult.LOCAL_KEY_UNCHANGED_HIT);
      }
    }
  }
  CacheResult cacheResult;
  if (shouldTryToFetchFromCache) {
    cacheResult=tryToFetchArtifactFromBuildCacheAndOverlayOnTopOfProjectFilesystem(buildInfoRecorder,context.getArtifactCache(),context.getProjectRoot(),context);
  }
 else {
    cacheResult=CacheResult.SKIP;
  }
  if (cacheResult.isSuccess()) {
    return new BuildResult(BuildRuleSuccess.Type.FETCHED_FROM_CACHE,cacheResult);
  }
  try {
    executeCommandsNowThatDepsAreBuilt(context,onDiskBuildInfo,buildInfoRecorder);
  }
 catch (  Exception e) {
    return new BuildResult(e);
  }
  Path pathToOutputFile=buildable.getPathToOutputFile();
  if (pathToOutputFile != null) {
    buildInfoRecorder.recordArtifact(pathToOutputFile);
  }
  return new BuildResult(BuildRuleSuccess.Type.BUILT_LOCALLY,cacheResult);
}
