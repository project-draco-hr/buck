@classmethod
def get(cls, resolvable_string, options_builder=None):
    'Get a :class:`Resolvable` from a string.\n\n    :returns: A :class:`Resolvable` or ``None`` if no implementation was appropriate.\n    '
    options_builder = (options_builder or ResolverOptionsBuilder())
    for resolvable_impl in cls._REGISTRY:
        try:
            return resolvable_impl.from_string(resolvable_string, options_builder)
        except cls.InvalidRequirement:
            continue
    raise cls.InvalidRequirement(('Unknown requirement type: %s' % resolvable_string))
