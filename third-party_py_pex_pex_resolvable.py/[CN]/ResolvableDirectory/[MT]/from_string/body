@classmethod
def from_string(cls, requirement_string, options_builder):
    (requirement_string, extras) = strip_extras(requirement_string)
    if cls.is_installable(requirement_string):
        try:
            sdist = Packager(requirement_string).sdist()
        except InstallerBase.Error:
            raise cls.InvalidRequirement(('Could not create source distribution for %s' % requirement_string))
        package = Package.from_href(sdist)
        return ResolvablePackage(package, options_builder.build(package.name), extras=extras)
    else:
        raise cls.InvalidRequirement(('%s does not appear to be an installable directory.' % requirement_string))
