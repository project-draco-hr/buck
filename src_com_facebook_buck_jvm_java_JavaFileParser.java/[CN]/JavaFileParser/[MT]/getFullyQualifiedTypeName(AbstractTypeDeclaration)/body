{
  LinkedList<String> nameParts=Lists.newLinkedList();
  nameParts.add(node.getName().toString());
  ASTNode parent=node.getParent();
  while (!(parent instanceof CompilationUnit)) {
    if (parent instanceof AbstractTypeDeclaration) {
      nameParts.addFirst(((AbstractTypeDeclaration)parent).getName().toString());
      parent=parent.getParent();
    }
 else     if (parent instanceof AnonymousClassDeclaration) {
      return null;
    }
 else {
      throw new RuntimeException("Unexpected parent " + parent + " for "+ node);
    }
  }
  PackageDeclaration packageDecl=((CompilationUnit)parent).getPackage();
  if (packageDecl != null) {
    nameParts.addFirst(packageDecl.getName().toString());
  }
  return Joiner.on(".").join(nameParts);
}
