'pex support for interacting with interpreters.'
from __future__ import absolute_import
import os
import re
import subprocess
import sys
from collections import defaultdict
from pkg_resources import Distribution, Requirement, find_distributions
from .base import maybe_requirement
from .compatibility import string
from .tracer import TRACER
try:
    from numbers import Integral
except ImportError:
    Integral = (int, long)
ID_PY = '\nimport sys\n\nif hasattr(sys, \'pypy_version_info\'):\n  subversion = \'PyPy\'\nelif sys.platform.startswith(\'java\'):\n  subversion = \'Jython\'\nelse:\n  subversion = \'CPython\'\n\nprint("%s %s %s %s" % (\n  subversion,\n  sys.version_info[0],\n  sys.version_info[1],\n  sys.version_info[2]))\n\nsetuptools_path = None\ntry:\n  import pkg_resources\nexcept ImportError:\n  sys.exit(0)\n\nrequirements = {}\nfor item in sys.path:\n  for dist in pkg_resources.find_distributions(item):\n    requirements[str(dist.as_requirement())] = dist.location\n\nfor requirement_str, location in requirements.items():\n  rs = requirement_str.split(\'==\', 2)\n  if len(rs) == 2:\n    print(\'%s %s %s\' % (rs[0], rs[1], location))\n'
