@classmethod
def _from_binary_external(cls, binary, path_extras):
    environ = cls.sanitized_environment()
    environ['PYTHONPATH'] = ':'.join(path_extras)
    po = subprocess.Popen([binary], stdin=subprocess.PIPE, stdout=subprocess.PIPE, env=environ)
    (so, _) = po.communicate(ID_PY)
    output = so.decode('utf8').splitlines()
    if (len(output) == 0):
        raise cls.IdentificationError(('Could not establish identity of %s' % binary))
    (identity, extras) = (output[0], output[1:])
    return cls(binary, PythonIdentity.from_id_string(identity), extras=cls._parse_extras(extras))
