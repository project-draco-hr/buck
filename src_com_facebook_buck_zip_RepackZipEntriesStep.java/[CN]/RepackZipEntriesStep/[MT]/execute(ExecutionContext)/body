{
  try (ZipInputStream in=new ZipInputStream(new BufferedInputStream(new FileInputStream(inputFile)));CustomZipOutputStream out=ZipOutputStreams.newOutputStream(new File(outputFile))){
    for (ZipEntry entry=in.getNextEntry(); entry != null; entry=in.getNextEntry()) {
      CustomZipEntry customEntry=new CustomZipEntry(entry);
      if (entries.contains(customEntry.getName())) {
        customEntry.setCompressionLevel(compressionLevel);
      }
      InputStream toUse;
      if (customEntry.getMethod() == ZipEntry.STORED) {
        try (ByteArrayOutputStream bos=new ByteArrayOutputStream()){
          ByteStreams.copy(in,bos);
          byte[] bytes=bos.toByteArray();
          customEntry.setCrc(Hashing.crc32().hashBytes(bytes).padToLong());
          customEntry.setSize(bytes.length);
          customEntry.setCompressedSize(bytes.length);
          toUse=new ByteArrayInputStream(bytes);
        }
       }
 else {
        toUse=in;
      }
      out.putNextEntry(customEntry);
      ByteStreams.copy(toUse,out);
      out.closeEntry();
    }
    return 0;
  }
 catch (  IOException e) {
    context.getBuckEventBus().post(LogEvent.create(Level.SEVERE,"Unable to repack zip: %s",Throwables.getStackTraceAsString(e)));
    return 1;
  }
}
