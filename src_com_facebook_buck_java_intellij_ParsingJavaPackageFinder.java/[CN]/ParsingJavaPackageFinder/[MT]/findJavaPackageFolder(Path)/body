{
  Optional<Path> packageFolder=packagePathCache.lookup(pathRelativeToProjectRoot);
  if (!packageFolder.isPresent()) {
    packageFolder=getPackageFromFile(pathRelativeToProjectRoot).transform(new Function<String,Path>(){
      @Override public Path apply(      String input){
        return findPackageFolderWithJavaPackage(input);
      }
    }
);
  }
  if (!packageFolder.isPresent()) {
    packageFolder=Optional.of(fallbackPackageFinder.findJavaPackageFolder(pathRelativeToProjectRoot));
  }
  packagePathCache.insert(pathRelativeToProjectRoot,packageFolder.get());
  return packageFolder.get();
}
