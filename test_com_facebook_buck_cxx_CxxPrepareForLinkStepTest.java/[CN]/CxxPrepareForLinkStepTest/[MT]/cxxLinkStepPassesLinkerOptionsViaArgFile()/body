{
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  ExecutionContext context=TestExecutionContext.newInstance();
  Path output=projectFilesystem.getRootPath().resolve("output");
  ImmutableList<String> args=ImmutableList.of("-rpath","hello","a.o","libb.a");
  Path frameworkRoot=Paths.get("/System/Frameworks");
  final Path librarySearchPath=Paths.get("/System/libraries");
  final String library="z";
  Path argFilePath=projectFilesystem.getRootPath().resolve("/tmp/cxxLinkStepPassesLinkerOptionsViaArgFile.txt");
  CxxPrepareForLinkStep step=new CxxPrepareForLinkStep(argFilePath,output,args,ImmutableSet.of(frameworkRoot),ImmutableSet.of(librarySearchPath),ImmutableSet.of(library));
  step.execute(context);
  assertThat(Files.exists(argFilePath),Matchers.equalTo(true));
  ImmutableList<String> expectedFileContents=ImmutableList.<String>builder().add("-o",output.toString()).add("-F",frameworkRoot.toString()).add("-L",librarySearchPath.toString()).add("-l" + library).addAll(args).build();
  List<String> fileContents=Files.readAllLines(argFilePath,StandardCharsets.UTF_8);
  assertThat(fileContents,Matchers.<List<String>>equalTo(expectedFileContents));
  Files.deleteIfExists(argFilePath);
}
