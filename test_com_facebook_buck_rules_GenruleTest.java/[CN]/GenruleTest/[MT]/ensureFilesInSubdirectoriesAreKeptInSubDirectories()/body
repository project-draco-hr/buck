{
  BuildTarget target=BuildTargetFactory.newInstance("//:example");
  Genrule rule=Genrule.newGenruleBuilder().setRelativeToAbsolutePathFunction(relativeToAbsolutePathFunction).setBuildTarget(target).setCmd("ignored").addSrc("in-dir.txt").addSrc("foo/bar.html").addSrc("other/place.txt").setOut("example-file").build(Maps.<String,BuildRule>newHashMap());
  ImmutableList.Builder<Command> builder=ImmutableList.builder();
  rule.addSymlinkCommands(builder);
  ImmutableList<Command> commands=builder.build();
  String baseTmpPath="/opt/local/fbandroid/" + GEN_DIR + "/example__srcs/";
  String sourcePath="/opt/local/fbandroid/";
  assertEquals(3,commands.size());
  MkdirAndSymlinkFileCommand linkCmd=(MkdirAndSymlinkFileCommand)commands.get(0);
  assertEquals(sourcePath + "in-dir.txt",linkCmd.getSource().getAbsolutePath());
  assertEquals(baseTmpPath + "in-dir.txt",linkCmd.getTarget().getAbsolutePath());
  linkCmd=(MkdirAndSymlinkFileCommand)commands.get(1);
  assertEquals(sourcePath + "foo/bar.html",linkCmd.getSource().getAbsolutePath());
  assertEquals(baseTmpPath + "foo/bar.html",linkCmd.getTarget().getAbsolutePath());
  linkCmd=(MkdirAndSymlinkFileCommand)commands.get(2);
  assertEquals(sourcePath + "other/place.txt",linkCmd.getSource().getAbsolutePath());
  assertEquals(baseTmpPath + "other/place.txt",linkCmd.getTarget().getAbsolutePath());
}
