{
  Pattern compiledPattern;
  try {
    compiledPattern=Pattern.compile(getPattern(args));
  }
 catch (  IllegalArgumentException e) {
    throw new QueryException(String.format("Illegal pattern regexp '%s': %s",getPattern(args),e.getMessage()));
  }
  Set<T> targets=getExpressionToEval(args).eval(env);
  env.buildTransitiveClosure(targets,Integer.MAX_VALUE);
  Set<T> result=new LinkedHashSet<>();
  for (  T target : targets) {
    String attributeValue=getStringToFilter(env,args,target);
    if (compiledPattern.matcher(attributeValue).find()) {
      result.add(target);
    }
  }
  return result;
}
