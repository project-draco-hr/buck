{
  final AtomicInteger value=new AtomicInteger(1);
  OptimisticLoadingCache<String,Integer> cache=new OptimisticLoadingCache<>(1);
  Callable<Integer> loader=new Callable<Integer>(){
    @Override public Integer call() throws Exception {
      return value.getAndIncrement();
    }
  }
;
  cache.get("cake",loader);
  cache.get("cake",loader);
  assertEquals(1,cache.getIfPresent("cake").intValue());
}
