{
  File cacheDir=tmpDir.newFolder();
  File fileW=new File(cacheDir,"w");
  File fileX=new File(cacheDir,"x");
  File fileY=new File(cacheDir,"y");
  File fileZ=new File(cacheDir,"z");
  dirArtifactCache=new DirArtifactCache(cacheDir,true,Optional.of(2L));
  Files.write("w",fileW,Charsets.UTF_8);
  Files.write("x",fileX,Charsets.UTF_8);
  Files.write("y",fileY,Charsets.UTF_8);
  Files.write("z",fileZ,Charsets.UTF_8);
  java.nio.file.Files.setAttribute(fileW.toPath(),"lastAccessTime",FileTime.fromMillis(9000));
  java.nio.file.Files.setAttribute(fileX.toPath(),"lastAccessTime",FileTime.fromMillis(0));
  java.nio.file.Files.setAttribute(fileY.toPath(),"lastAccessTime",FileTime.fromMillis(1000));
  java.nio.file.Files.setAttribute(fileZ.toPath(),"lastAccessTime",FileTime.fromMillis(2000));
  assertEquals(4,cacheDir.listFiles().length);
  dirArtifactCache.deleteOldFiles();
  assertEquals(ImmutableSet.of(fileZ,fileW),ImmutableSet.copyOf(cacheDir.listFiles()));
}
