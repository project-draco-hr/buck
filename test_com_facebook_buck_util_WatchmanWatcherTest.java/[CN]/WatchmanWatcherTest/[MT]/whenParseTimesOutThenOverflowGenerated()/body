{
  ImmutableMap<String,Object> watchmanOutput=ImmutableMap.<String,Object>of("version","2.9.2","clock","c:1386170113:26390:5:50273","is_fresh_instance",true,"files",ImmutableList.of());
  final Set<WatchEvent<?>> events=Sets.newHashSet();
  EventBus bus=new EventBus("watchman test");
  bus.register(new Object(){
    @Subscribe public void listen(    WatchEvent<?> event){
      events.add(event);
    }
  }
);
  WatchmanWatcher watcher=createWatcher(bus,new FakeWatchmanClient(10000000000L,ImmutableMap.of(FAKE_QUERY,watchmanOutput)),200,-1);
  watcher.postEvents(new BuckEventBus(new FakeClock(0),new BuildId()),new WatchmanDiagnosticCache(),WatchmanWatcher.FreshInstanceAction.NONE);
  boolean overflowSeen=false;
  for (  WatchEvent<?> event : events) {
    overflowSeen|=event.kind().equals(StandardWatchEventKinds.OVERFLOW);
  }
  assertTrue(overflowSeen);
}
