{
  String watchmanOutput=Joiner.on('\n').join("{\"files\": [","{","\"name\": \"foo/bar/baz\"","}","]}");
  Capture<WatchEvent<Path>> eventCapture=newCapture();
  EventBus eventBus=createStrictMock(EventBus.class);
  eventBus.post(capture(eventCapture));
  replay(eventBus);
  FakeProcess fakeProcess=new FakeProcess(0,watchmanOutput,"");
  WatchmanWatcher watcher=createWatcher(eventBus,fakeProcess,new IncrementingFakeClock(),new ObjectMapper(),-1,10000);
  watcher.postEvents(new BuckEventBus(new FakeClock(0),new BuildId()));
  verify(eventBus);
  assertTrue("Watchman query process should be destroyed.",fakeProcess.isDestroyed());
  assertTrue("Watchman query process should be waited for.",fakeProcess.isWaitedFor());
  assertEquals("Should be overflow event.",StandardWatchEventKinds.OVERFLOW,eventCapture.getValue().kind());
}
