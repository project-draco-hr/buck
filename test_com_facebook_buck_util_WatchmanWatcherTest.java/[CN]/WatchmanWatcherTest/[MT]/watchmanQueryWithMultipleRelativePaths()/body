{
  List<List<Object>> queries=WatchmanWatcher.createQuery(ImmutableMap.of(Paths.get("/path/to/repo/project1"),ProjectWatch.of("/path/to/repo",Optional.of("project1")),Paths.get("/path/to/repo/project2"),ProjectWatch.of("/path/to/repo",Optional.of("project2")),Paths.get("/path/to/repo/project3"),ProjectWatch.of("/path/to/repo",Optional.of("project3"))),"uuid",ImmutableSet.<PathOrGlobMatcher>of(),ImmutableSet.of(Watchman.Capability.DIRNAME));
  assertEquals(3,queries.size());
  assertEquals(ImmutableList.of(ImmutableList.of("query","/path/to/repo",ImmutableMap.of("since","n:buckduuid","expression",ImmutableList.of("not",ImmutableList.of("anyof",ImmutableList.of("type","d"))),"empty_on_fresh_instance",true,"fields",ImmutableList.of("name","exists","new"),"relative_root","project1")),ImmutableList.of("query","/path/to/repo",ImmutableMap.of("since","n:buckduuid","expression",ImmutableList.of("not",ImmutableList.of("anyof",ImmutableList.of("type","d"))),"empty_on_fresh_instance",true,"fields",ImmutableList.of("name","exists","new"),"relative_root","project2")),ImmutableList.of("query","/path/to/repo",ImmutableMap.of("since","n:buckduuid","expression",ImmutableList.of("not",ImmutableList.of("anyof",ImmutableList.of("type","d"))),"empty_on_fresh_instance",true,"fields",ImmutableList.of("name","exists","new"),"relative_root","project3"))),queries);
}
