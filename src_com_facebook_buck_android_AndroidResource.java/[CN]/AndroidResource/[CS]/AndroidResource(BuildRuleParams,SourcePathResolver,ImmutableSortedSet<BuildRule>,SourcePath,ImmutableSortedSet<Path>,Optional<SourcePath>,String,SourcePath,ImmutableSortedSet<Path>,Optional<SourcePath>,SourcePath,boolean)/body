{
  super(buildRuleParams,resolver);
  if (res != null && rDotJavaPackageArgument == null && manifestFile == null) {
    throw new HumanReadableException("When the 'res' is specified for android_resource() %s, at least one of 'package' or " + "'manifest' must be specified.",getBuildTarget());
  }
  this.res=res;
  this.resSrcs=resSrcs;
  this.additionalResKey=additionalResKey;
  this.assets=assets;
  this.assetsSrcs=assetsSrcs;
  this.additionalAssetsKey=additionalAssetsKey;
  this.manifestFile=manifestFile;
  this.hasWhitelistedStrings=hasWhitelistedStrings;
  BuildTarget buildTarget=buildRuleParams.getBuildTarget();
  if (res == null) {
    pathToTextSymbolsDir=null;
    pathToTextSymbolsFile=null;
    pathToRDotJavaPackageFile=null;
  }
 else {
    pathToTextSymbolsDir=BuildTargets.getGenPath(buildTarget,"__%s_text_symbols__");
    pathToTextSymbolsFile=pathToTextSymbolsDir.resolve("R.txt");
    pathToRDotJavaPackageFile=pathToTextSymbolsDir.resolve("RDotJavaPackage.txt");
  }
  this.deps=deps;
  this.buildOutputInitializer=new BuildOutputInitializer<>(buildTarget,this);
  this.rDotJavaPackageArgument=rDotJavaPackageArgument;
  this.rDotJavaPackage=new AtomicReference<>();
  if (rDotJavaPackageArgument != null) {
    this.rDotJavaPackage.set(rDotJavaPackageArgument);
  }
  this.rDotJavaPackageSupplier=new Supplier<String>(){
    @Override public String get(){
      String rDotJavaPackage=AndroidResource.this.rDotJavaPackage.get();
      if (rDotJavaPackage != null) {
        return rDotJavaPackage;
      }
 else {
        throw new RuntimeException(String.format("rDotJavaPackage for %s was requested before it was made available.",AndroidResource.this.getBuildTarget()));
      }
    }
  }
;
}
