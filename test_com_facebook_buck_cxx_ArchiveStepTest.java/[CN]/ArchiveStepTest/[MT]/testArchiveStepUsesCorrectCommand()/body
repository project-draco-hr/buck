{
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  ExecutionContext context=TestExecutionContext.newBuilder().setProjectFilesystem(projectFilesystem).build();
  ImmutableList<String> archiver=ImmutableList.of("ar");
  Path output=Paths.get("libfoo.a");
  ImmutableList<Path> inputs=ImmutableList.of(Paths.get("a.o"),Paths.get("b.o"),Paths.get("c.o"));
  ArchiveStep archiveStep=new ArchiveStep(archiver,output,inputs);
  ImmutableList<Step> steps=ImmutableList.copyOf(archiveStep);
  assertEquals(1,steps.size());
  assertTrue(steps.get(0) instanceof ShellStep);
  ShellStep shellStep=(ShellStep)steps.get(0);
  ImmutableList<String> expected=ImmutableList.<String>builder().addAll(archiver).add("rcs").add(output.toString()).addAll(Iterables.transform(inputs,Functions.toStringFunction())).build();
  ImmutableList<String> actual=shellStep.getShellCommand(context);
  assertEquals(expected,actual);
}
