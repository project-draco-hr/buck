@provide_for_build
def glob(includes, excludes=[], include_dotfiles=False, build_env=None):
    assert (build_env.type == BuildContextType.BUILD_FILE), 'Cannot use `glob()` at the top-level of an included file.'
    search_base = build_env.dirname
    assert (not isinstance(includes, basestring)), 'The first argument to glob() must be a list of strings.'
    assert (not isinstance(excludes, basestring)), 'The excludes argument must be a list of strings.'
    paths = set()
    for pattern in includes:
        for path in glob_walk(pattern, search_base, include_dotfiles=include_dotfiles):
            paths.add(path)

    def exclusion(path):
        exclusions = (e for e in excludes if glob_match(e, path, include_dotfiles=include_dotfiles))
        return next(exclusions, None)
    paths = [p for p in paths if (not exclusion(p))]
    paths.sort()
    return paths
