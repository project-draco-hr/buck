def process(self, build_file):
    build_env = {}
    relative_path_to_build_file = relpath(build_file, self.project_root)
    build_env['BASE'] = relative_path_to_build_file[:self.len_suffix]
    build_env['BUILD_FILE_DIRECTORY'] = os.path.dirname(build_file)
    build_env['PROJECT_ROOT'] = self.project_root
    build_env['RULES'] = {}
    build_env['BUILD_FILE_SYMBOL_TABLE'] = make_build_file_symbol_table(build_env)
    for include in self.includes:
        include_defs(include, build_env)
    execfile(os.path.join(self.project_root, build_file), build_env['BUILD_FILE_SYMBOL_TABLE'])
    values = build_env['RULES'].values()
    if self.server:
        print json.dumps(values)
    else:
        for value in values:
            print json.dumps(value)
