def _merge_globals(self, src, dst):
    "\n        Copy the global definitions from one globals dict to another.\n\n        Ignores special attributes and attributes starting with '_', which\n        typically denote module-level private attributes.\n        "
    hidden = set(['include_defs'])
    for (key, val) in src.iteritems():
        if ((not key.startswith('_')) and (key not in hidden)):
            dst[key] = val
