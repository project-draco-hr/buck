{
  String folder="android/java/src/com/facebook";
  tmp.newFolder(folder.split("/"));
  BuildTarget buildTarget=BuildTargetFactory.newInstance("//" + folder + ":fb");
  Path src=Paths.get(folder,"Main.java");
  tmp.newFile(src.toString());
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(tmp.getRoot().toPath());
  BuildRule libraryRule=AndroidLibraryBuilder.createBuilder(buildTarget).addSrc(src).build(ruleResolver);
  DefaultJavaLibrary javaLibrary=(DefaultJavaLibrary)libraryRule;
  String bootclasspath="effects.jar" + File.pathSeparator + "maps.jar"+ File.pathSeparator+ "usb.jar"+ File.pathSeparator;
  BuildContext context=createBuildContext(libraryRule,bootclasspath,projectFilesystem);
  List<Step> steps=javaLibrary.getBuildSteps(context,new FakeBuildableContext());
  Step step=Iterables.find(steps,new Predicate<Step>(){
    @Override public boolean apply(    Step command){
      return command instanceof JavacStep;
    }
  }
);
  assertNotNull("Expected a JavacStep in the steplist.",step);
  JavacStep javac=(JavacStep)step;
  assertEquals("Should compile Main.java rather than generated R.java.",ImmutableSet.of(src),javac.getSrcs());
}
