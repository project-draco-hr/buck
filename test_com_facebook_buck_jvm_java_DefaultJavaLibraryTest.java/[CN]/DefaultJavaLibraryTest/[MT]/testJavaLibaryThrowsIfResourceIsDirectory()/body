{
  ProjectFilesystem filesystem=new AllExistingProjectFilesystem(){
    @Override public boolean isDirectory(    Path path,    LinkOption... linkOptionsk){
      return true;
    }
  }
;
  try {
    JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//library:code")).addResource(new FakeSourcePath("library")).build(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()),filesystem);
    fail("An exception should have been thrown because a directory was passed as a resource.");
  }
 catch (  HumanReadableException e) {
    assertTrue(e.getHumanReadableErrorMessage().contains("a directory is not a valid input"));
  }
}
