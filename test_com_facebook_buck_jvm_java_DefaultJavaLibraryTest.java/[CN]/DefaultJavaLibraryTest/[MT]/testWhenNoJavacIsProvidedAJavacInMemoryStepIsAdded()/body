{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildTarget libraryOneTarget=BuildTargetFactory.newInstance("//:libone");
  BuildRule rule=JavaLibraryBuilder.createBuilder(libraryOneTarget).addSrc(Paths.get("java/src/com/libone/Bar.java")).build(ruleResolver);
  DefaultJavaLibrary buildable=(DefaultJavaLibrary)rule;
  ImmutableList.Builder<Step> stepsBuilder=ImmutableList.builder();
  buildable.createCommandsForJavacJar(buildable.getPathToOutput(),ImmutableSortedSet.copyOf(buildable.getDeclaredClasspathEntries().values()),DEFAULT_JAVAC_OPTIONS,Optional.<JavacStep.SuggestBuildRules>absent(),stepsBuilder,libraryOneTarget,buildable.getPathToOutput().resolve("output.jar"),ImmutableList.<Step>of());
  List<Step> steps=stepsBuilder.build();
  assertEquals(steps.size(),4);
  assertTrue(((JavacStep)steps.get(2)).getJavac() instanceof Jsr199Javac);
}
