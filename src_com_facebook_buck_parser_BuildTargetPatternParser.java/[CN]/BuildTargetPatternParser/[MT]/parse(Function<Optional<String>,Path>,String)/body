{
  if (VISIBILITY_PUBLIC.equals(buildTargetPattern)) {
    if (isPublicVisibilityAllowed()) {
      return createForAll();
    }
 else {
      throw new BuildTargetParseException(String.format("%s not supported in the parse context",VISIBILITY_PUBLIC));
    }
  }
  Preconditions.checkArgument(buildTargetPattern.startsWith(BUILD_RULE_PREFIX) || buildTargetPattern.startsWith(CELL_NAME_PREFIX),String.format("'%s' must start with '//' or a '@' followed by a cell name",buildTargetPattern));
  if (buildTargetPattern.equals(WILDCARD_BUILD_RULE_SUFFIX) || buildTargetPattern.endsWith("/" + WILDCARD_BUILD_RULE_SUFFIX)) {
    return createWildCardPattern(cellNames,buildTargetPattern);
  }
  BuildTarget target=BuildTargetParser.INSTANCE.parse(buildTargetPattern,this,cellNames);
  if (target.getShortNameAndFlavorPostfix().isEmpty()) {
    return createForChildren(target.getCellPath(),target.getBasePath());
  }
 else {
    return createForSingleton(target);
  }
}
