{
  if (!isWildCardAllowed()) {
    throw new BuildTargetParseException(String.format("'%s' cannot end with '...'",buildTargetPattern));
  }
  Path cellPath;
  int index=buildTargetPattern.indexOf(BUILD_RULE_PREFIX);
  if (index > 0) {
    cellPath=cellNames.getCellPath(Optional.of(buildTargetPattern.substring(0,index)));
    buildTargetPattern=buildTargetPattern.substring(index);
  }
 else {
    cellPath=cellNames.getCellPath(Optional.<String>absent());
  }
  if (buildTargetPattern.contains(BUILD_RULE_SEPARATOR)) {
    throw new BuildTargetParseException(String.format("'%s' cannot contain colon",buildTargetPattern));
  }
  if (!buildTargetPattern.equals(BUILD_RULE_PREFIX + WILDCARD_BUILD_RULE_SUFFIX)) {
    String basePathWithPrefix=buildTargetPattern.substring(0,buildTargetPattern.length() - WILDCARD_BUILD_RULE_SUFFIX.length() - 1);
    BuildTargetParser.checkBaseName(basePathWithPrefix,buildTargetPattern);
  }
  String basePathWithSlash=buildTargetPattern.substring(BUILD_RULE_PREFIX.length(),buildTargetPattern.length() - WILDCARD_BUILD_RULE_SUFFIX.length());
  Path basePath=cellPath.getFileSystem().getPath(basePathWithSlash);
  return createForDescendants(cellPath,basePath);
}
