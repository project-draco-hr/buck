{
  Files.walkFileTree(path,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult visitFile(    Path file,    BasicFileAttributes attrs) throws IOException {
      Files.delete(file);
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFileFailed(    Path file,    IOException exc) throws IOException {
      errorHandler.handle(exc);
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult postVisitDirectory(    Path dir,    IOException e) throws IOException {
      if (e != null) {
        errorHandler.handle(e);
      }
 else {
        if (!(options.contains(DeleteRecursivelyOptions.DELETE_CONTENTS_ONLY) && dir.equals(path))) {
          Files.delete(dir);
        }
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
}
