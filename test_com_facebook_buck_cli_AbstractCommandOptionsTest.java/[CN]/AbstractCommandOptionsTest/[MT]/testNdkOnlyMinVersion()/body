{
  BuckConfig buckConfig=createMock(BuckConfig.class);
  expect(buckConfig.getMinimumNdkVersion()).andReturn(Optional.of("r8"));
  Optional<String> empty=Optional.absent();
  expect(buckConfig.getMaximumNdkVersion()).andReturn(empty);
  ProjectFilesystem projectFilesystem=createMock(ProjectFilesystem.class);
  replayAll();
  AbstractCommandOptions options=new AbstractCommandOptions(buckConfig){
  }
;
  try {
    options.validateNdkVersion(projectFilesystem,new File("/some/path/to/ndk"));
    fail("Should not be valid");
  }
 catch (  HumanReadableException e) {
    assertEquals("Either both min_version and max_version are provided or neither are",e.getMessage());
  }
  verifyAll();
}
