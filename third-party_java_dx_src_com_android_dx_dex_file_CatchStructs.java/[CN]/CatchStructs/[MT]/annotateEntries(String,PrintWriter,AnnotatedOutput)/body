{
  finishProcessingIfNecessary();
  boolean consume=(annotateTo != null);
  int amt1=consume ? 6 : 0;
  int amt2=consume ? 2 : 0;
  int size=table.size();
  String subPrefix=prefix + "  ";
  if (consume) {
    annotateTo.annotate(0,prefix + "tries:");
  }
 else {
    printTo.println(prefix + "tries:");
  }
  for (int i=0; i < size; i++) {
    CatchTable.Entry entry=table.get(i);
    CatchHandlerList handlers=entry.getHandlers();
    String s1=subPrefix + "try " + Hex.u2or4(entry.getStart())+ ".."+ Hex.u2or4(entry.getEnd());
    String s2=handlers.toHuman(subPrefix,"");
    if (consume) {
      annotateTo.annotate(amt1,s1);
      annotateTo.annotate(amt2,s2);
    }
 else {
      printTo.println(s1);
      printTo.println(s2);
    }
  }
  if (!consume) {
    return;
  }
  annotateTo.annotate(0,prefix + "handlers:");
  annotateTo.annotate(encodedHandlerHeaderSize,subPrefix + "size: " + Hex.u2(handlerOffsets.size()));
  int lastOffset=0;
  CatchHandlerList lastList=null;
  for (  Map.Entry<CatchHandlerList,Integer> mapping : handlerOffsets.entrySet()) {
    CatchHandlerList list=mapping.getKey();
    int offset=mapping.getValue();
    if (lastList != null) {
      annotateAndConsumeHandlers(lastList,lastOffset,offset - lastOffset,subPrefix,printTo,annotateTo);
    }
    lastList=list;
    lastOffset=offset;
  }
  annotateAndConsumeHandlers(lastList,lastOffset,encodedHandlers.length - lastOffset,subPrefix,printTo,annotateTo);
}
