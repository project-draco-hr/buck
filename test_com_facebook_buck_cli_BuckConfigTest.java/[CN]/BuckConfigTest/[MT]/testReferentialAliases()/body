{
  BuildTargetParser parser=EasyMock.createMock(BuildTargetParser.class);
  EasyMock.expect(parser.parse("//java/com/example:foo",ParseContext.fullyQualified())).andReturn(BuildTargetFactory.newInstance("//java/com/example:foo"));
  EasyMock.expect(parser.parse("//java/com/example:bar",ParseContext.fullyQualified())).andReturn(BuildTargetFactory.newInstance("//java/com/example:bar"));
  EasyMock.replay(parser);
  Reader reader=new StringReader(Joiner.on('\n').join("[alias]","foo            = //java/com/example:foo","bar            = //java/com/example:bar","foo_codename   = foo","","# Do not delete these: automation builds require these aliases to exist!","automation_foo = foo_codename","automation_bar = bar"));
  BuckConfig config=BuckConfig.createFromReader(reader,parser);
  assertEquals("//java/com/example:foo",config.getBuildTargetForAlias("foo"));
  assertEquals("//java/com/example:bar",config.getBuildTargetForAlias("bar"));
  assertEquals("//java/com/example:foo",config.getBuildTargetForAlias("foo_codename"));
  assertEquals("//java/com/example:foo",config.getBuildTargetForAlias("automation_foo"));
  assertEquals("//java/com/example:bar",config.getBuildTargetForAlias("automation_bar"));
  assertNull(config.getBuildTargetForAlias("baz"));
  EasyMock.verify(parser);
}
