{
  expect(watchService.poll()).andReturn(key).andReturn(null);
  expect(filesystem.isPathChangeEvent(anyObject(WatchEvent.class))).andReturn(true).anyTimes();
  expect(filesystem.getRootPath()).andReturn(path).anyTimes();
  expect(key.pollEvents()).andReturn(Lists.<WatchEvent<?>>newArrayList(createPathEvent(new File("./someproject/somedir/SomeClass.java"),StandardWatchEventKinds.ENTRY_MODIFY)));
  expect(path.relativize(anyObject(Path.class))).andReturn(Paths.get("somedir/SomeClass.java"));
  replay(filesystem,eventBus,watchService,path,key);
  watcher=new WatchServiceWatcher(filesystem,eventBus,ImmutableSet.<Path>of(Paths.get("somedir")),watchService);
  visitor.getValue().preVisitDirectory(path,null);
  watcher.postEvents();
  verify(filesystem,eventBus,watchService,path,key);
}
