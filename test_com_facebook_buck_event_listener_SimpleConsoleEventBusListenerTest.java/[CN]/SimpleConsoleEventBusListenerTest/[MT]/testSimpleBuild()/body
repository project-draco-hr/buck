{
  String expectedOutput="";
  Clock fakeClock=new IncrementingFakeClock(TimeUnit.SECONDS.toNanos(1));
  BuckEventBus eventBus=BuckEventBusFactory.newInstance(fakeClock);
  TestConsole console=new TestConsole();
  BuildTarget fakeTarget=BuildTargetFactory.newInstance("//banana:stand");
  ImmutableSet<BuildTarget> buildTargets=ImmutableSet.of(fakeTarget);
  Iterable<String> buildArgs=Iterables.transform(buildTargets,Functions.toStringFunction());
  FakeBuildRule fakeRule=new FakeBuildRule(fakeTarget,new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer())),ImmutableSortedSet.<BuildRule>of());
  SimpleConsoleEventBusListener listener=new SimpleConsoleEventBusListener(console,fakeClock,TestResultSummaryVerbosity.of(false,false),Locale.US,logPath,new DefaultExecutionEnvironment(ImmutableMap.copyOf(System.getenv()),System.getProperties()));
  eventBus.register(listener);
  final long threadId=0;
  BuildEvent.Started buildEventStarted=BuildEvent.started(buildArgs);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(buildEventStarted,0L,TimeUnit.MILLISECONDS,threadId));
  ParseEvent.Started parseStarted=ParseEvent.started(buildTargets);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(parseStarted,0L,TimeUnit.MILLISECONDS,threadId));
  assertOutput("",console);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(ParseEvent.finished(parseStarted,Optional.<TargetGraph>absent()),400L,TimeUnit.MILLISECONDS,threadId));
  expectedOutput+="[-] PARSING BUCK FILES...FINISHED 0.4s\n";
  assertOutput(expectedOutput,console);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(BuildRuleEvent.started(fakeRule),600L,TimeUnit.MILLISECONDS,threadId));
  HttpArtifactCacheEvent.Scheduled storeScheduledOne=postStoreScheduled(eventBus,threadId,TARGET_ONE,700L);
  HttpArtifactCacheEvent.Scheduled storeScheduledTwo=postStoreScheduled(eventBus,threadId,TARGET_TWO,700L);
  HttpArtifactCacheEvent.Started storeStartedOne=postStoreStarted(eventBus,threadId,710L,storeScheduledOne);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(BuildRuleEvent.finished(fakeRule,BuildRuleKeys.of(new RuleKey("aaaa")),BuildRuleStatus.SUCCESS,CacheResult.miss(),Optional.of(BuildRuleSuccessType.BUILT_LOCALLY),Optional.<HashCode>absent(),Optional.<Long>absent()),1000L,TimeUnit.MILLISECONDS,threadId));
  eventBus.postWithoutConfiguring(configureTestEventAtTime(BuildEvent.finished(buildEventStarted,0),1234L,TimeUnit.MILLISECONDS,threadId));
  expectedOutput+="BUILT  0.4s //banana:stand\n" + "[-] BUILDING...FINISHED 0.8s\n" + "WAITING FOR HTTP CACHE UPLOADS (0 COMPLETE/0 FAILED/1 UPLOADING/1 PENDING)\n";
  assertOutput(expectedOutput,console);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(ConsoleEvent.severe("I've made a huge mistake."),1500L,TimeUnit.MILLISECONDS,threadId));
  expectedOutput+="I've made a huge mistake.\n";
  assertOutput(expectedOutput,console);
  InstallEvent.Started installEventStarted=configureTestEventAtTime(InstallEvent.started(fakeTarget),2500L,TimeUnit.MILLISECONDS,threadId);
  eventBus.postWithoutConfiguring(installEventStarted);
  assertOutput(expectedOutput,console);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(InstallEvent.finished(installEventStarted,true,Optional.<Long>absent(),Optional.<String>absent()),4000L,TimeUnit.MILLISECONDS,threadId));
  expectedOutput+="[-] INSTALLING...FINISHED 1.5s\n";
  assertOutput(expectedOutput,console);
  postStoreFinished(eventBus,threadId,5015L,true,storeStartedOne);
  HttpArtifactCacheEvent.Started storeStartedTwo=postStoreStarted(eventBus,threadId,5020L,storeScheduledTwo);
  postStoreFinished(eventBus,threadId,5020L,false,storeStartedTwo);
  eventBus.postWithoutConfiguring(configureTestEventAtTime(HttpArtifactCacheEvent.newShutdownEvent(),6000L,TimeUnit.MILLISECONDS,threadId));
  expectedOutput+="[-] HTTP CACHE UPLOAD...FINISHED 5.3s (1 COMPLETE/1 FAILED/0 UPLOADING/0 PENDING)\n";
  assertOutput(expectedOutput,console);
}
