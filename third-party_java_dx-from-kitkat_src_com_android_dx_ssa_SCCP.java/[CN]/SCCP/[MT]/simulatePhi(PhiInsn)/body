{
  int phiResultReg=insn.getResult().getReg();
  if (latticeValues[phiResultReg] == VARYING) {
    return;
  }
  RegisterSpecList sources=insn.getSources();
  int phiResultValue=TOP;
  Constant phiConstant=null;
  int sourceSize=sources.size();
  for (int i=0; i < sourceSize; i++) {
    int predBlockIndex=insn.predBlockIndexForSourcesIndex(i);
    int sourceReg=sources.get(i).getReg();
    int sourceRegValue=latticeValues[sourceReg];
    if (!executableBlocks.get(predBlockIndex)) {
      continue;
    }
    if (sourceRegValue == CONSTANT) {
      if (phiConstant == null) {
        phiConstant=latticeConstants[sourceReg];
        phiResultValue=CONSTANT;
      }
 else       if (!latticeConstants[sourceReg].equals(phiConstant)) {
        phiResultValue=VARYING;
        break;
      }
    }
 else {
      phiResultValue=sourceRegValue;
      break;
    }
  }
  if (setLatticeValueTo(phiResultReg,phiResultValue,phiConstant)) {
    addUsersToWorklist(phiResultReg,phiResultValue);
  }
}
