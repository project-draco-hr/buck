{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(testCase,"infertest",temporaryFolder);
  workspace.setUp();
  Path inferBin=workspace.getPath("fake-infer").resolve("fake-bin");
  Path facebookClangPluginsRoot=workspace.getPath("fake-infer").resolve("fake-clang");
  workspace.setUp();
  String blacklistRegexConfig="";
  if (rawBlacklistRegex.isPresent()) {
    blacklistRegexConfig="blacklist_regex = " + rawBlacklistRegex.get() + "\n";
  }
  workspace.writeContentsToPath(String.format("[infer]\n" + "infer_bin = %s\n" + "clang_compiler = %s\n"+ "clang_plugin = %s\n"+ "%s\n"+ "[build]\n"+ "depfiles = cache",inferBin.toString(),facebookClangPluginsRoot.resolve("fake-clang"),facebookClangPluginsRoot.resolve("fake-plugin"),blacklistRegexConfig),".buckconfig");
  return workspace;
}
