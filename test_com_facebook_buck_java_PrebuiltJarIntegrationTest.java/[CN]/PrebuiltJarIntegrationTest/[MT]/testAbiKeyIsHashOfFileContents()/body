{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"prebuilt",temp);
  workspace.setUp();
  ProjectWorkspace.ProcessResult result=workspace.runBuckBuild("//:jar");
  result.assertSuccess();
  BuildRuleEvent.Finished finished=getRuleFinished(result.getCapturedEvents());
  assertEquals(CacheResult.MISS,finished.getCacheResult());
  result=workspace.runBuckBuild("//:jar");
  result.assertSuccess();
  finished=getRuleFinished(result.getCapturedEvents());
  assertEquals(CacheResult.LOCAL_KEY_UNCHANGED_HIT,finished.getCacheResult());
  File binaryJar=workspace.getFile("junit.jar");
  HashCode originalHash=Files.asByteSource(binaryJar).hash(Hashing.sha1());
  Path expectedOut=BuildTargets.getGenPath(BuildTarget.builder("//","jar").build(),"%s-abi.jar");
  File abiJar=workspace.getFile(expectedOut.toString());
  HashCode abiHash=Files.asByteSource(abiJar).hash(Hashing.sha1());
  assertTrue(abiJar.exists());
  assertNotEquals(originalHash,abiHash);
}
