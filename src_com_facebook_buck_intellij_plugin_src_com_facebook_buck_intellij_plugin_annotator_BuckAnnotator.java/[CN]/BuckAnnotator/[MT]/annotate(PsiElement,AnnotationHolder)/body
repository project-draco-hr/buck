{
  BuckValue value=PsiTreeUtil.getParentOfType(psiElement,BuckValue.class);
  if (value == null) {
    return;
  }
  final Project project=psiElement.getProject();
  if (project == null) {
    return;
  }
  String target=psiElement.getText();
  if (target.matches("\".*\"") || target.matches("'.*'")) {
    target=target.substring(1,target.length() - 1);
  }
 else {
    return;
  }
  if (!BuckBuildTargetUtil.isValidAbsoluteTarget(target)) {
    return;
  }
  VirtualFile buckDir=project.getBaseDir().findFileByRelativePath(BuckBuildTargetUtil.extractAbsoluteTarget(target));
  VirtualFile targetBuckFile=buckDir != null ? buckDir.findChild(BuckFileUtil.getBuildFileName()) : null;
  if (targetBuckFile == null) {
    TextRange range=new TextRange(psiElement.getTextRange().getStartOffset(),psiElement.getTextRange().getEndOffset());
    annotationHolder.createErrorAnnotation(range,ANNOTATOR_ERROR_CANNOT_LOCATE_TARGET);
  }
}
