{
  BuildTarget target=BuildTargetFactory.newInstance("//android_res/com/facebook/http:res");
  String symbolsFile=BuildTargets.getGenPath(target,"__%s_text_symbols__/R.txt").toString();
  String rDotJavaPackage="com.facebook";
  final ImmutableList<String> outputTextSymbols=ImmutableList.<String>builder().add("int drawable android_drawable 0x7f010000").add("int drawable fb_drawable 0x7f010001 #").build();
  RDotTxtEntryBuilder entriesBuilder=new RDotTxtEntryBuilder();
  entriesBuilder.add(new RDotTxtFile(rDotJavaPackage,symbolsFile,outputTextSymbols));
  FakeProjectFilesystem filesystem=entriesBuilder.getProjectFilesystem();
  Path uberRDotTxt=filesystem.resolve("R.txt").toAbsolutePath();
  filesystem.writeLinesToPath(outputTextSymbols,uberRDotTxt);
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer()));
  HasAndroidResourceDeps resource=AndroidResourceRuleBuilder.newBuilder().setResolver(resolver).setBuildTarget(target).setRes(new FakeSourcePath("res")).setRDotJavaPackage("com.facebook").build();
  MergeAndroidResourcesStep mergeStep=new MergeAndroidResourcesStep(filesystem,resolver,ImmutableList.of(resource),Optional.of(uberRDotTxt),Paths.get("output"),Optional.<String>absent());
  ExecutionContext executionContext=TestExecutionContext.newInstance();
  assertEquals(0,mergeStep.execute(executionContext));
  assertEquals("package com.facebook;\n" + "\n" + "public class R {\n"+ "\n"+ "  public static class drawable {\n"+ "    public static final int android_drawable=0x7f010000;\n"+ "    public static final int fb_drawable=0x7f010001;\n"+ "  }\n"+ "\n"+ "  public static final int[] custom_drawables = { 0x7f010001 };\n"+ "\n"+ "}\n",filesystem.readFileIfItExists(Paths.get("output/com/facebook/R.java")).get().replace("\r",""));
}
