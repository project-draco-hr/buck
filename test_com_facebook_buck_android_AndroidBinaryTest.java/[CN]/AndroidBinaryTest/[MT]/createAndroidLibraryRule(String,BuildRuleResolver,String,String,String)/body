{
  BuildTarget libraryOnebuildTarget=BuildTargetFactory.newInstance(buildTarget);
  AndroidLibraryBuilder androidLibraryRuleBuilder=AndroidLibraryBuilder.createBuilder(libraryOnebuildTarget).addSrc(Paths.get(buildTarget.split(":")[1] + ".java"));
  if (!Strings.isNullOrEmpty(resDirectory) || !Strings.isNullOrEmpty(assetDirectory)) {
    BuildTarget resourceOnebuildTarget=BuildTargetFactory.newInstance(buildTarget + "_resources");
    BuildRule androidResourceRule=ruleResolver.addToIndex(AndroidResourceRuleBuilder.newBuilder().setAssets(Paths.get(assetDirectory)).setRes(resDirectory == null ? null : Paths.get(resDirectory)).setBuildTarget(resourceOnebuildTarget).build());
    androidLibraryRuleBuilder.addDep(androidResourceRule);
  }
  if (!Strings.isNullOrEmpty(nativeLibsDirectory)) {
    BuildTarget nativeLibOnebuildTarget=BuildTargetFactory.newInstance(buildTarget + "_native_libs");
    BuildRule nativeLibsRule=PrebuiltNativeLibraryBuilder.newBuilder(nativeLibOnebuildTarget).setNativeLibs(Paths.get(nativeLibsDirectory)).build(ruleResolver);
    ruleResolver.addToIndex(nativeLibsRule);
    androidLibraryRuleBuilder.addDep(nativeLibsRule);
  }
  return androidLibraryRuleBuilder.build(ruleResolver);
}
