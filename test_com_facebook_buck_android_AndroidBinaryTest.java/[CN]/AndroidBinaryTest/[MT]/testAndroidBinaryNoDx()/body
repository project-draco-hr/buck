{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  SourcePathResolver pathResolver=new SourcePathResolver(ruleResolver);
  BuildRule libraryOne=createAndroidLibraryRule("//java/src/com/facebook/base:libraryOne",ruleResolver,null,null,null);
  BuildRule libraryOneRule=ruleResolver.getRule(libraryOne.getBuildTarget());
  BuildRule libraryTwo=createAndroidLibraryRule("//java/src/com/facebook/base:libraryTwo",ruleResolver,null,null,null);
  BuildRule libraryTwoRule=ruleResolver.getRule(libraryTwo.getBuildTarget());
  BuildTarget binaryBuildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/base:apk");
  ImmutableSortedSet<BuildTarget> originalDepsTargets=ImmutableSortedSet.of(libraryOneRule.getBuildTarget(),libraryTwoRule.getBuildTarget());
  BuildRule keystoreRule=addKeystoreRule(ruleResolver);
  AndroidBinary androidBinary=(AndroidBinary)AndroidBinaryBuilder.createBuilder(binaryBuildTarget).setOriginalDeps(originalDepsTargets).setBuildTargetsToExcludeFromDex(ImmutableSet.of(BuildTargetFactory.newInstance("//java/src/com/facebook/base:libraryTwo"))).setManifest(new TestSourcePath("java/src/com/facebook/base/AndroidManifest.xml")).setKeystore(keystoreRule.getBuildTarget()).build(ruleResolver);
  AndroidPackageableCollection packageableCollection=androidBinary.getAndroidPackageableCollection();
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  FakeBuildableContext buildableContext=new FakeBuildableContext();
  androidBinary.addProguardCommands(ImmutableSet.copyOf(pathResolver.getAllPaths(packageableCollection.getClasspathEntriesToDex())),ImmutableSet.copyOf(pathResolver.getAllPaths(packageableCollection.getProguardConfigs())),commands,buildableContext);
  ImmutableSet<Path> expectedRecordedArtifacts=ImmutableSet.of(GEN_PATH.resolve("java/src/com/facebook/base/__apk#aapt_package__proguard__/" + ".proguard/configuration.txt"),GEN_PATH.resolve("java/src/com/facebook/base/__apk#aapt_package__proguard__/" + ".proguard/mapping.txt"));
  assertEquals(expectedRecordedArtifacts,buildableContext.getRecordedArtifacts());
  buildableContext=new FakeBuildableContext();
  ImmutableList.Builder<Step> expectedSteps=ImmutableList.builder();
  ProGuardObfuscateStep.create(Paths.get("."),Optional.<Path>absent(),"1024M",GEN_PATH.resolve("java/src/com/facebook/base/__apk#aapt_package__proguard__/" + "/.proguard/proguard.txt"),ImmutableSet.<Path>of(),ProGuardObfuscateStep.SdkProguardType.DEFAULT,Optional.<Integer>absent(),ImmutableMap.of(GEN_PATH.resolve("java/src/com/facebook/base/lib__libraryOne__output/libraryOne.jar"),GEN_PATH.resolve("java/src/com/facebook/base/__apk#aapt_package__proguard__/.proguard/buck-out/" + "gen/java/src/com/facebook/base/lib__libraryOne__output/" + "libraryOne-obfuscated.jar")),ImmutableSet.of(GEN_PATH.resolve("java/src/com/facebook/base/lib__libraryTwo__output/libraryTwo.jar")),GEN_PATH.resolve("java/src/com/facebook/base/__apk#aapt_package__proguard__/.proguard"),buildableContext,expectedSteps);
  assertEquals(expectedSteps.build(),commands.build());
  assertEquals(expectedRecordedArtifacts,buildableContext.getRecordedArtifacts());
}
