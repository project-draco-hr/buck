{
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(ruleResolver);
  JavaLibrary javaLibrary=(JavaLibrary)JavaLibraryBuilder.createBuilder(BuildTargetFactory.newInstance("//:lib")).build(ruleResolver);
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTargetFactory.newInstance("//:target")).build();
  DexProducedFromJavaLibrary dexProducedFromJavaLibrary=new DexProducedFromJavaLibrary(params,pathResolver,javaLibrary);
  ObjectMapper mapper=ObjectMappers.newDefaultInstance();
  FakeOnDiskBuildInfo onDiskBuildInfo=new FakeOnDiskBuildInfo().putMetadata(DexProducedFromJavaLibrary.LINEAR_ALLOC_KEY_ON_DISK_METADATA,"0").putMetadata(DexProducedFromJavaLibrary.CLASSNAMES_TO_HASHES,mapper.writeValueAsString(ImmutableMap.<String,String>of()));
  initialize(dexProducedFromJavaLibrary,onDiskBuildInfo);
  assertFalse(dexProducedFromJavaLibrary.hasOutput());
}
