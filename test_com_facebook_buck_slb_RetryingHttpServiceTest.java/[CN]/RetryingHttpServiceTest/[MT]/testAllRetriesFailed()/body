{
  String errorMessage="Super cool and amazing error msg.";
  EasyMock.expect(mockService.makeRequest(EasyMock.<String>isNull(),EasyMock.<Request.Builder>isNull())).andThrow(new IOException(errorMessage)).times(2);
  EasyMock.replay(mockService);
  try (RetryingHttpService service=createRetryingService(1)){
    try {
      service.makeRequest(null,null);
      Assert.fail("An exception should've been thrown since all retries failed.");
    }
 catch (    RetryingHttpService.RetryingHttpServiceException exception) {
      Assert.assertTrue(exception.getMessage().contains(errorMessage));
    }
  }
   EasyMock.verify(mockService);
}
