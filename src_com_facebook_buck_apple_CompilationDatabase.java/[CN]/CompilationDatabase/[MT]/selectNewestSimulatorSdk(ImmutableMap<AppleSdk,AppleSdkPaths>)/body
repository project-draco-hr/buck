{
  Ordering<AppleSdk> appleSdkVersionComparator=Ordering.from(new VersionStringComparator()).onResultOf(new Function<AppleSdk,String>(){
    @Override public String apply(    AppleSdk appleSdk){
      return appleSdk.getVersion();
    }
  }
);
  ImmutableSortedSet<AppleSdk> sortedIphoneSimulatorSdks=FluentIterable.from(allAppleSdkPaths.keySet()).filter(new Predicate<AppleSdk>(){
    @Override public boolean apply(    AppleSdk sdk){
      return sdk.getApplePlatform() == ApplePlatform.IPHONESIMULATOR;
    }
  }
).toSortedSet(appleSdkVersionComparator);
  if (sortedIphoneSimulatorSdks.isEmpty()) {
    throw new RuntimeException("No iphonesimulator found in: " + allAppleSdkPaths.keySet());
  }
  return allAppleSdkPaths.get(sortedIphoneSimulatorSdks.last());
}
