def testEquality(self):
    self.assertListEqual([], [])
    self.assertTupleEqual((), ())
    self.assertSequenceEqual([], ())
    a = [0, 'a', []]
    b = []
    self.assertRaises(unittest2.TestCase.failureException, self.assertListEqual, a, b)
    self.assertRaises(unittest2.TestCase.failureException, self.assertListEqual, tuple(a), tuple(b))
    self.assertRaises(unittest2.TestCase.failureException, self.assertSequenceEqual, a, tuple(b))
    b.extend(a)
    self.assertListEqual(a, b)
    self.assertTupleEqual(tuple(a), tuple(b))
    self.assertSequenceEqual(a, tuple(b))
    self.assertSequenceEqual(tuple(a), b)
    self.assertRaises(self.failureException, self.assertListEqual, a, tuple(b))
    self.assertRaises(self.failureException, self.assertTupleEqual, tuple(a), b)
    self.assertRaises(self.failureException, self.assertListEqual, None, b)
    self.assertRaises(self.failureException, self.assertTupleEqual, None, tuple(b))
    self.assertRaises(self.failureException, self.assertSequenceEqual, None, tuple(b))
    self.assertRaises(self.failureException, self.assertListEqual, 1, 1)
    self.assertRaises(self.failureException, self.assertTupleEqual, 1, 1)
    self.assertRaises(self.failureException, self.assertSequenceEqual, 1, 1)
    self.assertDictEqual({}, {})
    c = {'x': 1, }
    d = {}
    self.assertRaises(unittest2.TestCase.failureException, self.assertDictEqual, c, d)
    d.update(c)
    self.assertDictEqual(c, d)
    d['x'] = 0
    self.assertRaises(unittest2.TestCase.failureException, self.assertDictEqual, c, d, 'These are unequal')
    self.assertRaises(self.failureException, self.assertDictEqual, None, d)
    self.assertRaises(self.failureException, self.assertDictEqual, [], d)
    self.assertRaises(self.failureException, self.assertDictEqual, 1, 1)
