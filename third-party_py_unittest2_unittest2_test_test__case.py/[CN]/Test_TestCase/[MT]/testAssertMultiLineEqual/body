def testAssertMultiLineEqual(self):
    sample_text = 'http://www.python.org/doc/2.3/lib/module-unittest.html\ntest case\n    A test case is the smallest unit of testing. [...]\n'
    revised_sample_text = 'http://www.python.org/doc/2.4.1/lib/module-unittest.html\ntest case\n    A test case is the smallest unit of testing. [...] You may provide your\n    own implementation that does not subclass from TestCase, of course.\n'
    sample_text_error = '- http://www.python.org/doc/2.3/lib/module-unittest.html\n?                             ^\n+ http://www.python.org/doc/2.4.1/lib/module-unittest.html\n?                             ^^^\n  test case\n-     A test case is the smallest unit of testing. [...]\n+     A test case is the smallest unit of testing. [...] You may provide your\n?                                                       +++++++++++++++++++++\n+     own implementation that does not subclass from TestCase, of course.\n'
    self.maxDiff = None
    for type_changer in ((lambda x: x), (lambda x: x.decode('utf8'))):
        try:
            self.assertMultiLineEqual(type_changer(sample_text), type_changer(revised_sample_text))
        except self.failureException as e:
            error = str(e).encode('utf8').split('\n', 1)[1]
            self.assertTrue((sample_text_error == error))
