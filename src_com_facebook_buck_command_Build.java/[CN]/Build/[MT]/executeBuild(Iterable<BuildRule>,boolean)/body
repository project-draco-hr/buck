{
  buildContext=BuildContext.builder().setActionGraph(actionGraph).setStepRunner(stepRunner).setProjectFilesystem(executionContext.getProjectFilesystem()).setClock(clock).setArtifactCache(artifactCache).setJavaPackageFinder(javaPackageFinder).setEventBus(executionContext.getBuckEventBus()).setAndroidBootclasspathForAndroidPlatformTarget(executionContext.getAndroidPlatformTargetOptional()).setBuildDependencies(buildDependencies).setBuildId(executionContext.getBuildId()).setEnvironment(executionContext.getEnvironment()).build();
  Iterable<ListenableFuture<BuildRuleSuccess>> futures=Iterables.transform(rulesToBuild,new Function<BuildRule,ListenableFuture<BuildRuleSuccess>>(){
    @Override public ListenableFuture<BuildRuleSuccess> apply(    BuildRule rule){
      return buildEngine.build(buildContext,rule);
    }
  }
);
  if (isKeepGoing) {
    return Futures.successfulAsList(futures);
  }
 else {
    return Futures.allAsList(futures);
  }
}
