{
  ImmutableList<Path> filesToDex=ImmutableList.of(Paths.get("foo.dex.jar"),Paths.get("bar.dex.jar"));
  Path outputPath=Paths.get("classes.dex.jar");
  EnumSet<DxStep.Option> dxOptions=EnumSet.noneOf(DxStep.Option.class);
  Step dxStep=SmartDexingStep.createDxStepForDxPseudoRule(filesToDex,outputPath,dxOptions);
  String xmx=DxStep.XMX_OVERRIDE.isEmpty() ? "" : DxStep.XMX_OVERRIDE + " ";
  assertEquals(Paths.get("/usr/bin/dx") + " " + xmx+ "--dex --output classes.dex.jar "+ "foo.dex.jar bar.dex.jar && dex_meta dexPath:classes.dex.jar "+ "dexMetaPath:classes.dex.jar.meta",dxStep.getDescription(createMockedExecutionContext()));
  verifyAll();
}
