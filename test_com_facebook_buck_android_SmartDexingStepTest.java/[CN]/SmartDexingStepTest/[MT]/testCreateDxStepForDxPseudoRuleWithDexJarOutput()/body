{
  ProjectFilesystem filesystem=FakeProjectFilesystem.createJavaOnlyFilesystem();
  ImmutableList<Path> filesToDex=ImmutableList.of(Paths.get("foo.dex.jar"),Paths.get("bar.dex.jar"));
  Path outputPath=Paths.get("classes.dex.jar");
  EnumSet<DxStep.Option> dxOptions=EnumSet.noneOf(DxStep.Option.class);
  Step dxStep=SmartDexingStep.createDxStepForDxPseudoRule(filesystem,filesToDex,outputPath,dxOptions,Optional.<Integer>absent());
  String xmx=DxStep.XMX_OVERRIDE.isEmpty() ? "" : DxStep.XMX_OVERRIDE + " ";
  assertEquals("(cd /opt/src/buck && " + Paths.get("/usr/bin/dx") + " "+ xmx+ "--dex --output /opt/src/buck/classes.dex.jar "+ "/opt/src/buck/foo.dex.jar /opt/src/buck/bar.dex.jar) && "+ "dex_meta dexPath:classes.dex.jar dexMetaPath:classes.dex.jar.meta",dxStep.getDescription(createMockedExecutionContext()));
  verifyAll();
}
