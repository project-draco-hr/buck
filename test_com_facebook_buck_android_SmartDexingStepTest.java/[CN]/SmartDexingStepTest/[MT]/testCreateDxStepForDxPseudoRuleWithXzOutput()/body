{
  ImmutableList<Path> filesToDex=ImmutableList.of(Paths.get("foo.dex.jar"),Paths.get("bar.dex.jar"));
  String outputPath="classes.dex.jar.xz";
  EnumSet<DxStep.Option> dxOptions=EnumSet.noneOf(DxStep.Option.class);
  Step dxStep=SmartDexingStep.createDxStepForDxPseudoRule(filesToDex,outputPath,dxOptions);
  assertTrue("Result should be a CompositeStep.",dxStep instanceof CompositeStep);
  List<Step> steps=ImmutableList.copyOf((CompositeStep)dxStep);
  String xmx=DxStep.XMX_OVERRIDE.isEmpty() ? "" : DxStep.XMX_OVERRIDE + " ";
  MoreAsserts.assertSteps("Steps should repack zip entries and then compress using xz.",ImmutableList.of("/usr/bin/dx " + xmx + "--dex --output classes.dex.tmp.jar foo.dex.jar bar.dex.jar","repack classes.dex.tmp.jar in classes.dex.jar","rm -f classes.dex.tmp.jar","xz -z -4 --check=crc32 classes.dex.jar"),steps,createMockedExecutionContext());
  verifyAll();
}
