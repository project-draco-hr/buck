{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  FakeBuildRule dep=resolver.addToIndex(new FakeBuildRule(BuildTargetFactory.newInstance("//:dep"),pathResolver));
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  JavacOptions options=JavacOptions.builder().setSourceLevel("5").setTargetLevel("5").setJavacJarPath(new BuildTargetSourcePath(dep.getBuildTarget())).build();
  AndroidLibraryGraphEnhancer graphEnhancer=new AndroidLibraryGraphEnhancer(target,new FakeBuildRuleParamsBuilder(target).build(),options,DependencyMode.FIRST_ORDER,false,Optional.<String>absent());
  Optional<DummyRDotJava> result=graphEnhancer.getBuildableForAndroidResources(resolver,true);
  assertTrue(result.isPresent());
  assertThat(result.get().getDeps(),Matchers.<BuildRule>hasItem(dep));
}
