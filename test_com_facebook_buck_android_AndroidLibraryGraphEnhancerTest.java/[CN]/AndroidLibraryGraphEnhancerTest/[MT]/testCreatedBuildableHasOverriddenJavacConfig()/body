{
  BuildTarget buildTarget=BuildTargetFactory.newInstance("//java/com/example:library");
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildRule resourceRule1=ruleResolver.addToIndex(AndroidResourceRuleBuilder.newBuilder().setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res1")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res1")).build());
  BuildRule resourceRule2=ruleResolver.addToIndex(AndroidResourceRuleBuilder.newBuilder().setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res2")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res2")).build());
  BuildRuleParams buildRuleParams=new FakeBuildRuleParamsBuilder(buildTarget).setDeps(ImmutableSortedSet.of(resourceRule1,resourceRule2)).build();
  AndroidLibraryGraphEnhancer graphEnhancer=new AndroidLibraryGraphEnhancer(buildTarget,buildRuleParams,JavacOptions.builder(JavacOptions.DEFAULTS).setJavaCompilerEnviornment(new JavaCompilerEnvironment(Optional.of(Paths.get("javac")),Optional.of(new JavacVersion("1.7")),PopularAndroidJavaCompilerEnvironment.TARGETED_JAVA_VERSION,PopularAndroidJavaCompilerEnvironment.TARGETED_JAVA_VERSION)).build());
  Result result=graphEnhancer.createBuildableForAndroidResources(ruleResolver,false);
  Optional<DummyRDotJava> dummyRDotJava=result.getOptionalDummyRDotJava();
  assertTrue(dummyRDotJava.isPresent());
  JavacOptions javacOptions=dummyRDotJava.get().getJavacOptions();
  assertEquals(Paths.get("javac"),javacOptions.getJavaCompilerEnvironment().getJavacPath().get());
  assertEquals(new JavacVersion("1.7"),javacOptions.getJavaCompilerEnvironment().getJavacVersion().get());
}
