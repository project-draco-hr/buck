{
  BuildTarget buildTarget=BuildTargetFactory.newInstance("//java/com/example:library");
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  AndroidResourceRule resourceRule1=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res1")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res1")));
  AndroidResourceRule resourceRule2=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res2")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res2")));
  BuildRuleParams buildRuleParams=new FakeBuildRuleParams(buildTarget,ImmutableSortedSet.<BuildRule>of(resourceRule1,resourceRule2));
  AndroidLibraryGraphEnhancer graphEnhancer=new AndroidLibraryGraphEnhancer(buildTarget,buildRuleParams,new FakeAbstractBuildRuleBuilderParams(),JavacOptions.builder(JavacOptions.DEFAULTS).setPathToJavac(Optional.of(Paths.get("javac"))).setJavacVersion(Optional.of("1.7")).build());
  Result result=graphEnhancer.createBuildableForAndroidResources(ruleResolver,false);
  Optional<DummyRDotJava> dummyRDotJava=result.getOptionalDummyRDotJava();
  assertTrue(dummyRDotJava.isPresent());
  JavacOptions javacOptions=dummyRDotJava.get().getJavacOptions();
  assertEquals(Paths.get("javac"),javacOptions.getPathToJavac().get());
  assertEquals("1.7",javacOptions.getJavacVersion().get());
}
