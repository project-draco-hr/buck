{
  final ImmutableMap.Builder<String,SourcePath> libraries=ImmutableMap.builder();
  try {
    new AbstractBreadthFirstTraversal<BuildRule>(deps){
      @Override public ImmutableSet<BuildRule> visit(      BuildRule rule){
        if (rule instanceof JavaNativeLinkable) {
          JavaNativeLinkable linkable=(JavaNativeLinkable)rule;
          try {
            libraries.putAll(linkable.getSharedLibraries(cxxPlatform));
          }
 catch (          NoSuchBuildTargetException e) {
            throw new ClosureException(e);
          }
        }
        if (rule instanceof JavaNativeLinkable || rule instanceof JavaLibrary) {
          return rule.getDeps();
        }
 else {
          return ImmutableSet.of();
        }
      }
    }
.start();
  }
 catch (  ClosureException e) {
    throw (NoSuchBuildTargetException)e.getException();
  }
  return libraries.build();
}
