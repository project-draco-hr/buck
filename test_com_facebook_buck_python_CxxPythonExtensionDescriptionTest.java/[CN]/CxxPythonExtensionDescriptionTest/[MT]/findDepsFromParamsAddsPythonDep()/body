{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  new PrebuiltCxxLibraryBuilder(PYTHON2_DEP_TARGET).setHeaderOnly(true).setExportedLinkerFlags(ImmutableList.of("-lpython2")).build(resolver,filesystem);
  new PrebuiltCxxLibraryBuilder(PYTHON3_DEP_TARGET).setHeaderOnly(true).setExportedLinkerFlags(ImmutableList.of("-lpython3")).build(resolver,filesystem);
  CxxPythonExtensionDescription desc=(CxxPythonExtensionDescription)new CxxPythonExtensionBuilder(target,FlavorDomain.of("Python Platform",PY2,PY3),new CxxBuckConfig(FakeBuckConfig.builder().build()),CxxTestBuilder.createDefaultPlatforms()).build().getDescription();
  CxxPythonExtensionDescription.Arg constructorArg=desc.createUnpopulatedConstructorArg();
  Iterable<BuildTarget> res=desc.findDepsForTargetFromConstructorArgs(BuildTargetFactory.newInstance("//foo:bar"),createCellRoots(filesystem),constructorArg);
  assertThat(res,Matchers.contains(PYTHON2_DEP_TARGET,PYTHON3_DEP_TARGET));
}
