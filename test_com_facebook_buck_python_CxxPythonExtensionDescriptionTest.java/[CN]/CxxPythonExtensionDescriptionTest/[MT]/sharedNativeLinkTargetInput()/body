{
  CxxLibraryBuilder python2Builder=new CxxLibraryBuilder(PYTHON2_DEP_TARGET);
  CxxLibraryBuilder python3Builder=new CxxLibraryBuilder(PYTHON3_DEP_TARGET);
  CxxPythonExtensionBuilder builder=new CxxPythonExtensionBuilder(BuildTargetFactory.newInstance("//:rule"),FlavorDomain.of("Python Platform",PY2,PY3),new CxxBuckConfig(FakeBuckConfig.builder().build()),CxxTestBuilder.createDefaultPlatforms());
  builder.setLinkerFlags(ImmutableList.of("--flag"));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraphFactory.newInstance(builder.build(),python2Builder.build(),python3Builder.build()),new DefaultTargetNodeToBuildRuleTransformer());
  python2Builder.build(resolver);
  python3Builder.build(resolver);
  CxxPythonExtension rule=(CxxPythonExtension)builder.build(resolver);
  SharedNativeLinkTarget sharedNativeLinkTarget=rule.getNativeLinkTarget(PY2);
  NativeLinkableInput input=sharedNativeLinkTarget.getSharedNativeLinkTargetInput(CxxPlatformUtils.DEFAULT_PLATFORM);
  assertThat(Arg.stringify(input.getArgs()),Matchers.hasItems("--flag"));
}
