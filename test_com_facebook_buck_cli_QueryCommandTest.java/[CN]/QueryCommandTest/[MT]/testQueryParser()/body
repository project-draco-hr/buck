{
  DependencyQuery query;
  query=DependencyQuery.parseQueryString("//:ased>> -4> //:>- ",normalizer);
  assertEquals(4,query.getDepth().get().longValue());
  assertEquals("//:ased>>",query.getTarget());
  assertEquals("//:>-",query.getSource().get());
  query=DependencyQuery.parseQueryString("//:dd -*>",normalizer);
  assertFalse(query.getDepth().isPresent());
  assertEquals("//:dd",query.getTarget());
  assertFalse(query.getSource().isPresent());
  try {
    query=DependencyQuery.parseQueryString("//:hello - > //:goodbye",normalizer);
    fail("Should not have parsed noncontinguous arrow");
  }
 catch (  HumanReadableException e) {
    assertEquals("Invalid query string: //:hello - > //:goodbye.",e.getMessage());
  }
  try {
    query=DependencyQuery.parseQueryString("-> //:goodbye",normalizer);
    fail("Query needs source");
  }
 catch (  HumanReadableException e) {
    assertEquals("Invalid query string: -> //:goodbye.",e.getMessage());
  }
}
