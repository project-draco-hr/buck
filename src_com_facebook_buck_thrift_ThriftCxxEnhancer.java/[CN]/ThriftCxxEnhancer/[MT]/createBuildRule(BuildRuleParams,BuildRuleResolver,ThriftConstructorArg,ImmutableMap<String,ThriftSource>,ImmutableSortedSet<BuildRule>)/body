{
  CxxHeadersAndSources spec=getThriftHeaderSourceSpec(params,args,sources);
  ImmutableSortedSet<BuildRule> allDeps=ImmutableSortedSet.<BuildRule>naturalOrder().addAll(deps).addAll(resolver.getAllRules((cpp2 ? args.cpp2Deps : args.cppDeps).or(ImmutableSortedSet.<BuildTarget>of()))).build();
  BuildRuleParams langParams=params.copyWithDeps(Suppliers.ofInstance(allDeps),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()));
  CxxLibraryDescription.Arg langArgs=cxxLibraryDescription.createEmptyConstructorArg();
  langArgs.srcs=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofRight(spec.getSources()));
  langArgs.exportedHeaders=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofRight(spec.getHeaders()));
  return cxxLibraryDescription.createBuildRule(langParams,resolver,langArgs);
}
