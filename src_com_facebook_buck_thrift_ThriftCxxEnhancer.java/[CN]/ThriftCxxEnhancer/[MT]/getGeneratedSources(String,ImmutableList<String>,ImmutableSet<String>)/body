{
  final String base=Files.getNameWithoutExtension(thriftName);
  final boolean bootstrap=options.contains("bootstrap");
  final boolean layouts=options.contains("frozen2");
  final boolean templates=cpp2 || options.contains("templates");
  final boolean perfhash=!cpp2 && options.contains("perfhash");
  final boolean separateProcessmap=cpp2 && options.contains("separate_processmap");
  final boolean fatal=cpp2 && options.contains("fatal");
  ImmutableSortedSet.Builder<String> sources=ImmutableSortedSet.naturalOrder();
  sources.add(base + "_constants.h");
  sources.add(base + "_constants.cpp");
  sources.add(base + "_types.h");
  sources.add(base + "_types.cpp");
  if (templates) {
    sources.add(base + "_types.tcc");
  }
  if (layouts) {
    sources.add(base + "_layouts.h");
    sources.add(base + "_layouts.cpp");
  }
  if (!bootstrap && !cpp2) {
    sources.add(base + "_reflection.h");
    sources.add(base + "_reflection.cpp");
  }
  if (fatal) {
    final String[] suffixes=new String[]{"","_enum","_union","_struct","_constant","_service"};
    for (    String suffix : suffixes) {
      sources.add(base + "_fatal" + suffix+ ".h");
      sources.add(base + "_fatal" + suffix+ ".cpp");
    }
  }
  if (cpp2) {
    sources.add(base + "_types_custom_protocol.h");
  }
  for (  String service : services) {
    sources.add(service + ".h");
    sources.add(service + ".cpp");
    if (cpp2) {
      sources.add(service + "_client.cpp");
      sources.add(service + "_custom_protocol.h");
    }
    if (separateProcessmap) {
      sources.add(service + "_processmap_binary.cpp");
      sources.add(service + "_processmap_compact.cpp");
    }
    if (templates) {
      sources.add(service + ".tcc");
    }
    if (perfhash) {
      sources.add(service + "_gperf.tcc");
    }
  }
  return sources.build();
}
