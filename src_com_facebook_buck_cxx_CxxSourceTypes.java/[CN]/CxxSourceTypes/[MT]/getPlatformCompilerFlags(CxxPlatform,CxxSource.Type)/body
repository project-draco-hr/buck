{
  ImmutableList.Builder<String> flags=ImmutableList.builder();
switch (type) {
case ASSEMBLER:
    flags.addAll(cxxPlatform.getAsflags());
  break;
case C_CPP_OUTPUT:
flags.addAll(cxxPlatform.getCflags());
break;
case CXX_CPP_OUTPUT:
flags.addAll(cxxPlatform.getCxxflags());
break;
case OBJC_CPP_OUTPUT:
flags.addAll(cxxPlatform.getCflags());
break;
case OBJCXX_CPP_OUTPUT:
flags.addAll(cxxPlatform.getCxxflags());
break;
case CUDA_CPP_OUTPUT:
flags.addAll(cxxPlatform.getCudaflags());
break;
case ASM:
flags.addAll(cxxPlatform.getAsmflags());
break;
default :
throw new IllegalStateException(String.format("unexpected type: %s",type));
}
return flags.build();
}
