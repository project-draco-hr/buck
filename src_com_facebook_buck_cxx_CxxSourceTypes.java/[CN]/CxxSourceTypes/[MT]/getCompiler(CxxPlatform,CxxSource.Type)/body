{
  CompilerProvider compiler;
switch (type) {
case ASSEMBLER:
    compiler=cxxPlatform.getAs();
  break;
case C_CPP_OUTPUT:
compiler=cxxPlatform.getCc();
break;
case CXX_CPP_OUTPUT:
compiler=cxxPlatform.getCxx();
break;
case OBJC_CPP_OUTPUT:
compiler=cxxPlatform.getCc();
break;
case OBJCXX_CPP_OUTPUT:
compiler=cxxPlatform.getCxx();
break;
case CUDA_CPP_OUTPUT:
if (!cxxPlatform.getCuda().isPresent()) {
throw new HumanReadableException("%s: no cuda compiler set",cxxPlatform.getFlavor());
}
compiler=cxxPlatform.getCuda().get();
break;
default :
throw new IllegalStateException(String.format("unexpected type: %s",type));
}
return compiler;
}
