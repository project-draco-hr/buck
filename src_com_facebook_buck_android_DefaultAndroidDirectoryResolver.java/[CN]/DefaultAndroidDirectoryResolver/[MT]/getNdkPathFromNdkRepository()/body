{
  Optional<Path> repositoryPathOptional=propertyFinder.findDirectoryByPropertiesThenEnvironmentVariable("ndk.repository","ANDROID_NDK_REPOSITORY");
  Optional<Path> path=Optional.absent();
  if (repositoryPathOptional.isPresent()) {
    Path repositoryPath=repositoryPathOptional.get();
    ImmutableSortedSet<Path> repositoryPathContents;
    try (DirectoryStream<Path> stream=Files.newDirectoryStream(repositoryPath)){
      repositoryPathContents=ImmutableSortedSet.copyOf(stream);
    }
 catch (    IOException e) {
      throw new HumanReadableException(e,"Failed to read the Android NDK repository directory: %s",repositoryPath);
    }
    Optional<String> newestVersion=Optional.absent();
    VersionStringComparator versionComparator=new VersionStringComparator();
    for (    Path potentialNdkPath : repositoryPathContents) {
      if (potentialNdkPath.toFile().isDirectory()) {
        Optional<String> ndkVersion=findNdkVersionFromPath(potentialNdkPath);
        if (ndkVersion.isPresent()) {
          if (targetNdkVersion.isPresent()) {
            if (targetNdkVersion.get().equals(ndkVersion.get())) {
              return Optional.of(potentialNdkPath);
            }
          }
 else {
            if (!newestVersion.isPresent() || versionComparator.compare(ndkVersion.get(),newestVersion.get()) > 0) {
              path=Optional.of(potentialNdkPath);
              newestVersion=Optional.of(ndkVersion.get());
            }
          }
        }
      }
    }
    if (!path.isPresent()) {
      throw new HumanReadableException("Couldn't find a valid NDK under %s",repositoryPath);
    }
  }
  return path;
}
