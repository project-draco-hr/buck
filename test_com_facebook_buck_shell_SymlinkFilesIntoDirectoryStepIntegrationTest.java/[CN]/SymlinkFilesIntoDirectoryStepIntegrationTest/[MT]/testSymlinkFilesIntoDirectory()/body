{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"symlink_files_into_directory",tmp);
  workspace.setUp();
  File outputFolder=tmp.newFolder("output");
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(tmp.getRoot().toPath());
  ExecutionContext executionContext=TestExecutionContext.newInstance();
  SymlinkFilesIntoDirectoryStep symlinkStep=new SymlinkFilesIntoDirectoryStep(projectFilesystem,tmp.getRoot().toPath(),ImmutableSet.of(Paths.get("a.txt"),Paths.get("foo/b.txt"),Paths.get("foo/bar/c.txt")),outputFolder.toPath());
  int exitCode=symlinkStep.execute(executionContext);
  assertEquals(0,exitCode);
  assumeThat(Platform.detect(),not(Platform.WINDOWS));
  Path symlinkToADotTxt=new File(tmp.getRoot(),"output/a.txt").toPath();
  assertTrue(Files.isSymbolicLink(symlinkToADotTxt));
  assertEquals(projectFilesystem.resolve(Paths.get("a.txt")),Files.readSymbolicLink(symlinkToADotTxt));
  Path symlinkToBDotTxt=new File(tmp.getRoot(),"output/foo/b.txt").toPath();
  assertTrue(Files.isSymbolicLink(symlinkToBDotTxt));
  assertEquals(projectFilesystem.resolve(Paths.get("foo/b.txt")),Files.readSymbolicLink(symlinkToBDotTxt));
  Path symlinkToCDotTxt=new File(tmp.getRoot(),"output/foo/bar/c.txt").toPath();
  assertTrue(Files.isSymbolicLink(symlinkToCDotTxt));
  assertEquals(projectFilesystem.resolve(Paths.get("foo/bar/c.txt")),Files.readSymbolicLink(symlinkToCDotTxt));
}
