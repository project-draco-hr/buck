{
  MacroReplacer macroReplacer=new MacroReplacer(){
    @Override public String replace(    ImmutableList<String> inputs) throws MacroException {
      if (inputs.size() != 1) {
        throw new HumanReadableException("references must have a single argument of the form `<section>.<field>`," + " but was '%s'",inputs);
      }
      List<String> parts=Splitter.on('.').limit(2).splitToList(inputs.get(0));
      if (parts.size() != 2) {
        throw new HumanReadableException("references must have the form `<section>.<field>`, but was '%s'",parts);
      }
      return get(parts.get(0),parts.get(1),expandStack).or("");
    }
  }
;
  try {
    return MACRO_FINDER.replace(ImmutableMap.of("config",macroReplacer,"exe",getMacroPreserver("exe"),"location",getMacroPreserver("location")),input);
  }
 catch (  MacroException e) {
    throw new HumanReadableException(e,e.getMessage());
  }
}
