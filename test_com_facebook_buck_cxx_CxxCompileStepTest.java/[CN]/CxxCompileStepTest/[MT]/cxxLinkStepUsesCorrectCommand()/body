{
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  ExecutionContext context=TestExecutionContext.newBuilder().setProjectFilesystem(projectFilesystem).build();
  Path compiler=Paths.get("compiler");
  ImmutableList<String> flags=ImmutableList.of("-fsanitize=address");
  Path output=Paths.get("test.o");
  Path input=Paths.get("test.cpp");
  ImmutableList<Path> includes=ImmutableList.of(Paths.get("foo/bar"),Paths.get("test"));
  ImmutableList<Path> systemIncludes=ImmutableList.of(Paths.get("/usr/include"),Paths.get("/include"));
  CxxCompileStep cxxCompileStep=new CxxCompileStep(compiler,flags,output,input,includes,systemIncludes);
  ImmutableList<String> expected=ImmutableList.<String>builder().add(compiler.toString()).add("-c").add("-g").addAll(flags).add("-o",output.toString()).addAll(MoreIterables.zipAndConcat(Iterables.cycle("-I"),Iterables.transform(includes,Functions.toStringFunction()))).addAll(MoreIterables.zipAndConcat(Iterables.cycle("-isystem"),Iterables.transform(systemIncludes,Functions.toStringFunction()))).add(input.toString()).build();
  ImmutableList<String> actual=cxxCompileStep.getShellCommand(context);
  assertEquals(expected,actual);
}
