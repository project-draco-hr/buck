{
  outputStream.writeInt(arrays.keySet().size());
  if (arrays.keySet().isEmpty()) {
    return;
  }
  int previousResourceId=arrays.firstKey();
  outputStream.writeInt(previousResourceId);
  try (ByteArrayOutputStream dataStream=new ByteArrayOutputStream()){
    for (    Map.Entry<Integer,EnumMap<Gender,ImmutableList<String>>> entry : arrays.entrySet()) {
      writeShort(outputStream,entry.getKey() - previousResourceId);
      EnumMap<Gender,ImmutableList<String>> genderMap=entry.getValue();
      outputStream.writeByte(genderMap.size());
      for (      Map.Entry<Gender,ImmutableList<String>> gender : genderMap.entrySet()) {
        outputStream.writeByte(gender.getKey().ordinal());
        ImmutableList<String> arrayElements=gender.getValue();
        outputStream.writeByte(arrayElements.size());
        for (        String arrayValue : arrayElements) {
          byte[] byteValue=getUnescapedStringBytes(arrayValue);
          writeShort(outputStream,byteValue.length);
          dataStream.write(byteValue);
        }
      }
      previousResourceId=entry.getKey();
    }
    outputStream.write(dataStream.toByteArray());
  }
 }
