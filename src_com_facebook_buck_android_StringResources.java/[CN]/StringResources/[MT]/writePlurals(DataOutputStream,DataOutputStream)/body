{
  if (plurals.isEmpty()) {
    return;
  }
  int smallestResourceId=plurals.firstKey();
  mapStream.writeInt(smallestResourceId);
  for (  Map.Entry<Integer,ImmutableMap<String,String>> entry : plurals.entrySet()) {
    ImmutableMap<String,String> categoryMap=entry.getValue();
    dataStream.writeByte(categoryMap.size());
    int resourceDataLength=1;
    for (    Map.Entry<String,String> cat : categoryMap.entrySet()) {
      dataStream.writeByte(PLURAL_CATEGORY_MAP.get(cat.getKey()).byteValue());
      byte[] pluralValue=cat.getValue().getBytes(charset);
      dataStream.writeShort(pluralValue.length);
      dataStream.write(pluralValue);
      resourceDataLength+=3 + pluralValue.length;
    }
    writeMapEntry(mapStream,entry.getKey() - smallestResourceId,resourceDataLength);
  }
}
