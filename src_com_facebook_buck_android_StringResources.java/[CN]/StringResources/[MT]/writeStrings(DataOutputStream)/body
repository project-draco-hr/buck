{
  outputStream.writeInt(strings.size());
  if (strings.isEmpty()) {
    return;
  }
  int previousResourceId=strings.firstKey();
  outputStream.writeInt(previousResourceId);
  try (ByteArrayOutputStream dataStream=new ByteArrayOutputStream()){
    for (    Map.Entry<Integer,String> entry : strings.entrySet()) {
      byte[] resourceBytes=entry.getValue().getBytes(charset);
      writeShort(outputStream,entry.getKey() - previousResourceId);
      writeShort(outputStream,resourceBytes.length);
      dataStream.write(resourceBytes,0,resourceBytes.length);
      previousResourceId=entry.getKey();
    }
    outputStream.write(dataStream.toByteArray());
  }
 }
