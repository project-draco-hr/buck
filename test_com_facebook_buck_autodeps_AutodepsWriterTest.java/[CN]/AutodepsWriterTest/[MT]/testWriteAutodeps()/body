{
  workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"writer",tmpFolder);
  workspace.setUp();
  DepsForBuildFiles depsForBuildFiles=new DepsForBuildFiles();
  BuildTarget fooTarget=workspace.newBuildTarget("//java/com/example:foo");
  BuildTarget barTarget=workspace.newBuildTarget("//java/com/example:bar");
  BuildTarget bazTarget=workspace.newBuildTarget("//java/com/example/baz:baz");
  BuildTarget aTarget=workspace.newBuildTarget("//java/com/example:a");
  BuildTarget bTarget=workspace.newBuildTarget("//java/com/example:b");
  BuildTarget cTarget=workspace.newBuildTarget("//java/com/example:c");
  BuildTarget dTarget=workspace.newBuildTarget("//java/com/example:d");
  BuildTarget eTarget=workspace.newBuildTarget("//java/com/example:e");
  BuildTarget fTarget=workspace.newBuildTarget("//java/com/example:f");
  BuildTarget gTarget=workspace.newBuildTarget("//java/com/example:g");
  BuildTarget hTarget=workspace.newBuildTarget("//java/com/example:h");
  BuildTarget iTarget=workspace.newBuildTarget("//java/com/example:i");
  depsForBuildFiles.addDep(fooTarget,barTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(fooTarget,bazTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(barTarget,bazTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,gTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,hTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,aTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,eTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,bTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,iTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,dTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,fTarget,DependencyType.DEPS);
  depsForBuildFiles.addDep(bazTarget,cTarget,DependencyType.DEPS);
  int numWritten=AutodepsWriter.write(depsForBuildFiles,"BUCK",ObjectMappers.newDefaultInstance(),MoreExecutors.listeningDecorator(Executors.newSingleThreadExecutor()),1);
  workspace.verify();
  assertEquals(2,numWritten);
}
