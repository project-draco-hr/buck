{
  if (this == other) {
    return true;
  }
  ImmutableMap<String,ImmutableMap<String,String>> left=this.sectionToEntries;
  ImmutableMap<String,ImmutableMap<String,String>> right=other.sectionToEntries;
  Sets.SetView<String> sections=Sets.union(left.keySet(),right.keySet());
  for (  String section : sections) {
    ImmutableMap<String,String> leftFields=left.get(section);
    ImmutableMap<String,String> rightFields=right.get(section);
    if (leftFields == null || rightFields == null) {
      return false;
    }
    Sets.SetView<String> fields=Sets.difference(Sets.union(leftFields.keySet(),rightFields.keySet()),Optional.fromNullable(ignoredFields.get(section)).or(ImmutableSet.<String>of()));
    for (    String field : fields) {
      String leftValue=leftFields.get(field);
      String rightValue=rightFields.get(field);
      if (leftValue == null || rightValue == null || !leftValue.equals(rightValue)) {
        return false;
      }
    }
  }
  return true;
}
