{
  UUIDCommand command=UUIDCommandUtils.createFromBuffer(ByteBuffer.wrap(UUIDCommandTestData.getBigEndian()).order(ByteOrder.BIG_ENDIAN));
  UUID newValue=UUID.randomUUID();
  UUIDCommand updated=command.withUuid(newValue);
  ByteBuffer buffer=ByteBuffer.allocate(command.getLoadCommandCommonFields().getCmdsize().intValue()).order(ByteOrder.BIG_ENDIAN);
  UUIDCommandUtils.updateUuidCommand(buffer,command,updated);
  buffer.position(0);
  UUIDCommand fromBuffer=UUIDCommandUtils.createFromBuffer(buffer);
  ByteBuffer newBuffer=ByteBuffer.allocate(fromBuffer.getLoadCommandCommonFields().getCmdsize().intValue()).order(ByteOrder.BIG_ENDIAN);
  UUIDCommandUtils.writeCommandToBuffer(fromBuffer,newBuffer);
  assertThat(fromBuffer.getUuid(),equalToObject(newValue));
  assertThat(buffer.array(),equalTo(newBuffer.array()));
}
