{
  BuildRuleBuilderParams buildRuleBuilderParams=new BuildRuleBuilderParams();
  AndroidResourceRule c=buildRuleBuilderParams.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:c")).setRes("res_c").setRDotJavaPackage("com.facebook"));
  AndroidResourceRule b=buildRuleBuilderParams.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:b")).setRes("res_b").setRDotJavaPackage("com.facebook").addDep(BuildTargetFactory.newInstance("//:c")));
  AndroidResourceRule d=buildRuleBuilderParams.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:d")).setRes("res_d").setRDotJavaPackage("com.facebook").addDep(BuildTargetFactory.newInstance("//:c")));
  AndroidResourceRule a=buildRuleBuilderParams.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:a")).setRes("res_a").setRDotJavaPackage("com.facebook").addDep(BuildTargetFactory.newInstance("//:b")).addDep(BuildTargetFactory.newInstance("//:c")).addDep(BuildTargetFactory.newInstance("//:d")));
  DependencyGraph graph=RuleMap.createGraphFromBuildRules(buildRuleBuilderParams);
  ImmutableList<HasAndroidResourceDeps> deps=UberRDotJavaUtil.getAndroidResourceDeps(a,graph);
  ImmutableList<AndroidResourceRule> validResult1=ImmutableList.of(a,b,d,c);
  ImmutableList<AndroidResourceRule> validResult2=ImmutableList.of(a,d,b,c);
  assertTrue(String.format("Topological sort %s should be either %s or %s",deps,validResult1,validResult2),deps.equals(validResult1) || deps.equals(validResult2));
  AndroidBinaryRule e=buildRuleBuilderParams.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:e")).setManifest("AndroidManfiest.xml").setTarget("Google Inc.:Google APIs:16").setKeystorePropertiesPath("debug.keystore").addDep(BuildTargetFactory.newInstance("//:a")).addDep(BuildTargetFactory.newInstance("//:c")));
  DependencyGraph graph2=RuleMap.createGraphFromBuildRules(buildRuleBuilderParams);
  ImmutableList<HasAndroidResourceDeps> deps2=UberRDotJavaUtil.getAndroidResourceDeps(e,graph2);
  assertTrue(String.format("Topological sort %s should be either %s or %s",deps,validResult1,validResult2),deps2.equals(validResult1) || deps2.equals(validResult2));
}
