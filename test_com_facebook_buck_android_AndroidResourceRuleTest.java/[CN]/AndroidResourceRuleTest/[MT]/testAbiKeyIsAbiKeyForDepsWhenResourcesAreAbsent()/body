{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  AndroidResourceRule resourceRule1=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res1")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res1")));
  resourceRule1.getBuildOutputInitializer().setBuildOutput(new AndroidResourceRule.BuildOutput(new Sha1HashCode(Strings.repeat("a",40))));
  AndroidResourceRule resourceRule2=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res2")).setRDotJavaPackage("com.facebook").setRes(Paths.get("android_res/com/example/res2")));
  resourceRule2.getBuildOutputInitializer().setBuildOutput(new AndroidResourceRule.BuildOutput(new Sha1HashCode(Strings.repeat("b",40))));
  AndroidResourceRule resourceRule3=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//android_res/com/example:res3")).addDep(resourceRule1.getBuildTarget()).addDep(resourceRule2.getBuildTarget()));
  FakeBuildableContext buildableContext=new FakeBuildableContext();
  assertTrue(resourceRule3.getBuildSteps(EasyMock.createMock(BuildContext.class),buildableContext).isEmpty());
  Sha1HashCode expectedSha1=HasAndroidResourceDeps.ABI_HASHER.apply(ImmutableList.<HasAndroidResourceDeps>of(resourceRule1,resourceRule2));
  buildableContext.assertContainsMetadataMapping(AndroidResourceRule.METADATA_KEY_FOR_ABI,expectedSha1.getHash());
}
