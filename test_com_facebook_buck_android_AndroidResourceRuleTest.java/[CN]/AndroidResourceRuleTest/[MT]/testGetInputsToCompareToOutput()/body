{
  DirectoryTraverser traverser=new DirectoryTraverser(){
    @Override public void traverse(    DirectoryTraversal traversal){
      String rootPath=traversal.getRoot().getPath();
      if ("java/src/com/facebook/base/res".equals(rootPath)) {
        traversal.visit(null,"drawable/E.xml");
        traversal.visit(null,"drawable/A.xml");
        traversal.visit(null,"drawable/C.xml");
      }
 else       if ("java/src/com/facebook/base/assets".equals(rootPath)) {
        traversal.visit(null,"drawable/F.xml");
        traversal.visit(null,"drawable/B.xml");
        traversal.visit(null,"drawable/D.xml");
      }
 else {
        throw new RuntimeException("Unexpected path: " + rootPath);
      }
    }
  }
;
  BuildTarget buildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/base","res");
  BuildRuleParams buildRuleParams=new BuildRuleParams(buildTarget,ImmutableSortedSet.<BuildRule>of(),ImmutableSet.of(BuildTargetPattern.MATCH_ALL),Functions.<String>identity());
  AndroidResourceRule androidResourceRule=new AndroidResourceRule(buildRuleParams,"java/src/com/facebook/base/res","com.facebook","java/src/com/facebook/base/assets","java/src/com/facebook/base/AndroidManifest.xml",traverser);
  MoreAsserts.assertIterablesEquals("getInputsToCompareToOutput() should return an alphabetically sorted list of all input " + "files that contribute to this android_resource() rule.",ImmutableList.of("java/src/com/facebook/base/AndroidManifest.xml","java/src/com/facebook/base/assets/drawable/B.xml","java/src/com/facebook/base/assets/drawable/D.xml","java/src/com/facebook/base/assets/drawable/F.xml","java/src/com/facebook/base/res/drawable/A.xml","java/src/com/facebook/base/res/drawable/C.xml","java/src/com/facebook/base/res/drawable/E.xml"),androidResourceRule.getInputsToCompareToOutput());
}
