{
  if (val instanceof Optional) {
    Object o=((Optional<?>)val).orNull();
    return setReflectively(key,o);
  }
  setKey(key);
  if (val instanceof Collection) {
    val=((Collection<?>)val).iterator();
  }
  if (val instanceof Iterable && !(val instanceof Path)) {
    val=((Iterable<?>)val).iterator();
  }
  if (val instanceof Iterator) {
    Iterator<?> iterator=(Iterator<?>)val;
    while (iterator.hasNext()) {
      setSingleValue(iterator.next());
    }
    return separate();
  }
  if (val instanceof RuleKeyAppendable) {
    return ((RuleKeyAppendable)val).appendToRuleKey(this,key);
  }
  return setSingleValue(val);
}
