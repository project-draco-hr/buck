{
  if (!hasTargetSpecified()) {
    params.getBuckEventBus().post(ConsoleEvent.severe("No target given to run"));
    params.getBuckEventBus().post(ConsoleEvent.severe("buck run <target> <arg1> <arg2>..."));
    return 1;
  }
  BuildCommand buildCommand=new BuildCommand(ImmutableList.of(getTarget(params.getBuckConfig())));
  int exitCode=buildCommand.runWithoutHelp(params);
  if (exitCode != 0) {
    return exitCode;
  }
  String targetName=getTarget(params.getBuckConfig());
  BuildTarget target=Iterables.getOnlyElement(getBuildTargets(params.getCell().getCellRoots(),ImmutableSet.of(targetName)));
  Build build=buildCommand.getBuild();
  BuildRule targetRule=build.getActionGraph().findBuildRuleByTarget(target);
  BinaryBuildRule binaryBuildRule=null;
  if (targetRule instanceof BinaryBuildRule) {
    binaryBuildRule=(BinaryBuildRule)targetRule;
  }
  if (binaryBuildRule == null) {
    params.getBuckEventBus().post(ConsoleEvent.severe("target " + targetName + " is not a binary rule (only binary rules can be `run`)"));
    return 1;
  }
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(ImmutableSet.copyOf(build.getActionGraph().getNodes())));
  Tool executable=binaryBuildRule.getExecutableCommand();
  ImmutableList<String> fullCommand=new ImmutableList.Builder<String>().addAll(executable.getCommandPrefix(resolver)).addAll(getTargetArguments()).build();
  ShellStep step=new DefaultShellStep(params.getCell().getFilesystem().getRootPath(),fullCommand,executable.getEnvironment(resolver)){
    @Override protected boolean shouldFlushStdOutErrAsProgressIsMade(    Verbosity verbosity){
      return true;
    }
  }
;
  return step.execute(build.getExecutionContext());
}
