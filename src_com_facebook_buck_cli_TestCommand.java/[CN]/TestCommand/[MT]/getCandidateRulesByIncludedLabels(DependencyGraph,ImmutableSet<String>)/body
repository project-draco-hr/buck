{
  AbstractBottomUpTraversal<BuildRule,List<TestRule>> traversal=new AbstractBottomUpTraversal<BuildRule,List<TestRule>>(graph){
    private final List<TestRule> results=Lists.newArrayList();
    @Override public void visit(    BuildRule buildRule){
      if (buildRule instanceof TestRule) {
        TestRule testRule=(TestRule)buildRule;
        if (includedLabels.isEmpty() || !Sets.intersection(testRule.getLabels(),includedLabels).isEmpty()) {
          results.add(testRule);
        }
      }
    }
    @Override public List<TestRule> getResult(){
      return results;
    }
  }
;
  traversal.traverse();
  return traversal.getResult();
}
