{
  if (options.isRunAllTests()) {
    try {
      return runAllTests(options);
    }
 catch (    BuildTargetException|BuildFileParseException e) {
      console.printBuildFailureWithoutStacktrace(e);
      return 1;
    }
  }
  try (BuildCommand buildCommand=new BuildCommand(getCommandRunnerParams())){
    int exitCode=buildCommand.runCommandWithOptions(options);
    if (exitCode != 0) {
      return exitCode;
    }
    Build build=buildCommand.getBuild();
    Iterable<TestRule> results=getCandidateRules(build.getDependencyGraph());
    results=filterTestRules(options,results);
    if (options.isPrintMatchingTestRules()) {
      printMatchingTestRules(console,results);
      return 0;
    }
    BuildContext buildContext=build.getBuildContext();
    ExecutionContext buildExecutionContext=build.getExecutionContext();
    ExecutionContext testExecutionContext=ExecutionContext.builder().setExecutionContext(buildExecutionContext).setTargetDevice(options.getTargetDeviceOptional()).build();
    return runTestsAndShutdownExecutor(results,buildContext,testExecutionContext,options);
  }
 }
