{
  if (options.isRunAllTests()) {
    try {
      return runAllTests(options);
    }
 catch (    BuildTargetException|BuildFileParseException e) {
      console.printBuildFailureWithoutStacktrace(e);
      return 1;
    }
  }
  BuildCommand buildCommand=new BuildCommand(getCommandRunnerParams());
  int exitCode=buildCommand.runCommandWithOptions(options);
  if (exitCode != 0) {
    return exitCode;
  }
  Build build=buildCommand.getBuild();
  Iterable<TestRule> results=getCandidateRulesByIncludedLabels(build.getDependencyGraph(),options.getIncludedLabels());
  results=filterTestRules(options,results);
  BuildContext buildContext=build.getBuildContext();
  ExecutionContext buildExecutionContext=build.getExecutionContext();
  ExecutionContext testExecutionContext=ExecutionContext.builder().setExecutionContext(buildExecutionContext).setTargetDevice(options.getTargetDeviceOptional()).build();
  return runTestsAndShutdownExecutor(results,buildContext,testExecutionContext,options);
}
