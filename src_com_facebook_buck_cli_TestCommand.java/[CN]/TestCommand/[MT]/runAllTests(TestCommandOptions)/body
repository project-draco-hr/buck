{
  ImmutableSet<BuildTarget> emptyTargetsList=ImmutableSet.of();
  if (getParser().getParseStartTime().isPresent()) {
    getBuckEventBus().post(BuildEvent.started(emptyTargetsList),getParser().getParseStartTime().get());
  }
 else {
    getBuckEventBus().post(BuildEvent.started(emptyTargetsList));
  }
  ParserConfig parserConfig=new ParserConfig(options.getBuckConfig());
  TargetGraph targetGraph=getParser().buildTargetGraphForTargetNodeSpecs(ImmutableList.of(new TargetNodePredicateSpec(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      return input.getType().isTestRule();
    }
  }
,getProjectFilesystem().getIgnorePaths())),parserConfig,getBuckEventBus(),console,environment,options.getEnableProfiling());
  ActionGraph graph=targetGraphTransformer.apply(targetGraph);
  Iterable<TestRule> testRules=Iterables.filter(graph.getNodes(),TestRule.class);
  testRules=filterTestRules(options,testRules);
  if (options.isDryRun()) {
    printMatchingTestRules(console,testRules);
  }
  ArtifactCache artifactCache=getArtifactCache();
  try (Build build=options.createBuild(options.getBuckConfig(),graph,getProjectFilesystem(),getAndroidDirectoryResolver(),getBuildEngine(),artifactCache,console,getBuckEventBus(),options.getTargetDeviceOptional(),getCommandRunnerParams().getPlatform(),getCommandRunnerParams().getEnvironment(),getCommandRunnerParams().getObjectMapper(),getCommandRunnerParams().getClock())){
    int exitCode=build.executeAndPrintFailuresToConsole(testRules,options.isKeepGoing(),console,options.getPathToBuildReport());
    getBuckEventBus().post(BuildEvent.finished(emptyTargetsList,exitCode));
    if (exitCode != 0) {
      return exitCode;
    }
    return runTestsAndShutdownExecutor(testRules,Preconditions.checkNotNull(build.getBuildContext()),build.getExecutionContext(),options);
  }
 }
