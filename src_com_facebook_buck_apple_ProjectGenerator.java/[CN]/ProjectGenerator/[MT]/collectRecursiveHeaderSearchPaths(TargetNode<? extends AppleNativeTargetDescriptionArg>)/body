{
  LOG.debug("Collecting recursive header search paths for %s...",targetNode);
  return FluentIterable.from(AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,Optional.of(AppleBuildRules.XCODE_TARGET_BUILD_RULE_TYPES))).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      Optional<TargetNode<AppleNativeTargetDescriptionArg>> nativeNode=getAppleNativeNode(targetGraph,input);
      return nativeNode.isPresent() && !nativeNode.get().getConstructorArg().getUseBuckHeaderMaps();
    }
  }
).transform(new Function<TargetNode<?>,String>(){
    @Override public String apply(    TargetNode<?> input){
      String result=getHeaderSearchPath(input);
      LOG.debug("Header search path for %s: %s",input,result);
      return result;
    }
  }
).toSet();
}
