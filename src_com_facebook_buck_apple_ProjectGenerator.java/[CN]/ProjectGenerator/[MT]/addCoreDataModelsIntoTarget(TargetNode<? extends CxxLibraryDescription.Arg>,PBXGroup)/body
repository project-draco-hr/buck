{
  addCoreDataModelBuildPhase(targetGroup,FluentIterable.from(targetNode.getDeps()).transform(new Function<BuildTarget,TargetNode<?>>(){
    @Override public TargetNode<?> apply(    BuildTarget input){
      return Preconditions.checkNotNull(targetGraph.get(input));
    }
  }
).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      return CoreDataModelDescription.TYPE.equals(input.getType());
    }
  }
).transform(new Function<TargetNode<?>,CoreDataModelDescription.Arg>(){
    @Override public CoreDataModelDescription.Arg apply(    TargetNode<?> input){
      return (CoreDataModelDescription.Arg)input.getConstructorArg();
    }
  }
).toSet());
}
