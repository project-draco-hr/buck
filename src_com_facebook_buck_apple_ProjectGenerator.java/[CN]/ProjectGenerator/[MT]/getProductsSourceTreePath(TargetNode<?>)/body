{
  String productName=getProductNameForTargetNode(targetNode).or(getProductNameForBuildTarget(targetNode.getBuildTarget()));
  String productOutputName;
  if (targetNode.getType().equals(AppleLibraryDescription.TYPE) || targetNode.getType().equals(CxxLibraryDescription.TYPE)) {
    String productOutputFormat=AppleBuildRules.getOutputFileNameFormatForLibrary(targetNode.getBuildTarget().getFlavors().contains(CxxDescriptionEnhancer.SHARED_FLAVOR));
    productOutputName=String.format(productOutputFormat,productName);
  }
 else   if (targetNode.getType().equals(AppleBundleDescription.TYPE) || targetNode.getType().equals(AppleTestDescription.TYPE)) {
    HasAppleBundleFields arg=(HasAppleBundleFields)targetNode.getConstructorArg();
    productOutputName=productName + "." + getExtensionString(arg.getExtension());
  }
 else   if (targetNode.getType().equals(AppleBinaryDescription.TYPE)) {
    productOutputName=productName;
  }
 else {
    throw new RuntimeException("Unexpected type: " + targetNode.getType());
  }
  return new SourceTreePath(PBXReference.SourceTree.BUILT_PRODUCTS_DIR,Paths.get(productOutputName),Optional.<String>absent());
}
