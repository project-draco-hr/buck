{
  return FluentIterable.from(copiedRules).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      Optional<TargetNode<AppleBundleDescription.Arg>> appleBundleNode=input.castArg(AppleBundleDescription.Arg.class);
      if (appleBundleNode.isPresent()) {
        return !isFrameworkBundle(appleBundleNode.get().getConstructorArg());
      }
      return true;
    }
  }
).toList();
}
