{
  ImmutableSet.Builder<Path> builder=ImmutableSet.builder();
  if (targetNode.getConstructorArg().getUseBuckHeaderMaps()) {
    builder.add(getHeaderSymlinkTreeRelativePath(targetNode,HeaderVisibility.PRIVATE));
    builder.add(getHeaderSymlinkTreeRelativePath(targetNode,HeaderVisibility.PUBLIC));
  }
  for (  TargetNode<?> input : AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,Optional.of(AppleBuildRules.XCODE_TARGET_BUILD_RULE_TYPES))) {
    Optional<TargetNode<AppleNativeTargetDescriptionArg>> nativeNode=getAppleNativeNode(targetGraph,input);
    if (nativeNode.isPresent() && nativeNode.get().getConstructorArg().getUseBuckHeaderMaps()) {
      builder.add(getHeaderSymlinkTreeRelativePath(nativeNode.get(),HeaderVisibility.PUBLIC));
    }
  }
  addHeaderSymlinkTreesForSourceUnderTest(targetNode,builder,HeaderVisibility.PRIVATE);
  return builder.build();
}
