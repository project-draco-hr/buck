{
  return FluentIterable.from(targetNodes).transformAndConcat(newRecursiveRuleDependencyTransformer(AppleBuildRules.RecursiveDependenciesMode.LINKING,ImmutableSet.of(AppleLibraryDescription.TYPE))).append(targetNodes).transformAndConcat(new Function<TargetNode<?>,Iterable<? extends String>>(){
    @Override public Iterable<String> apply(    TargetNode<?> input){
      return input.castArg(AppleNativeTargetDescriptionArg.class).transform(GET_LINKER_FLAGS).or(ImmutableSet.<String>of());
    }
  }
);
}
