{
  if (key == null)   throw new IllegalArgumentException("null input: key");
  if ((++m_readAccessCount % m_readClearCheckFrequency) == 0)   removeClearedValues();
  final int keyHashCode=key.hashCode();
  final SoftEntry[] buckets=m_buckets;
  final int bucketIndex=(keyHashCode & 0x7FFFFFFF) % buckets.length;
  Object result=null;
  for (SoftEntry entry=buckets[bucketIndex]; entry != null; entry=entry.m_next) {
    final Object entryKey=entry.m_key;
    if (IDENTITY_OPTIMIZATION) {
      if ((key == entryKey) || ((keyHashCode == entryKey.hashCode()) && key.equals(entryKey))) {
        final Reference ref=entry.m_softValue;
        result=ref.get();
        if (ENQUEUE_FOUND_CLEARED_ENTRIES && (result == null)) {
          ref.enqueue();
        }
        return result;
      }
    }
 else {
      if ((keyHashCode == entryKey.hashCode()) && key.equals(entryKey)) {
        final Reference ref=entry.m_softValue;
        result=ref.get();
        if (ENQUEUE_FOUND_CLEARED_ENTRIES && (result == null)) {
          ref.enqueue();
        }
        return result;
      }
    }
  }
  return null;
}
