{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"prebuilt",temp);
  workspace.setUp();
  BuildTarget target=BuildTargetFactory.newInstance("//:jar");
  ProjectWorkspace.ProcessResult result=workspace.runBuckBuild(target.getFullyQualifiedName());
  result.assertSuccess();
  BuckBuildLog buildLog=workspace.getBuildLog();
  buildLog.assertTargetBuiltLocally(target.getFullyQualifiedName());
  result=workspace.runBuckBuild("//:jar");
  result.assertSuccess();
  buildLog=workspace.getBuildLog();
  buildLog.assertTargetHadMatchingRuleKey(target.getFullyQualifiedName());
  Path binaryJar=workspace.getPath("junit.jar");
  HashCode originalHash=MorePaths.asByteSource(binaryJar).hash(Hashing.sha1());
  Path expectedOut=BuildTargets.getGenPath(new ProjectFilesystem(workspace.getDestPath()),target,"%s-abi.jar");
  Path abiJar=workspace.getPath(expectedOut.toString());
  HashCode abiHash=MorePaths.asByteSource(abiJar).hash(Hashing.sha1());
  assertTrue(Files.exists(abiJar));
  assertNotEquals(originalHash,abiHash);
}
