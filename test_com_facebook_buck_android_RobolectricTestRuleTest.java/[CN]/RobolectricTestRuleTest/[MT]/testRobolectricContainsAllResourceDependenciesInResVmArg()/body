{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  ProjectFilesystem filesystem=new ProjectFilesystem(temporaryFolder.getRootPath());
  ImmutableList.Builder<HasAndroidResourceDeps> resDepsBuilder=ImmutableList.builder();
  for (int i=0; i < 10; i++) {
    String path="java/src/com/facebook/base/" + i + "/res";
    filesystem.mkdirs(Paths.get(path).resolve("values"));
    resDepsBuilder.add(new ResourceRule(new FakeSourcePath(filesystem,path)));
  }
  ImmutableList<HasAndroidResourceDeps> resDeps=resDepsBuilder.build();
  BuildTarget robolectricBuildTarget=BuildTargetFactory.newInstance("//java/src/com/facebook/base/robolectricTest:robolectricTest");
  RobolectricTest robolectricTest=(RobolectricTest)RobolectricTestBuilder.createBuilder(robolectricBuildTarget).build(resolver,filesystem);
  String result=robolectricTest.getRobolectricResourceDirectories(resDeps);
  for (  HasAndroidResourceDeps dep : resDeps) {
    assertTrue(result + " does not contain " + dep.getRes(),result.contains(((PathSourcePath)dep.getRes()).getRelativePath().toString()));
  }
}
