{
  LocalsArray mine=getSecondaryForLabel(predLabel);
  LocalsArray newSecondary;
  OneLocalsArray newPrimary;
  newPrimary=primary.merge(other.getPrimary());
  if (mine == other) {
    newSecondary=mine;
  }
 else   if (mine == null) {
    newSecondary=other;
  }
 else {
    newSecondary=mine.merge(other);
  }
  if ((newSecondary == mine) && (newPrimary == primary)) {
    return this;
  }
 else {
    newPrimary=null;
    int szSecondaries=secondaries.size();
    int sz=Math.max(predLabel + 1,szSecondaries);
    ArrayList<LocalsArray> newSecondaries=new ArrayList(sz);
    for (int i=0; i < sz; i++) {
      LocalsArray la=null;
      if (i == predLabel) {
        la=newSecondary;
      }
 else       if (i < szSecondaries) {
        la=secondaries.get(i);
      }
      if (la != null) {
        if (newPrimary == null) {
          newPrimary=la.getPrimary();
        }
 else {
          newPrimary=newPrimary.merge(la.getPrimary());
        }
      }
      newSecondaries.add(la);
    }
    LocalsArraySet result=new LocalsArraySet(newPrimary,newSecondaries);
    result.setImmutable();
    return result;
  }
}
