@classmethod
def wrap_iterable(cls, url_or_urls):
    'Given a string or :class:`Link` or iterable, return an iterable of :class:`Link` objects.\n\n    :param url_or_urls: A string or :class:`Link` object, or iterable of string or :class:`Link`\n      objects.\n    :returns: A list of :class:`Link` objects.\n    '
    try:
        return [cls.wrap(url_or_urls)]
    except ValueError:
        pass
    if isinstance(url_or_urls, Iterable):
        return [cls.wrap(url) for url in url_or_urls]
    raise ValueError('url_or_urls must be string/Link or iterable of strings/Links')
