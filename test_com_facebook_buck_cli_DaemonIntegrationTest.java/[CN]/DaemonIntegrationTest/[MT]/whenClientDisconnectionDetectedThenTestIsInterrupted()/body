{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  final long timeoutMillis=2000;
  final long disconnectMillis=100;
  final ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"exclusive_execution",tmp);
  workspace.setUp();
  final DelegatingInputStream inputStream=new DelegatingInputStream(TestContext.createHeartBeatStream(timeoutMillis / 10));
  try (TestContext context=new TestContext(ImmutableMap.copyOf(System.getenv()),inputStream,timeoutMillis)){
    ProcessResult result=workspace.runBuckdCommand(context,new CapturingPrintStream(){
      @Override public void println(      String x){
        if (x.contains("TESTING //:test")) {
          inputStream.setDelegate(TestContext.createDisconnectionStream(disconnectMillis));
        }
        super.println(x);
      }
    }
,"test","//:test");
    result.assertFailure();
    assertThat(result.getStderr(),containsString("InterruptedException"));
  }
 }
