{
  assumeTrue(Platform.detect() != Platform.WINDOWS);
  final long timeoutMillis=2000;
  final long disconnectMillis=100;
  final ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"exclusive_execution",tmp);
  workspace.setUp();
  final DelegatingInputStream inputStream=new DelegatingInputStream(TestContext.createHeartBeatStream(timeoutMillis / 10));
  try (TestContext context=new TestContext(ImmutableMap.copyOf(System.getenv()),inputStream,timeoutMillis)){
    BuckEventListener listener=new BuckEventListener(){
      @Subscribe @SuppressWarnings("unused") public void onEvent(      TestRunEvent.Started event){
        inputStream.setDelegate(TestContext.createDisconnectionStream(disconnectMillis));
      }
      @Override public void outputTrace(      BuildId buildId) throws InterruptedException {
      }
    }
;
    ProcessResult result=workspace.runBuckdCommand(context,listener,"test","//:test");
    result.assertFailure();
    assertThat(result.getStderr(),containsString("InterruptedException"));
  }
 }
