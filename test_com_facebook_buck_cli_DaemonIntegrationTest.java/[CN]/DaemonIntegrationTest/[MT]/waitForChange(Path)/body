{
class Watcher {
    private Path watchedPath;
    private boolean watchedChange=false;
    public Watcher(    Path watchedPath){
      this.watchedPath=watchedPath;
      watchedChange=false;
    }
    public boolean watchedChange(){
      return watchedChange;
    }
    @Subscribe public synchronized void onEvent(    WatchEvent<?> event) throws IOException {
      if (watchedPath.equals(event.context()) || event.kind() == StandardWatchEventKinds.OVERFLOW) {
        watchedChange=true;
      }
    }
  }
  Watcher watcher=new Watcher(path);
  Main.registerFileWatcher(watcher);
  while (!watcher.watchedChange()) {
    Main.watchFilesystem(new BuckEventBus(new FakeClock(0),new BuildId()));
  }
}
