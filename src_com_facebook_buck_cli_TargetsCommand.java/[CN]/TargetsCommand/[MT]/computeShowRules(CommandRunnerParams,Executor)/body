{
  if (getArguments().isEmpty()) {
    throw new HumanReadableException("Must specify at least one build target.");
  }
  Map<String,ShowOptions.Builder> showOptionBuilderMap=new HashMap<>();
  ImmutableSet<BuildTarget> matchingBuildTargets;
  TargetGraph targetGraph;
  Pair<ImmutableSet<BuildTarget>,TargetGraph> res=params.getParser().buildTargetGraphForTargetNodeSpecs(params.getBuckEventBus(),params.getCell(),getEnableProfiling(),executor,parseArgumentsAsTargetNodeSpecs(params.getBuckConfig(),getArguments()));
  matchingBuildTargets=res.getFirst();
  targetGraph=res.getSecond();
  if (isShowTargetHash()) {
    computeShowTargetHash(params,executor,matchingBuildTargets,targetGraph,showOptionBuilderMap);
  }
  Optional<ActionGraph> actionGraph=Optional.absent();
  Optional<BuildRuleResolver> buildRuleResolver=Optional.absent();
  Optional<RuleKeyBuilderFactory> ruleKeyBuilderFactory=Optional.absent();
  if (isShowRuleKey() || isShowOutput()) {
    TargetGraphTransformer targetGraphTransformer=new TargetGraphToActionGraph(params.getBuckEventBus(),new BuildTargetNodeToBuildRuleTransformer());
    Pair<ActionGraph,BuildRuleResolver> result=Preconditions.checkNotNull(targetGraphTransformer.apply(targetGraph));
    actionGraph=Optional.of(result.getFirst());
    buildRuleResolver=Optional.of(result.getSecond());
    if (isShowRuleKey()) {
      ruleKeyBuilderFactory=Optional.<RuleKeyBuilderFactory>of(new DefaultRuleKeyBuilderFactory(params.getFileHashCache(),new SourcePathResolver(result.getSecond())));
    }
  }
  for (  BuildTarget target : ImmutableSortedSet.copyOf(matchingBuildTargets)) {
    ShowOptions.Builder showOptionsBuilder=getShowOptionBuilder(showOptionBuilderMap,target);
    Preconditions.checkNotNull(showOptionsBuilder);
    if (actionGraph.isPresent()) {
      BuildRule rule=buildRuleResolver.get().requireRule(target);
      if (isShowRuleKey()) {
        showOptionsBuilder.setRuleKey(ruleKeyBuilderFactory.get().build(rule).toString());
      }
      if (isShowOutput()) {
        Optional<Path> outputPath=getUserFacingOutputPath(rule);
        if (outputPath.isPresent()) {
          showOptionsBuilder.setOutputPath(outputPath.get().toString());
        }
      }
    }
  }
  ImmutableMap.Builder<String,ShowOptions> builder=new ImmutableMap.Builder<>();
  for (  Entry<String,ShowOptions.Builder> entry : showOptionBuilderMap.entrySet()) {
    builder.put(entry.getKey(),entry.getValue().build());
  }
  return builder.build();
}
