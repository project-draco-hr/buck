{
  ImmutableSet<BuildTarget> matchingBuildTargets;
  try {
    matchingBuildTargets=ImmutableSet.copyOf(getBuildTargets(options.getArgumentsFormattedAsBuildTargets()));
  }
 catch (  NoSuchBuildTargetException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  if (matchingBuildTargets.isEmpty()) {
    console.printBuildFailure("Must specify at least one build target.");
    return 1;
  }
  ActionGraph graph;
  try {
    TargetGraph targetGraph=getParser().buildTargetGraphForBuildTargets(matchingBuildTargets,options.getDefaultIncludes(),getBuckEventBus(),console,environment,options.getEnableProfiling());
    graph=targetGraphTransformer.apply(targetGraph);
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    console.printBuildFailureWithoutStacktrace(e);
    return 1;
  }
  for (  BuildTarget target : ImmutableSortedSet.copyOf(matchingBuildTargets)) {
    BuildRule rule=Preconditions.checkNotNull(graph.findBuildRuleByTarget(target));
    ImmutableList.Builder<String> builder=ImmutableList.builder();
    builder.add(target.getFullyQualifiedName());
    if (options.isShowRuleKey()) {
      builder.add(rule.getRuleKey().toString());
    }
    if (options.isShowOutput()) {
      Path outputPath=rule.getPathToOutputFile();
      if (outputPath != null) {
        builder.add(outputPath.toString());
      }
    }
    getStdOut().println(Joiner.on(' ').join(builder.build()));
  }
  return 0;
}
