{
  AbstractBottomUpTraversal<BuildRule,TreeMap<String,BuildTarget>> traversal=new AbstractBottomUpTraversal<BuildRule,TreeMap<String,BuildTarget>>(graph){
    final TreeMap<String,BuildTarget> matchingBuildTargets=Maps.newTreeMap();
    @Override public void visit(    BuildRule rule){
      if (predicate.apply(rule)) {
        matchingBuildTargets.put(rule.getFullyQualifiedName(),rule.getBuildTarget());
      }
    }
    @Override public TreeMap<String,BuildTarget> getResult(){
      return matchingBuildTargets;
    }
  }
;
  traversal.traverse();
  return traversal.getResult();
}
