{
  params.getConsole().getStdOut().println("[");
  ObjectMapper mapper=params.getObjectMapper();
  Iterator<TargetNode<?>> targetNodeIterator=targetNodes.iterator();
  while (targetNodeIterator.hasNext()) {
    TargetNode<?> targetNode=targetNodeIterator.next();
    SortedMap<String,Object> sortedTargetRule;
    sortedTargetRule=params.getParser().getRawTargetNode(params.getBuckEventBus(),params.getCell(),getEnableParserProfiling(),executor,targetNode);
    if (sortedTargetRule == null) {
      params.getConsole().printErrorText("unable to find rule for target " + targetNode.getBuildTarget().getFullyQualifiedName());
      continue;
    }
    ShowOptions showOptions=showRulesResult.get(targetNode.getBuildTarget());
    if (showOptions != null) {
      putIfValuePresent(ShowOptionsName.RULE_KEY.getName(),showOptions.getRuleKey(),sortedTargetRule);
      putIfValuePresent(ShowOptionsName.OUTPUT_PATH.getName(),showOptions.getOutputPath(),sortedTargetRule);
      putIfValuePresent(ShowOptionsName.TARGET_HASH.getName(),showOptions.getTargetHash(),sortedTargetRule);
    }
    sortedTargetRule.put("fully_qualified_name",targetNode.getBuildTarget().getFullyQualifiedName());
    StringWriter stringWriter=new StringWriter();
    try {
      mapper.writerWithDefaultPrettyPrinter().writeValue(stringWriter,sortedTargetRule);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    String output=stringWriter.getBuffer().toString();
    if (targetNodeIterator.hasNext()) {
      output+=",";
    }
    params.getConsole().getStdOut().println(output);
  }
  params.getConsole().getStdOut().println("]");
}
