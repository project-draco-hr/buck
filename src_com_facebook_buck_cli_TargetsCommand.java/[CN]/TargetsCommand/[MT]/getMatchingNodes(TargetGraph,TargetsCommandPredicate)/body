{
  AbstractBottomUpTraversal<TargetNode<?>,SortedMap<String,TargetNode<?>>> traversal=new AbstractBottomUpTraversal<TargetNode<?>,SortedMap<String,TargetNode<?>>>(graph){
    final SortedMap<String,TargetNode<?>> matchingNodes=Maps.newTreeMap();
    @Override public void visit(    TargetNode<?> node){
      if (predicate.apply(node)) {
        matchingNodes.put(node.getBuildTarget().getFullyQualifiedName(),node);
      }
    }
    @Override public SortedMap<String,TargetNode<?>> getResult(){
      return matchingNodes;
    }
  }
;
  traversal.traverse();
  return traversal.getResult();
}
