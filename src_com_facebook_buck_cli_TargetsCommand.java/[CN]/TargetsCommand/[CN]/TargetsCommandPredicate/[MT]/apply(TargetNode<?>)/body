{
  boolean isDependent=true;
  if (referencedInputs != null) {
    isDependent=!Collections.disjoint(graph.getOutgoingNodesFor(node),dependentTargets);
    if (!isDependent && basePathOfTargets.contains(node.getBuildTarget().getBasePath())) {
      for (      Path input : node.getInputs()) {
        if (referencedInputs.contains(input)) {
          isDependent=true;
          break;
        }
      }
      if (referencedInputs.contains(node.getBuildTarget().getBuildFilePath())) {
        isDependent=true;
      }
    }
    if (isDependent) {
      dependentTargets.add(node);
    }
  }
  if (matchingTargets.isPresent() && !matchingTargets.get().contains(node.getBuildTarget())) {
    return false;
  }
  return (isDependent && (buildRuleTypes.isEmpty() || buildRuleTypes.contains(node.getType())));
}
