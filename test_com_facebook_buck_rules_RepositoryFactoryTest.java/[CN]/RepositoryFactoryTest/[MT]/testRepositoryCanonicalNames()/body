{
  String mainBuckConfigString="[repositories]\n" + "sub = " + MorePaths.pathWithUnixSeparators(subProjectFolder.getRoot().toString()) + "\n";
  File mainBuckConfig=mainProjectFolder.newFile(".buckconfig");
  Files.write(mainBuckConfigString.getBytes(),mainBuckConfig);
  String subBuckConfigString="[repositories]\n" + "main = " + MorePaths.pathWithUnixSeparators(mainProjectFolder.getRoot().toString()) + "\n";
  File subBuckConfig=subProjectFolder.newFile(".buckconfig");
  Files.write(subBuckConfigString.getBytes(),subBuckConfig);
  RepositoryFactory factory=new FakeRepositoryFactory(mainProjectFolder.getRoot().toPath().toRealPath());
  Repository mainProjectRepo=factory.getRepositoryByCanonicalName(Optional.<String>absent());
  ImmutableMap<Optional<String>,Optional<String>> mainLocalToCanonicalMap=mainProjectRepo.getLocalToCanonicalRepoNamesMap();
  assertEquals(Optional.absent(),mainLocalToCanonicalMap.get(Optional.absent()));
  assertEquals(Optional.of("sub"),mainLocalToCanonicalMap.get(Optional.of("sub")));
  Repository subProjectRepo=factory.getRepositoryByCanonicalName(Optional.of("sub"));
  ImmutableMap<Optional<String>,Optional<String>> subLocalToCanonicalMap=subProjectRepo.getLocalToCanonicalRepoNamesMap();
  assertEquals(Optional.absent(),subLocalToCanonicalMap.get(Optional.of("main")));
  assertEquals(Optional.of("sub"),subLocalToCanonicalMap.get(Optional.absent()));
}
