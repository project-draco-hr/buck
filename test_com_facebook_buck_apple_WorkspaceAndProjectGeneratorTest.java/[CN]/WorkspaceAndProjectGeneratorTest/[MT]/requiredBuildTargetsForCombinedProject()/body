{
  WorkspaceAndProjectGenerator generator=new WorkspaceAndProjectGenerator(projectFilesystem,targetGraph,workspaceNode.getConstructorArg(),ImmutableSet.<ProjectGenerator.Option>of(),true,"BUCK");
  Map<Path,ProjectGenerator> projectGenerators=new HashMap<>();
  generator.generateWorkspaceAndDependentProjects(projectGenerators);
  assertThat(generator.getRequiredBuildTargets(),hasItems(CxxDescriptionEnhancer.createHeaderMapFileTarget(BuildTarget.builder("//foo","binbinary").build(),DefaultCxxPlatforms.FLAVOR,CxxDescriptionEnhancer.HeaderVisibility.PRIVATE),CxxDescriptionEnhancer.createHeaderMapFileTarget(BuildTarget.builder("//foo","lib").build(),DefaultCxxPlatforms.FLAVOR,CxxDescriptionEnhancer.HeaderVisibility.PRIVATE),CxxDescriptionEnhancer.createHeaderMapFileTarget(BuildTarget.builder("//foo","lib").build(),DefaultCxxPlatforms.FLAVOR,CxxDescriptionEnhancer.HeaderVisibility.PUBLIC),CxxDescriptionEnhancer.createHeaderMapFileTarget(BuildTarget.builder("//bar","lib").build(),DefaultCxxPlatforms.FLAVOR,CxxDescriptionEnhancer.HeaderVisibility.PRIVATE),CxxDescriptionEnhancer.createHeaderMapFileTarget(BuildTarget.builder("//bar","lib").build(),DefaultCxxPlatforms.FLAVOR,CxxDescriptionEnhancer.HeaderVisibility.PUBLIC)));
}
