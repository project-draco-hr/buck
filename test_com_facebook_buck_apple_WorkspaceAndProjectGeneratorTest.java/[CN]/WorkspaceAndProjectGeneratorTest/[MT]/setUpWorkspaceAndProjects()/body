{
  BuildTarget bazTestTarget=BuildTarget.builder(ROOT,"//baz","xctest").build();
  BuildTarget fooBinTestTarget=BuildTarget.builder(ROOT,"//foo","bin-xctest").build();
  BuildTarget fooTestTarget=BuildTarget.builder(ROOT,"//foo","lib-xctest").build();
  BuildTarget barLibTarget=BuildTarget.builder(ROOT,"//bar","lib").build();
  TargetNode<?> barLibNode=AppleLibraryBuilder.createBuilder(barLibTarget).build();
  BuildTarget fooLibTarget=BuildTarget.builder(ROOT,"//foo","lib").build();
  TargetNode<?> fooLibNode=AppleLibraryBuilder.createBuilder(fooLibTarget).setDeps(Optional.of(ImmutableSortedSet.of(barLibTarget))).setTests(Optional.of(ImmutableSortedSet.of(fooTestTarget))).build();
  BuildTarget fooBinBinaryTarget=BuildTarget.builder(ROOT,"//foo","binbinary").build();
  TargetNode<?> fooBinBinaryNode=AppleBinaryBuilder.createBuilder(fooBinBinaryTarget).setDeps(Optional.of(ImmutableSortedSet.of(fooLibTarget))).build();
  BuildTarget fooBinTarget=BuildTarget.builder(ROOT,"//foo","bin").build();
  TargetNode<?> fooBinNode=AppleBundleBuilder.createBuilder(fooBinTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.APP)).setInfoPlist(new TestSourcePath("Info.plist")).setBinary(fooBinBinaryTarget).setTests(Optional.of(ImmutableSortedSet.of(fooBinTestTarget))).build();
  BuildTarget bazLibTarget=BuildTarget.builder(ROOT,"//baz","lib").build();
  TargetNode<?> bazLibNode=AppleLibraryBuilder.createBuilder(bazLibTarget).setDeps(Optional.of(ImmutableSortedSet.of(fooLibTarget))).setTests(Optional.of(ImmutableSortedSet.of(bazTestTarget))).build();
  TargetNode<?> bazTestNode=AppleTestBuilder.createBuilder(bazTestTarget).setDeps(Optional.of(ImmutableSortedSet.of(bazLibTarget))).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setInfoPlist(new TestSourcePath("Info.plist")).build();
  TargetNode<?> fooTestNode=AppleTestBuilder.createBuilder(fooTestTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setInfoPlist(new TestSourcePath("Info.plist")).setDeps(Optional.of(ImmutableSortedSet.of(bazLibTarget))).build();
  TargetNode<?> fooBinTestNode=AppleTestBuilder.createBuilder(fooBinTestTarget).setDeps(Optional.of(ImmutableSortedSet.of(fooBinTarget))).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setInfoPlist(new TestSourcePath("Info.plist")).build();
  BuildTarget quxBinTarget=BuildTarget.builder(ROOT,"//qux","bin").build();
  TargetNode<?> quxBinNode=AppleBinaryBuilder.createBuilder(quxBinTarget).setDeps(Optional.of(ImmutableSortedSet.of(barLibTarget))).build();
  BuildTarget workspaceTarget=BuildTarget.builder(ROOT,"//foo","workspace").build();
  workspaceNode=XcodeWorkspaceConfigBuilder.createBuilder(workspaceTarget).setWorkspaceName(Optional.of("workspace")).setSrcTarget(Optional.of(fooBinTarget)).build();
  targetGraph=TargetGraphFactory.newInstance(barLibNode,fooLibNode,fooBinBinaryNode,fooBinNode,bazLibNode,bazTestNode,fooTestNode,fooBinTestNode,quxBinNode,workspaceNode);
}
