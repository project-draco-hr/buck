{
  TargetNode<AppleTestDescription.Arg> combinableTest1=AppleTestBuilder.createBuilder(BuildTarget.builder("//foo","test1").build()).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setCanGroup(Optional.of(true)).build();
  TargetNode<AppleTestDescription.Arg> combinableTest2=AppleTestBuilder.createBuilder(BuildTarget.builder("//bar","test2").build()).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setCanGroup(Optional.of(true)).build();
  WorkspaceAndProjectGenerator generator=createWorkspaceAndProjectGeneratorForTests(ImmutableSet.of(combinableTest1,combinableTest2));
  GroupedTestResults groupedTestResults=generator.groupTests(ImmutableSet.of(combinableTest1,combinableTest2));
  assertEquals(ImmutableSortedSet.<TargetNode<AppleTestDescription.Arg>>of(),groupedTestResults.getUngroupedTests());
  assertEquals(ImmutableSortedSet.of(combinableTest1,combinableTest2),ImmutableSortedSet.copyOf(groupedTestResults.getGroupedTests().values()));
  ImmutableList<Map.Entry<AppleTestBundleParamsKey,TargetNode<AppleTestDescription.Arg>>> groupedTests=ImmutableList.copyOf(groupedTestResults.getGroupedTests().entries());
  assertEquals(2,groupedTests.size());
  assertEquals(groupedTests.get(0).getKey(),groupedTests.get(1).getKey());
}
