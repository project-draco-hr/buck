{
  TargetNode<AppleNativeTargetDescriptionArg> library=AppleLibraryBuilder.createBuilder(BuildTarget.builder("//foo","lib").build()).setTests(Optional.of(FluentIterable.from(tests).transform(HasBuildTarget.TO_TARGET).toSortedSet(Ordering.natural()))).build();
  TargetNode<XcodeWorkspaceConfigDescription.Arg> workspace=XcodeWorkspaceConfigBuilder.createBuilder(BuildTarget.builder("//foo","workspace").build()).setSrcTarget(Optional.of(library.getBuildTarget())).setWorkspaceName(Optional.of("workspace")).build();
  TargetGraph targetGraph=TargetGraphFactory.newInstance(ImmutableSet.<TargetNode<?>>builder().addAll(tests).add(library,workspace).build());
  WorkspaceAndProjectGenerator generator=new WorkspaceAndProjectGenerator(projectFilesystem,targetGraph,workspace.getConstructorArg(),workspaceNode.getBuildTarget(),ImmutableSet.of(ProjectGenerator.Option.INCLUDE_TESTS),false,"BUCK",getOutputPathOfNodeFunction(targetGraph));
  generator.setGroupableTests(AppleBuildRules.filterGroupableTests(targetGraph.getNodes()));
  return generator;
}
