{
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  Preconditions.checkState(params.getBuildTarget().getFlavors().contains(platform.getFlavor()));
  ImmutableSet<GoLinkable> linkables=requireGoLinkables(params.getBuildTarget(),resolver,platform,deps);
  BuildTarget target=createSymlinkTreeTarget(params.getBuildTarget());
  SymlinkTree symlinkTree=makeSymlinkTree(params.copyWithBuildTarget(target),pathResolver,linkables);
  resolver.addToIndex(symlinkTree);
  LOG.verbose("Symlink tree for compiling %s: %s",params.getBuildTarget(),symlinkTree.getLinks());
  return new GoCompile(params.appendExtraDeps(ImmutableList.of(symlinkTree)),pathResolver,symlinkTree,packageName,getPackageImportMap(goBuckConfig.getVendorPaths(),params.getBuildTarget().getBasePath(),FluentIterable.from(linkables).transformAndConcat(new Function<GoLinkable,ImmutableSet<Path>>(){
    @Override public ImmutableSet<Path> apply(    GoLinkable input){
      return input.getGoLinkInput().keySet();
    }
  }
)),ImmutableSet.copyOf(srcs),ImmutableList.copyOf(compilerFlags),goBuckConfig.getCompiler(),ImmutableList.copyOf(assemblerFlags),goBuckConfig.getAssemblerIncludeDirs(),goBuckConfig.getAssembler(),goBuckConfig.getPacker(),platform);
}
