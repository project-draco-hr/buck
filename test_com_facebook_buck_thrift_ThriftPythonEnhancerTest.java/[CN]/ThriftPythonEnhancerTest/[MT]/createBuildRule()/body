{
  BuildRuleResolver resolver=new BuildRuleResolver();
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  BuildRuleParams flavoredParams=BuildRuleParamsFactory.createTrivialBuildRuleParams(TARGET);
  ThriftConstructorArg arg=new ThriftConstructorArg();
  arg.pyOptions=Optional.absent();
  arg.pyBaseModule=Optional.absent();
  ImmutableMap<String,ThriftSource> sources=ImmutableMap.of("test1.thrift",new ThriftSource(createFakeThriftCompiler("//:thrift_source1",pathResolver),ImmutableList.<String>of(),Paths.get("output1")),"test2.thrift",new ThriftSource(createFakeThriftCompiler("//:thrift_source2",pathResolver),ImmutableList.<String>of(),Paths.get("output2")));
  ImmutableSortedSet<BuildRule> deps=ImmutableSortedSet.<BuildRule>of(createFakeBuildRule("//:dep",pathResolver));
  PythonLibrary library=ENHANCER.createBuildRule(flavoredParams,resolver,arg,sources,deps);
  assertEquals(deps,library.getDeps());
}
