{
  ThriftConstructorArg arg=new ThriftConstructorArg();
  ImmutableSet<String> options;
  options=ImmutableSet.of();
  arg.pyOptions=Optional.of(options);
  assertEquals(options,ENHANCER.getOptions(TARGET,arg));
  assertEquals(addTwisted(options),TWISTED_ENHANCER.getOptions(TARGET,arg));
  options=ImmutableSet.of("test","option");
  arg.pyOptions=Optional.of(options);
  assertEquals(options,ENHANCER.getOptions(TARGET,arg));
  assertEquals(addTwisted(options),TWISTED_ENHANCER.getOptions(TARGET,arg));
  arg.pyOptions=Optional.absent();
  assertEquals(ImmutableSet.<String>of(),ENHANCER.getOptions(TARGET,arg));
  assertEquals(addTwisted(ImmutableSet.<String>of()),TWISTED_ENHANCER.getOptions(TARGET,arg));
}
