{
  if (filteredResourcesProvider.getResDirectories().isEmpty()) {
    buildableContext.addMetadata(STRING_ASSETS_ZIP_HASH,Hashing.sha1().hashInt(0).toString());
    return ImmutableList.of();
  }
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  Path pathToBaseDir=getPathToStringAssetsDir();
  steps.add(new MakeCleanDirectoryStep(pathToBaseDir));
  Path pathToDirContainingAssetsDir=pathToBaseDir.resolve("string_assets");
  steps.add(new MakeCleanDirectoryStep(pathToDirContainingAssetsDir));
  Path pathToStrings=pathToDirContainingAssetsDir.resolve("assets").resolve("strings");
  Path pathToStringAssetsZip=getPathToStringAssetsZip();
  steps.add(new MakeCleanDirectoryStep(pathToStrings));
  steps.add(new CompileStringsStep(filteredResourcesProvider.getNonEnglishStringFiles(),aaptPackageResources.getPathToRDotTxtDir(),pathToStrings));
  steps.add(new ZipStep(pathToStringAssetsZip,ImmutableSet.<Path>of(),false,ZipStep.MAX_COMPRESSION_LEVEL,pathToDirContainingAssetsDir));
  steps.add(new RecordFileSha1Step(pathToStringAssetsZip,STRING_ASSETS_ZIP_HASH,buildableContext));
  buildableContext.recordArtifact(pathToStringAssetsZip);
  return steps.build();
}
