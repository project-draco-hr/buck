{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"symbol_finder",temporaryFolder);
  workspace.setUp();
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(temporaryFolder.getRootPath());
  ImmutableMap<String,String> environment=ImmutableMap.copyOf(System.getenv());
  Config rawConfig=Configs.createDefaultConfig(projectFilesystem.getRootPath(),CellConfig.of());
  BuckConfig config=new BuckConfig(rawConfig,projectFilesystem,Architecture.detect(),Platform.detect(),environment);
  ParserConfig parserConfig=new ParserConfig(config);
  PythonBuckConfig pythonBuckConfig=new PythonBuckConfig(config,new ExecutableFinder());
  ImmutableSet<Description<?>> allDescriptions=DefaultKnownBuildRuleTypes.getDefaultKnownBuildRuleTypes(projectFilesystem,environment).getAllDescriptions();
  SrcRootsFinder srcRootsFinder=new SrcRootsFinder(projectFilesystem);
  ProjectBuildFileParserFactory projectBuildFileParserFactory=new DefaultProjectBuildFileParserFactory(ProjectBuildFileParserOptions.builder().setProjectRoot(projectFilesystem.getRootPath()).setPythonInterpreter(pythonBuckConfig.getPythonInterpreter()).setAllowEmptyGlobs(parserConfig.getAllowEmptyGlobs()).setIgnorePaths(projectFilesystem.getIgnorePaths()).setBuildFileName(parserConfig.getBuildFileName()).setDefaultIncludes(parserConfig.getDefaultIncludes()).setDescriptions(allDescriptions).setEnableBuildFileSandboxing(parserConfig.getEnableBuildFileSandboxing()).build());
  BuckEventBus buckEventBus=BuckEventBusFactory.newInstance();
  JavaSymbolFinder finder=new JavaSymbolFinder(projectFilesystem,srcRootsFinder,DEFAULT_JAVAC_OPTIONS,new ConstructorArgMarshaller(new DefaultTypeCoercerFactory(ObjectMappers.newDefaultInstance())),projectBuildFileParserFactory,config,buckEventBus,new TestConsole(),environment);
  SetMultimap<String,BuildTarget> foundTargets=finder.findTargetsForSymbols(ImmutableSet.of("com.example.a.A"));
  assertEquals("JavaSymbolFinder failed to find the right target.",ImmutableSetMultimap.of("com.example.a.A",BuildTargetFactory.newInstance(projectFilesystem,"//java/com/example/a:a")),foundTargets);
}
