{
  final Map<BuildTarget,CxxPreprocessorInput> deps=Maps.newTreeMap();
  AbstractBreadthFirstTraversal<BuildRule> visitor=new AbstractBreadthFirstTraversal<BuildRule>(inputs){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule rule){
      if (rule instanceof CxxPreprocessorDep) {
        CxxPreprocessorDep dep=(CxxPreprocessorDep)rule;
        Preconditions.checkState(!deps.containsKey(rule.getBuildTarget()));
        deps.put(rule.getBuildTarget(),dep.getCxxPreprocessorInput(cxxPlatform,HeaderVisibility.PUBLIC));
      }
      return traverse.apply(rule) ? rule.getDeps() : ImmutableSet.<BuildRule>of();
    }
  }
;
  visitor.start();
  return deps.values();
}
