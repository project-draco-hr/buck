{
  BuildRule rule=ruleResolver.requireRule(BuildTarget.builder(target).addFlavors(flavor,CxxDescriptionEnhancer.getHeaderSymlinkTreeFlavor(headerVisibility)).build());
  Preconditions.checkState(rule instanceof HeaderSymlinkTree,"Attempt to add %s of type %s and class %s to %s",rule.getFullyQualifiedName(),rule.getType(),rule.getClass(),target);
  HeaderSymlinkTree symlinkTree=(HeaderSymlinkTree)rule;
  builder.addRules(symlinkTree.getBuildTarget()).addIncludes(CxxHeaders.builder().setNameToPathMap(ImmutableSortedMap.copyOf(symlinkTree.getLinks())).setFullNameToPathMap(ImmutableSortedMap.copyOf(symlinkTree.getFullLinks())).build());
switch (includeType) {
case LOCAL:
    builder.addIncludeRoots(symlinkTree.getIncludePath());
  builder.addAllHeaderMaps(symlinkTree.getHeaderMap().asSet());
break;
case SYSTEM:
builder.addSystemIncludeRoots(symlinkTree.getSystemIncludePath());
break;
}
return builder;
}
