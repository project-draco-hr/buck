{
  BuildRule rule=CxxDescriptionEnhancer.requireBuildRule(params,ruleResolver,flavor,CxxDescriptionEnhancer.getHeaderSymlinkTreeFlavor(headerVisibility));
  Preconditions.checkState(rule instanceof SymlinkTree);
  SymlinkTree symlinkTree=(SymlinkTree)rule;
  CxxPreprocessorInput.Builder builder=CxxPreprocessorInput.builder().addRules(symlinkTree.getBuildTarget()).putAllPreprocessorFlags(exportedPreprocessorFlags).setIncludes(CxxHeaders.builder().setPrefixHeaders(ImmutableSortedSet.<SourcePath>of()).setNameToPathMap(ImmutableSortedMap.copyOf(symlinkTree.getLinks())).setFullNameToPathMap(ImmutableSortedMap.copyOf(symlinkTree.getFullLinks())).build()).addAllFrameworkRoots(frameworkSearchPaths);
switch (includeType) {
case LOCAL:
    builder.addIncludeRoots(symlinkTree.getRoot());
  break;
case SYSTEM:
builder.addSystemIncludeRoots(symlinkTree.getRoot());
break;
}
return builder.build();
}
