{
  AppleBundleResources.Builder builder=AppleBundleResources.builder();
  ImmutableSet<BuildRuleType> types=ImmutableSet.of(AppleResourceDescription.TYPE,IosReactNativeLibraryDescription.TYPE);
  Iterable<TargetNode<?>> resourceNodes=AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,AppleBuildRules.RecursiveDependenciesMode.COPYING,targetNode,Optional.of(types));
  for (  TargetNode<?> resourceNode : resourceNodes) {
    Object constructorArg=resourceNode.getConstructorArg();
    if (constructorArg instanceof AppleResourceDescription.Arg) {
      AppleResourceDescription.Arg appleResource=(AppleResourceDescription.Arg)constructorArg;
      builder.addAllResourceDirs(appleResource.dirs);
      builder.addAllResourceFiles(appleResource.files);
      if (appleResource.variants.isPresent()) {
        builder.addAllResourceVariantFiles(appleResource.variants.get());
      }
    }
 else {
      Preconditions.checkState(constructorArg instanceof ReactNativeLibraryArgs);
      BuildTarget buildTarget=resourceNode.getBuildTarget();
      builder.addDirsContainingResourceDirs(new BuildTargetSourcePath(buildTarget,ReactNativeBundle.getPathToJSBundleDir(buildTarget)),new BuildTargetSourcePath(buildTarget,ReactNativeBundle.getPathToResources(buildTarget)));
    }
  }
  return builder.build();
}
