@classmethod
def split_fragment(cls, fragment):
    "A heuristic used to split a string into version name/fragment:\n\n       >>> split_fragment('pysolr-2.1.0-beta')\n       ('pysolr', '2.1.0-beta')\n       >>> split_fragment('cElementTree-1.0.5-20051216')\n       ('cElementTree', '1.0.5-20051216')\n       >>> split_fragment('pil-1.1.7b1-20090412')\n       ('pil', '1.1.7b1-20090412')\n       >>> split_fragment('django-plugin-2-2.3')\n       ('django-plugin-2', '2.3')\n    "

    def likely_version_component(enumerated_fragment):
        return sum((bool((v and v[0].isdigit())) for v in enumerated_fragment[1].split('.')))
    fragments = fragment.split('-')
    if (len(fragments) == 1):
        return (fragment, '')
    (max_index, _) = max(enumerate(fragments), key=likely_version_component)
    return ('-'.join(fragments[0:max_index]), '-'.join(fragments[max_index:]))
