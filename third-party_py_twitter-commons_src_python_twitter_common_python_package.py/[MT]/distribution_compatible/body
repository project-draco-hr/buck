def distribution_compatible(dist, interpreter=None, platform=None):
    'Is this distribution compatible with the given interpreter/platform combination?\n\n  :param interpreter: The Python interpreter against which compatibility should be checked.  If None\n  specified, the current interpreter is used.\n  :type identity: :class:`PythonInterpreter` or None\n  :param platform: The platform against which compatibility should be checked.  If None, the current\n  platform will be used\n  :type platform: string or None\n  :returns: True if the distribution is compatible, False if it is unrecognized or incompatible.\n  '
    interpreter = (interpreter or PythonInterpreter.get())
    platform = (platform or Platform.current())
    package = Package.from_href(dist.location)
    if (not package):
        return False
    return package.compatible(interpreter.identity, platform=platform)
