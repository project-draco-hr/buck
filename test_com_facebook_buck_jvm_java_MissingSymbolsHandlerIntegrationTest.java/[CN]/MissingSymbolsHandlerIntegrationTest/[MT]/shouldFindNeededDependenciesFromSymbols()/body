{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"symbol_finder",temporaryFolder);
  workspace.setUp();
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(temporaryFolder.getRoot());
  ImmutableMap<String,String> environment=ImmutableMap.copyOf(System.getenv());
  Config rawConfig=Configs.createDefaultConfig(projectFilesystem.getRootPath());
  BuckConfig config=new BuckConfig(rawConfig,projectFilesystem,Architecture.detect(),Platform.detect(),environment,new DefaultCellPathResolver(projectFilesystem.getRootPath(),rawConfig));
  ImmutableSet<Description<?>> allDescriptions=DefaultKnownBuildRuleTypes.getDefaultKnownBuildRuleTypes(projectFilesystem,environment).getAllDescriptions();
  BuckEventBus buckEventBus=BuckEventBusFactory.newInstance();
  MissingSymbolsHandler missingSymbolsHandler=MissingSymbolsHandler.create(projectFilesystem,allDescriptions,config,buckEventBus,new TestConsole(),DEFAULT_JAVAC_OPTIONS,environment);
  MissingSymbolEvent missingSymbolEvent=MissingSymbolEvent.create(BuildTargetFactory.newInstance(workspace.getDestPath(),"//java/com/example/b:b"),"com.example.a.A",MissingSymbolEvent.SymbolType.Java);
  ImmutableSetMultimap<BuildTarget,BuildTarget> neededDeps=missingSymbolsHandler.getNeededDependencies(ImmutableList.of(missingSymbolEvent));
  assertEquals("MissingSymbolsHandler failed to find the needed dependency.",neededDeps,ImmutableSetMultimap.of(BuildTargetFactory.newInstance(workspace.getDestPath(),"//java/com/example/b:b"),BuildTargetFactory.newInstance(workspace.getDestPath(),"//java/com/example/a:a")));
}
