{
  Map<Path,Path> newSymlinksEncountered=Maps.newHashMap();
  if (inputFilesUnderSymlink(node.getInputs(),node.getRuleFactoryParams().getProjectFilesystem(),symlinkExistenceCache,newSymlinksEncountered)) {
    ParserConfig.AllowSymlinks allowSymlinks=Preconditions.checkNotNull(cellSymlinkAllowability.get(node.getBuildTarget().getCellPath()));
    if (allowSymlinks == ParserConfig.AllowSymlinks.FORBID) {
      throw new HumanReadableException("Target %s contains input files under a path which contains a symbolic link " + "(%s). To resolve this, use separate rules and declare dependencies instead of " + "using symbolic links.",node.getBuildTarget(),newSymlinksEncountered);
    }
    LOG.warn("Disabling caching for target %s, because one or more input files are under a " + "symbolic link (%s). This will severely impact performance! To resolve this, use " + "separate rules and declare dependencies instead of using symbolic links.",node.getBuildTarget(),newSymlinksEncountered);
    buildInputPathsUnderSymlink.add(buildFile);
  }
}
