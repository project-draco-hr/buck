{
  stdout.close();
  stderr.close();
  parsePipeline.close();
  try {
    parserLeaseVendor.close();
  }
 catch (  Exception e) {
    Throwables.propagateIfInstanceOf(e,InterruptedException.class);
    Throwables.propagateIfInstanceOf(e,BuildFileParseException.class);
    Throwables.propagate(e);
  }
  LOG.debug("Cleaning cache of build files with inputs under symlink %s",buildInputPathsUnderSymlink);
  Set<Path> buildInputPathsUnderSymlinkCopy=new HashSet<>(buildInputPathsUnderSymlink);
  buildInputPathsUnderSymlink.clear();
  for (  Path buildFilePath : buildInputPathsUnderSymlinkCopy) {
    permState.invalidatePath(buildFilePath);
  }
}
