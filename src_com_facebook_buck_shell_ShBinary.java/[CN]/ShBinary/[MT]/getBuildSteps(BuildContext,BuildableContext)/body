{
  buildableContext.recordArtifact(output);
  return ImmutableList.of(new MakeCleanDirectoryStep(getProjectFilesystem(),output.getParent()),new StringTemplateStep(TEMPLATE,getProjectFilesystem(),output,new Function<ST,ST>(){
    @Override public ST apply(    ST input){
      int levelsBelowRoot=output.getNameCount() - 1;
      String pathBackToRoot=Joiner.on("/").join(Collections.nCopies(levelsBelowRoot,".."));
      ImmutableList<String> resourceStrings=FluentIterable.from(getResolver().deprecatedAllPaths(resources)).transform(Functions.toStringFunction()).transform(Escaper.BASH_ESCAPER).toList();
      return input.add("path_back_to_root",pathBackToRoot).add("script_to_run",Escaper.escapeAsBashString(getResolver().getRelativePath(main))).add("resources",resourceStrings);
    }
  }
),new MakeExecutableStep(getProjectFilesystem(),output));
}
