{
  byte[] fakeData={0,0,0,0};
  privateDir=Files.createTempDir();
  Multimap<File,String> outputToInputMap=LinkedHashMultimap.create();
  testInZip=new File(privateDir,"in.zip");
  outputToInputMap.putAll(testInZip,ImmutableList.of("secondary-1","secondary-2","secondary-3","primary","secondary-4"));
  testInZips=Sets.newLinkedHashSet();
  File inA=new File(privateDir,"in-a.zip");
  testInZips.add(inA);
  outputToInputMap.putAll(inA,ImmutableList.of("primary-a-1","primary-a-2","primary-a-3","secondary-a-1","secondary-a-2","secondary-a-3"));
  File inB=new File(privateDir,"in-b.zip");
  testInZips.add(inB);
  outputToInputMap.putAll(inB,ImmutableList.of("secondary-b-1","secondary-b-2"));
  File inC=new File(privateDir,"in-c.zip");
  testInZips.add(inC);
  outputToInputMap.putAll(inC,ImmutableList.of("secondary-c-1","secondary-c-2","secondary-c-3"));
  for (  File outputFile : outputToInputMap.keySet()) {
    ZipOutputStream zipOut=new ZipOutputStream(new FileOutputStream(outputFile));
    for (    String name : outputToInputMap.get(outputFile)) {
      zipOut.putNextEntry(new ZipEntry(name));
      zipOut.write(fakeData);
    }
    zipOut.close();
  }
  outPrimary=new File(privateDir,"primary.zip");
  secondaryPattern="secondary-%d.zip";
}
