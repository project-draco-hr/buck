{
  QueryExpression from=args.get(0).getExpression();
  QueryExpression to=args.get(1).getExpression();
  Set<T> fromValue=from.eval(env);
  Set<T> toValue=to.eval(env);
  env.buildTransitiveClosure(expression,fromValue,Integer.MAX_VALUE);
  Set<T> reachableFromX=env.getTransitiveClosure(fromValue);
  Set<T> result=intersection(reachableFromX,toValue);
  Collection<T> worklist=result;
  while (!worklist.isEmpty()) {
    Collection<T> reverseDeps=env.getReverseDeps(worklist);
    worklist=new ArrayList<>();
    for (    T np : reverseDeps) {
      if (reachableFromX.contains(np)) {
        if (result.add(np)) {
          worklist.add(np);
        }
      }
    }
  }
  return result;
}
