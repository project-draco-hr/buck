{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  Path scratchDir=BuildTargets.getScratchPath(getProjectFilesystem(),getBuildTarget(),"%s");
  steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),scratchDir));
  final Path packageDb=getPackageDb();
  steps.add(new RmStep(getProjectFilesystem(),packageDb,true,true));
  buildableContext.recordArtifact(packageDb);
  Path registrationFile=scratchDir.resolve("registration-file");
  steps.add(getWriteRegistrationFileStep(registrationFile,packageDb));
  steps.add(new GhcPkgStep(ImmutableList.of("init",packageDb.toString()),ImmutableMap.<String,String>of()));
  steps.add(new GhcPkgStep(ImmutableList.of("-v0","register","--package-conf=" + packageDb,"--no-expand-pkgroot",registrationFile.toString()),ImmutableMap.of("GHC_PACKAGE_PATH",Joiner.on(':').join(FluentIterable.from(depPackages.values()).transform(new Function<HaskellPackage,String>(){
    @Override public String apply(    HaskellPackage input){
      return getResolver().getAbsolutePath(input.getPackageDb()).toString();
    }
  }
)))));
  return steps.build();
}
