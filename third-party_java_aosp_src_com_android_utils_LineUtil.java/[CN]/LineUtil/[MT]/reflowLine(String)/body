{
  final int maxLen=78;
  int n=line.length();
  int cr=line.indexOf('\n');
  if (n <= maxLen && (cr == -1 || cr == n - 1)) {
    return line;
  }
  int prefixSize=line.indexOf(':') + 1;
  if (prefixSize > 0 && prefixSize < maxLen) {
    while (prefixSize < n && line.charAt(prefixSize) == ' ') {
      prefixSize++;
    }
  }
 else {
    prefixSize=4;
  }
  String prefix=String.format("%-" + Integer.toString(prefixSize) + "s"," ");
  StringBuilder output=new StringBuilder(n + prefixSize);
  while (n > 0) {
    cr=line.indexOf('\n');
    if (n <= maxLen && (cr == -1 || cr == n - 1)) {
      output.append(line);
      break;
    }
    int posNext=maxLen;
    if (cr != -1 && cr != n - 1 && cr <= posNext) {
      posNext=cr + 1;
      while (posNext < n && line.charAt(posNext) == '\n') {
        posNext++;
      }
    }
    while (posNext < n && line.charAt(posNext) == ' ') {
      posNext++;
    }
    while (posNext > 0) {
      char c=line.charAt(posNext - 1);
      if (c != ' ' && c != '\n') {
        posNext--;
      }
 else {
        break;
      }
    }
    if (posNext == 0 || (posNext >= n && maxLen < n)) {
      posNext=maxLen;
    }
    int posPrev=posNext;
    while (posPrev > 0) {
      char c=line.charAt(posPrev - 1);
      if (c == ' ' || c == '\n') {
        posPrev--;
      }
 else {
        break;
      }
    }
    output.append(line.substring(0,posPrev)).append('\n');
    line=prefix + line.substring(posNext);
    n=line.length();
  }
  return output.toString();
}
