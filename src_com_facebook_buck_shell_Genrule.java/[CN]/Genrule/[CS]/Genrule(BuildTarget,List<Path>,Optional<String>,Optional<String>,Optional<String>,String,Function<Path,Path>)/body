{
  super(target);
  this.srcs=ImmutableList.copyOf(srcs);
  this.cmd=Preconditions.checkNotNull(cmd);
  this.bash=Preconditions.checkNotNull(bash);
  this.cmdExe=Preconditions.checkNotNull(cmdExe);
  this.srcsToAbsolutePaths=FluentIterable.from(srcs).toMap(new Function<Path,Path>(){
    @Override public Path apply(    Path src){
      return relativeToAbsolutePathFunction.apply(src);
    }
  }
);
  Preconditions.checkNotNull(out);
  this.pathToOutDirectory=Paths.get(BuckConstant.GEN_DIR,target.getBasePathWithSlash());
  this.pathToOutFile=this.pathToOutDirectory.resolve(out);
  this.pathToTmpDirectory=Paths.get(BuckConstant.GEN_DIR,target.getBasePathWithSlash(),String.format("%s__tmp",target.getShortName()));
  this.absolutePathToTmpDirectory=relativeToAbsolutePathFunction.apply(pathToTmpDirectory);
  this.pathToSrcDirectory=Paths.get(BuckConstant.GEN_DIR,target.getBasePathWithSlash(),String.format("%s__srcs",target.getShortName()));
  this.absolutePathToSrcDirectory=relativeToAbsolutePathFunction.apply(pathToSrcDirectory);
  this.relativeToAbsolutePathFunction=relativeToAbsolutePathFunction;
  this.deps=ImmutableSortedSet.of();
}
