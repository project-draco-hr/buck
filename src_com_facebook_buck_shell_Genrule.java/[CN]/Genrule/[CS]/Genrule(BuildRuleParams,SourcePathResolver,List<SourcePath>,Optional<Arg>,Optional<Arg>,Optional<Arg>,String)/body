{
  super(params,resolver);
  this.srcs=ImmutableList.copyOf(srcs);
  this.cmd=cmd;
  this.bash=bash;
  this.cmdExe=cmdExe;
  this.out=out;
  BuildTarget target=params.getBuildTarget();
  this.pathToOutDirectory=BuckConstant.GEN_PATH.resolve(target.getBasePath()).resolve(target.getShortName());
  this.pathToOutFile=this.pathToOutDirectory.resolve(out);
  if (!pathToOutFile.startsWith(pathToOutDirectory) || pathToOutFile.equals(pathToOutDirectory)) {
    throw new HumanReadableException("The 'out' parameter of genrule %s is '%s', which is not a valid file name.",params.getBuildTarget(),out);
  }
  this.pathToTmpDirectory=Paths.get(BuckConstant.GEN_DIR,target.getBasePathWithSlash(),String.format("%s__tmp",target.getShortNameAndFlavorPostfix()));
  this.absolutePathToTmpDirectory=getProjectFilesystem().resolve(pathToTmpDirectory);
  this.pathToSrcDirectory=Paths.get(BuckConstant.GEN_DIR,target.getBasePathWithSlash(),String.format("%s__srcs",target.getShortNameAndFlavorPostfix()));
  this.absolutePathToSrcDirectory=getProjectFilesystem().resolve(pathToSrcDirectory);
}
