{
  ImmutableList.Builder<Step> commands=ImmutableList.builder();
  commands.add(new RmStep(getPathToOutputFile(),true));
  commands.add(new MkdirStep(pathToOutDirectory));
  commands.add(new MakeCleanDirectoryStep(pathToTmpDirectory));
  commands.add(new MakeCleanDirectoryStep(pathToSrcDirectory));
  addSymlinkCommands(commands);
  final String cmd=replaceBinaryBuildRuleRefsInCmd();
  final ImmutableList<String> commandArgs=ImmutableList.of("/bin/bash","-c",cmd);
  commands.add(new ShellStep(){
    @Override public String getShortName(    ExecutionContext context){
      return String.format("genrule: %s",cmd);
    }
    @Override protected ImmutableList<String> getShellCommandInternal(    ExecutionContext context){
      return commandArgs;
    }
    @Override public ImmutableMap<String,String> getEnvironmentVariables(    ExecutionContext context){
      ImmutableMap.Builder<String,String> environmentVariablesBuilder=ImmutableMap.builder();
      addEnvironmentVariables(context,environmentVariablesBuilder);
      return environmentVariablesBuilder.build();
    }
    @Override protected boolean shouldPrintStdErr(    ExecutionContext context){
      return true;
    }
  }
);
  return commands.build();
}
