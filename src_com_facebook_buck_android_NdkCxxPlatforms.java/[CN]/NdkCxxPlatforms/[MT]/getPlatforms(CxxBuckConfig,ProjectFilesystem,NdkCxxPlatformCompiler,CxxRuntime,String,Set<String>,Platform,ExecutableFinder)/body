{
  ImmutableMap.Builder<TargetCpuType,NdkCxxPlatform> ndkCxxPlatformBuilder=ImmutableMap.builder();
  if (cpuAbis.contains("arm")) {
    ImmutableList<String> armeabiArchFlags=ImmutableList.of("-march=armv5te","-mtune=xscale","-msoft-float","-mthumb");
    NdkCxxPlatform armeabi=build(config,ImmutableFlavor.of("android-arm"),platform,ndkRoot,NdkCxxPlatformTargetConfiguration.builder().setToolchain(Toolchain.ARM_LINUX_ANDROIDEABI).setTargetArch(TargetArch.ARM).setTargetArchAbi(TargetArchAbi.ARMEABI).setTargetAppPlatform(androidPlatform).setCompiler(compiler).setToolchainTarget(ToolchainTarget.ARM_LINUX_ANDROIDEABI).putAssemblerFlags(NdkCxxPlatformCompiler.Type.GCC,armeabiArchFlags).putAssemblerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>builder().add("-target","armv5te-none-linux-androideabi").addAll(armeabiArchFlags).build()).putCompilerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>builder().add("-Os").addAll(armeabiArchFlags).build()).putCompilerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>builder().add("-target","armv5te-none-linux-androideabi","-Os").addAll(armeabiArchFlags).build()).putLinkerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.of("-march=armv5te","-Wl,--fix-cortex-a8")).putLinkerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","armv5te-none-linux-androideabi","-march=armv5te","-Wl,--fix-cortex-a8")).build(),cxxRuntime,executableFinder);
    ndkCxxPlatformBuilder.put(TargetCpuType.ARM,armeabi);
  }
  if (cpuAbis.contains("armv7")) {
    ImmutableList<String> armeabiv7ArchFlags=ImmutableList.of("-march=armv7-a","-mfpu=vfpv3-d16","-mfloat-abi=softfp","-mthumb");
    NdkCxxPlatform armeabiv7=build(config,ImmutableFlavor.of("android-armv7"),platform,ndkRoot,NdkCxxPlatformTargetConfiguration.builder().setToolchain(Toolchain.ARM_LINUX_ANDROIDEABI).setTargetArch(TargetArch.ARM).setTargetArchAbi(TargetArchAbi.ARMEABI_V7A).setTargetAppPlatform(androidPlatform).setCompiler(compiler).setToolchainTarget(ToolchainTarget.ARM_LINUX_ANDROIDEABI).putAssemblerFlags(NdkCxxPlatformCompiler.Type.GCC,armeabiv7ArchFlags).putAssemblerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>builder().add("-target","armv7-none-linux-androideabi").addAll(armeabiv7ArchFlags).build()).putCompilerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>builder().add("-finline-limit=64","-Os").addAll(armeabiv7ArchFlags).build()).putCompilerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>builder().add("-target","armv7-none-linux-androideabi","-Os").addAll(armeabiv7ArchFlags).build()).putLinkerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>of()).putLinkerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","armv7-none-linux-androideabi")).build(),cxxRuntime,executableFinder);
    ndkCxxPlatformBuilder.put(TargetCpuType.ARMV7,armeabiv7);
  }
  if (cpuAbis.contains("x86")) {
    NdkCxxPlatform x86=build(config,ImmutableFlavor.of("android-x86"),platform,ndkRoot,NdkCxxPlatformTargetConfiguration.builder().setToolchain(Toolchain.X86).setTargetArch(TargetArch.X86).setTargetArchAbi(TargetArchAbi.X86).setTargetAppPlatform(androidPlatform).setCompiler(compiler).setToolchainTarget(ToolchainTarget.I686_LINUX_ANDROID).putAssemblerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>of()).putAssemblerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>builder().add("-target","i686-none-linux-android").build()).putCompilerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.of("-funswitch-loops","-finline-limit=300","-O2")).putCompilerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","i686-none-linux-android","-O2")).putLinkerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>of()).putLinkerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","i686-none-linux-android")).build(),cxxRuntime,executableFinder);
    ndkCxxPlatformBuilder.put(TargetCpuType.X86,x86);
  }
  if (cpuAbis.contains("x86_64")) {
    NdkCxxPlatform x86_64=build(config,ImmutableFlavor.of("android-x86_64"),platform,ndkRoot,NdkCxxPlatformTargetConfiguration.builder().setToolchain(Toolchain.X86_64).setTargetArch(TargetArch.X86_64).setTargetArchAbi(TargetArchAbi.X86_64).setTargetAppPlatform(androidPlatform).setCompiler(compiler).setToolchainTarget(ToolchainTarget.X86_64_LINUX_ANDROID).putAssemblerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>of()).putAssemblerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.<String>of()).putCompilerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.of("-funswitch-loops","-finline-limit=300","-O2")).putCompilerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","i686-none-linux-android","-O2")).putLinkerFlags(NdkCxxPlatformCompiler.Type.GCC,ImmutableList.<String>of()).putLinkerFlags(NdkCxxPlatformCompiler.Type.CLANG,ImmutableList.of("-target","i686-none-linux-android")).build(),cxxRuntime,executableFinder);
    ndkCxxPlatformBuilder.put(TargetCpuType.X86_64,x86_64);
  }
  return ndkCxxPlatformBuilder.build();
}
