{
  ImmutableList.Builder<String> flags=ImmutableList.builder();
switch (cxxRuntime) {
case GNUSTL:
    flags.add("-isystem",toolchainPaths.getCxxRuntimeDirectory(cxxRuntime).resolve("include").toString());
  flags.add("-isystem",toolchainPaths.getCxxRuntimeDirectory(cxxRuntime).resolve("libs").resolve(targetConfiguration.getTargetArchAbi().toString()).resolve("include").toString());
break;
case LIBCXX:
flags.add("-isystem",toolchainPaths.getCxxRuntimeDirectory(cxxRuntime).resolve("libcxx").resolve("include").toString());
flags.add("-isystem",toolchainPaths.getCxxRuntimeDirectory(cxxRuntime).getParent().resolve("llvm-libc++abi").resolve("libcxxabi").resolve("include").toString());
flags.add("-isystem",toolchainPaths.getNdkRoot().resolve("sources").resolve("android").resolve("support").resolve("include").toString());
break;
default :
flags.add("-isystem",toolchainPaths.getCxxRuntimeDirectory(cxxRuntime).resolve("include").toString());
}
return flags.build();
}
