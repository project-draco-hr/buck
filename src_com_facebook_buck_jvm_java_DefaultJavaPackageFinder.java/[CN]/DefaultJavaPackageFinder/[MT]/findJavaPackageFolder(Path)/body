{
  for (  String pathFromRoot : pathsFromRoot) {
    if (pathRelativeToProjectRoot.startsWith(pathFromRoot)) {
      return MorePaths.getParentOrEmpty(MorePaths.relativize(pathRelativeToProjectRoot.getFileSystem().getPath(pathFromRoot),pathRelativeToProjectRoot));
    }
  }
  Path directory=pathRelativeToProjectRoot.getParent();
  Deque<String> parts=Lists.newLinkedList();
  while (directory != null && !pathElements.contains(directory.getFileName().toString())) {
    parts.addFirst(directory.getFileName().toString());
    directory=directory.getParent();
  }
  if (!parts.isEmpty()) {
    return pathRelativeToProjectRoot.getFileSystem().getPath(Joiner.on(File.separatorChar).join(parts));
  }
 else {
    return pathRelativeToProjectRoot.getFileSystem().getPath("");
  }
}
