{
  Path binDirectory=buildArtifactsDirectory.resolve("libs");
  Step nkdBuildStep=new NdkBuildStep(root,makefile,buildArtifactsDirectory,binDirectory,flags,macroExpander);
  Step mkDirStep=new MakeCleanDirectoryStep(genDirectory);
  Step copyStep=CopyStep.forDirectory(binDirectory,genDirectory,CopyStep.DirectoryMode.CONTENTS_ONLY);
  buildableContext.recordArtifact(genDirectory);
  Step cacheUnstrippedObjs=new AbstractExecutionStep("cache_unstripped_so"){
    @Override public int execute(    ExecutionContext context){
      try {
        Set<Path> unstrippedSharedObjs=context.getProjectFilesystem().getFilesUnderPath(buildArtifactsDirectory,new Predicate<Path>(){
          @Override public boolean apply(          Path input){
            return input.toString().endsWith(".so");
          }
        }
);
        for (        Path path : unstrippedSharedObjs) {
          buildableContext.recordArtifact(path);
        }
      }
 catch (      IOException e) {
        context.logError(e,"Failed to cache intermediate artifacts of %s.",getBuildTarget());
        return 1;
      }
      return 0;
    }
  }
;
  return ImmutableList.of(nkdBuildStep,mkDirStep,copyStep,cacheUnstrippedObjs);
}
