{
  FileHashCache fileHashCache=new FileHashCache(){
    @Override public boolean willGet(    Path path){
      return true;
    }
    @Override public boolean willGet(    ArchiveMemberPath archiveMemberPath){
      return true;
    }
    @Override public void invalidate(    Path path){
    }
    @Override public void invalidateAll(){
    }
    @Override public HashCode get(    Path path){
      return HashCode.fromString("deadbeef");
    }
    @Override public HashCode get(    ArchiveMemberPath archiveMemberPath){
      return HashCode.fromString("deadbeef");
    }
    @Override public void set(    Path path,    HashCode hashCode){
    }
  }
;
  BuildTarget buildTarget=BuildTargetFactory.newInstance("//some:example");
  BuildRule buildRule=new FakeBuildRule(buildTarget,resolver);
  return new DefaultRuleKeyBuilderFactory(fileHashCache,resolver).newInstance(buildRule);
}
