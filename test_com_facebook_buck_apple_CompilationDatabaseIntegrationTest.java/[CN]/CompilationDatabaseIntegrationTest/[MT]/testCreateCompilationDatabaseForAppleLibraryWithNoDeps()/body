{
  File compilationDatabase=workspace.buildAndReturnOutput("//Libraries/EXExample:EXExample#compilation-database,iphonesimulator-x86_64");
  assertEquals(Paths.get("buck-out/gen/Libraries/EXExample/" + "__EXExample#compilation-database,iphonesimulator-x86_64.json"),tmp.getRootPath().relativize(compilationDatabase.toPath()));
  ObjectMapper mapper=new ObjectMapper();
  JavaType type=mapper.getTypeFactory().constructCollectionType(ArrayList.class,JsonSerializableDatabaseEntry.class);
  List<JsonSerializableDatabaseEntry> entries=mapper.readValue(compilationDatabase,type);
  Map<String,JsonSerializableDatabaseEntry> fileToEntry=Maps.newHashMap();
  for (  JsonSerializableDatabaseEntry entry : entries) {
    fileToEntry.put(entry.file,entry);
  }
  Iterable<String> frameworks=ImmutableList.of(Paths.get("/System/Library/Frameworks/Foundation.framework").getParent().toString());
  String pathToPrivateHeaders="buck-out/gen/Libraries/EXExample/" + "EXExample#header-symlink-tree,iphonesimulator-x86_64";
  String pathToPublicHeaders="buck-out/gen/Libraries/EXExample/" + "EXExample#exported-header-symlink-tree,iphonesimulator-x86_64";
  Iterable<String> includes=ImmutableList.of(pathToPrivateHeaders,pathToPublicHeaders);
  assertFlags("Libraries/EXExample/EXExample/EXExampleModel.m","buck-out/bin/Libraries/EXExample/EXExample#compile-pic-EXExample_" + "EXExampleModel.m.o,iphonesimulator-x86_64/EXExample/EXExampleModel.m.o",true,fileToEntry,frameworks,includes);
  assertFlags("Libraries/EXExample/EXExample/EXUser.mm","buck-out/bin/Libraries/EXExample/EXExample#compile-pic-EXExample_" + "EXUser.mm.o,iphonesimulator-x86_64/EXExample/EXUser.mm.o",true,fileToEntry,frameworks,includes);
  assertFlags("Libraries/EXExample/EXExample/Categories/NSString+Palindrome.m","buck-out/bin/Libraries/EXExample/EXExample#compile-pic-EXExample_" + "Categories_NSString_Palindrome.m.o,iphonesimulator-x86_64/" + "EXExample/Categories/NSString+Palindrome.m.o",true,fileToEntry,frameworks,includes);
}
