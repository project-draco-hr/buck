{
  Path compilationDatabase=workspace.buildAndReturnOutput("//Libraries/EXExample:EXExample#compilation-database,iphonesimulator-x86_64");
  assertEquals(Paths.get("buck-out/gen/Libraries/EXExample/" + "__EXExample#compilation-database,iphonesimulator-x86_64.json"),tmp.getRoot().relativize(compilationDatabase));
  Map<String,CxxCompilationDatabaseEntry> fileToEntry=CxxCompilationDatabaseUtils.parseCompilationDatabaseJsonFile(compilationDatabase);
  ImmutableSet<String> frameworks=ImmutableSet.of(Paths.get("/System/Library/Frameworks/Foundation.framework").getParent().toString());
  String pathToPrivateHeaders=String.format("buck-out/gen/Libraries/EXExample/EXExample#iphonesimulator-x86_64,%s.hmap",CxxDescriptionEnhancer.HEADER_SYMLINK_TREE_FLAVOR);
  String pathToPublicHeaders=String.format("buck-out/gen/Libraries/EXExample/EXExample#%s,iphonesimulator-x86_64.hmap",CxxDescriptionEnhancer.EXPORTED_HEADER_SYMLINK_TREE_FLAVOR);
  Iterable<String> includes=ImmutableList.of(pathToPrivateHeaders,pathToPublicHeaders,BuckConstant.BUCK_OUTPUT_DIRECTORY);
  assertFlags("Libraries/EXExample/EXExample/EXExampleModel.m","buck-out/gen/Libraries/EXExample/EXExample#compile-pic-" + sanitize("EXExample/EXExampleModel.m.o") + ",iphonesimulator-x86_64/"+ "EXExample/EXExampleModel.m.o",true,fileToEntry,frameworks,includes);
  assertFlags("Libraries/EXExample/EXExample/EXUser.mm","buck-out/gen/Libraries/EXExample/EXExample#compile-pic-" + sanitize("EXExample/EXUser.mm.o") + ",iphonesimulator-x86_64/EXExample/EXUser.mm.o",true,fileToEntry,frameworks,includes);
  assertFlags("Libraries/EXExample/EXExample/Categories/NSString+Palindrome.m","buck-out/gen/Libraries/EXExample/EXExample#compile-pic-" + sanitize("EXExample/Categories/NSString+Palindrome.m.o") + ",iphonesimulator-x86_64/"+ "EXExample/Categories/NSString+Palindrome.m.o",true,fileToEntry,frameworks,includes);
}
