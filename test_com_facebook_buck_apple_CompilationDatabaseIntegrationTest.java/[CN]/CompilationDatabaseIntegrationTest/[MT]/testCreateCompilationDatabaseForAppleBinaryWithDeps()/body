{
  BuildTarget target=BuildTargetFactory.newInstance("//Apps/Weather:Weather#iphonesimulator-x86_64,compilation-database");
  Path compilationDatabase=workspace.buildAndReturnOutput(target.getFullyQualifiedName());
  Map<String,CxxCompilationDatabaseEntry> fileToEntry=CxxCompilationDatabaseUtils.parseCompilationDatabaseJsonFile(compilationDatabase);
  ImmutableSet<String> frameworks=ImmutableSet.of(Paths.get("/System/Library/Frameworks/Foundation.framework").getParent().toString(),Paths.get("/System/Library/Frameworks/UIKit.framework").getParent().toString());
  String pathToPrivateHeaders=BuildTargets.getGenPath(target.withFlavors(ImmutableFlavor.of("iphonesimulator-x86_64"),CxxDescriptionEnhancer.HEADER_SYMLINK_TREE_FLAVOR),"%s.hmap").toString();
  String pathToPublicHeaders=BuildTargets.getGenPath(BuildTargetFactory.newInstance("//Libraries/EXExample:EXExample#iphonesimulator-x86_64," + CxxDescriptionEnhancer.EXPORTED_HEADER_SYMLINK_TREE_FLAVOR),"%s.hmap").toString();
  Iterable<String> includes=ImmutableList.of(pathToPrivateHeaders,pathToPublicHeaders,BuckConstant.BUCK_OUTPUT_DIRECTORY);
  assertFlags("Apps/Weather/Weather/EXViewController.m",BuildTargets.getGenPath(target.withFlavors(ImmutableFlavor.of("iphonesimulator-x86_64"),ImmutableFlavor.of("compile-" + sanitize("Weather/EXViewController.m.o"))),"%s").resolve("Weather/EXViewController.m.o").toString(),false,fileToEntry,frameworks,includes);
  assertFlags("Apps/Weather/Weather/main.m",BuildTargets.getGenPath(target.withFlavors(ImmutableFlavor.of("iphonesimulator-x86_64"),ImmutableFlavor.of("compile-" + sanitize("Weather/main.m.o"))),"%s").resolve("Weather/main.m.o").toString(),false,fileToEntry,frameworks,includes);
}
