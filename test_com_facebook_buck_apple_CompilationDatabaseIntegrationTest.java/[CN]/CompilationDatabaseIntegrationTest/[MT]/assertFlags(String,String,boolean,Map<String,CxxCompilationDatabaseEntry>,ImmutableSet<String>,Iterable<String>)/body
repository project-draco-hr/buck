{
  Path tmpRoot=tmp.getRoot().toRealPath();
  String key=tmpRoot.resolve(source).toString();
  CxxCompilationDatabaseEntry entry=fileToEntry.get(key);
  assertNotNull("There should be an entry for " + key + ".",entry);
  String clang=tmpRoot.resolve(XCODE_DEVELOPER_DIR).resolve("Toolchains/XcodeDefault.xctoolchain/usr/bin/clang").toString();
  String sdkRoot=tmpRoot.resolve(XCODE_DEVELOPER_DIR).resolve("Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk").toString();
  String language="objective-c";
  String languageStandard="-std=gnu11";
  if (source.endsWith(".mm")) {
    language="objective-c++";
    languageStandard="-std=c++11";
    clang+="++";
  }
  ImmutableList<String> commandArgs1=ImmutableList.of("'" + languageStandard + "'","-Wno-deprecated","-Wno-conversion");
  ImmutableList<String> commandArgs2=ImmutableList.of("-isysroot",sdkRoot,"-arch","x86_64","'-mios-simulator-version-min=8.0'");
  List<String> commandArgs=Lists.newArrayList();
  commandArgs.add(clang);
  if (isLibrary) {
    commandArgs.add("-fPIC");
    commandArgs.add("-fPIC");
  }
  commandArgs.addAll(commandArgs2);
  commandArgs.addAll(commandArgs1);
  commandArgs.addAll(commandArgs2);
  for (  String include : includes) {
    commandArgs.add("-I");
    commandArgs.add(include);
  }
  for (  String framework : additionalFrameworks) {
    commandArgs.add("-F");
    commandArgs.add(sdkRoot + framework);
  }
  commandArgs.add("-Xclang");
  commandArgs.add("-fdebug-compilation-dir");
  commandArgs.add("-Xclang");
  commandArgs.add("." + Strings.repeat("/",249));
  commandArgs.add("-x");
  commandArgs.add(language);
  commandArgs.add("-c");
  commandArgs.add("-MD");
  commandArgs.add("-MF");
  commandArgs.add(output + ".dep.tmp");
  commandArgs.add(source);
  commandArgs.add("-o");
  commandArgs.add(output);
  assertThat(ImmutableList.copyOf(entry.getCommand().split(" ")),equalTo(commandArgs));
}
