{
  builder.set("preprocessor",preprocessor).set("output",output.toString());
  ImmutableList<String> flags=this.flags;
  if (sanitizer.isPresent()) {
    flags=FluentIterable.from(flags).transform(sanitizer.get().sanitize(Optional.<Path>absent(),false)).toList();
  }
  builder.set("flags",flags);
  for (  Path path : ImmutableSortedSet.copyOf(includes.getNameToPathMap().keySet())) {
    SourcePath source=includes.getNameToPathMap().get(path);
    builder.setInput("include(" + path + ")",getResolver().getPath(source));
  }
  builder.set("frameworkRoots",FluentIterable.from(frameworkRoots).transform(Functions.toStringFunction()).toSortedSet(Ordering.natural()));
  return builder;
}
