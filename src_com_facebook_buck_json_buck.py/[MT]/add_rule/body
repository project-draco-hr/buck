def add_rule(rule, build_env):
    assert (build_env.type == BuildContextType.BUILD_FILE), 'Cannot use `{}()` at the top-level of an included file.'.format(rule['buck.type'])
    if ('name' not in rule):
        raise ValueError(("rules must contain the field 'name'.  Found %s." % rule))
    rule_name = rule['name']
    if (rule_name in build_env.rules):
        raise ValueError(('Duplicate rule definition found.  Found %s and %s' % (rule, build_env.rules[rule_name])))
    rule['buck.base_path'] = build_env.base_path
    if (rule_name in build_env.autodeps):
        if rule.get('autodeps', False):
            explicit_deps = rule.get('deps', [])
            autodeps = build_env.autodeps[rule_name]
            deps = set(explicit_deps)
            deps.update(autodeps)
            rule['deps'] = list(deps)
        else:
            pass
    build_env.rules[rule_name] = rule
