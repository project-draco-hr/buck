def __init__(self, project_root, watchman_watch_root, watchman_project_prefix, build_file_name, allow_empty_globs, ignore_buck_autodeps_files, watchman_client, watchman_error, watchman_glob_stat_results, enable_build_file_sandboxing, implicit_includes=None, extra_funcs=None, configs=None, env_vars=None, ignore_paths=None):
    if (implicit_includes is None):
        implicit_includes = []
    if (extra_funcs is None):
        extra_funcs = []
    if (configs is None):
        configs = {}
    if (env_vars is None):
        env_vars = {}
    if (ignore_paths is None):
        ignore_paths = []
    self._cache = {}
    self._build_env_stack = []
    self._sync_cookie_state = SyncCookieState()
    self._project_root = project_root
    self._watchman_watch_root = watchman_watch_root
    self._watchman_project_prefix = watchman_project_prefix
    self._build_file_name = build_file_name
    self._implicit_includes = implicit_includes
    self._allow_empty_globs = allow_empty_globs
    self._ignore_buck_autodeps_files = ignore_buck_autodeps_files
    self._enable_build_file_sandboxing = enable_build_file_sandboxing
    self._watchman_client = watchman_client
    self._watchman_error = watchman_error
    self._watchman_glob_stat_results = watchman_glob_stat_results
    self._configs = configs
    self._env_vars = env_vars
    self._ignore_paths = ignore_paths
    lazy_functions = {}
    for func in (BUILD_FUNCTIONS + extra_funcs):
        func_with_env = LazyBuildEnvPartial(func)
        lazy_functions[func.__name__] = func_with_env
    self._functions = lazy_functions
    self._safe_os_module = self._create_safe_os_module()
    self._custom_import = self._create_custom_import()
