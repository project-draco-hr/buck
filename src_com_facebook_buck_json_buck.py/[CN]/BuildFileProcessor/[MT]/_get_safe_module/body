def _get_safe_module(self, name):
    '\n        Returns a safe version of the module.\n        '
    assert (name in self._safe_modules_config), ('Safe version of module %s is not configured.' % name)
    if (name in self._safe_modules):
        return self._safe_modules[name]
    with self._allow_unsafe_import():
        mod = ORIGINAL_IMPORT(name, fromlist=[''])
    safe_mod = imp.new_module(name)
    self._install_whitelisted_parts(mod, safe_mod, self._safe_modules_config[name])
    self._safe_modules[name] = safe_mod
    return safe_mod
