def _merge_globals(self, mod, dst):
    "\n        Copy the global definitions from one globals dict to another.\n\n        Ignores special attributes and attributes starting with '_', which\n        typically denote module-level private attributes.\n        "
    hidden = set(['include_defs'])
    keys = getattr(mod, '__all__', mod.__dict__.keys())
    for key in keys:
        block_copying_module = ((not hasattr(mod, '__all__')) and isinstance(mod.__dict__[key], types.ModuleType))
        if ((not key.startswith('_')) and (key not in hidden) and (not block_copying_module)):
            dst[key] = mod.__dict__[key]
