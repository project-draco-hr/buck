def _include_defs(self, name, implicit_includes=[]):
    "\n        Pull the named include into the current caller's context.\n\n        This method is meant to be installed into the globals of any files or\n        includes that we process.\n        "
    build_env = self._build_env_stack[(-1)]
    path = self._get_include_path(name)
    (inner_env, mod) = self._process_include(path, implicit_includes=implicit_includes)
    frame = inspect.currentframe()
    while (frame.f_globals['__name__'] in (__name__, '_functools')):
        frame = frame.f_back
    self._merge_globals(mod, frame.f_globals)
    build_env.includes.add(path)
    build_env.includes.update(inner_env.includes)
    build_env.diagnostics.update(inner_env.diagnostics)
