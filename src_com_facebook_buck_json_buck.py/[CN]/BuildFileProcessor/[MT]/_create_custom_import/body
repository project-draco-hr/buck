def _create_custom_import(self):
    "\n        Returns customised '__import__' function.\n        "

    def _import(name, globals=None, locals=None, fromlist=(), level=(-1)):
        "\n            Custom '__import__' function.\n            Returns safe version of a module if configured in '_safe_modules_config'.\n            Returns standard module if the module is whitelisted.\n            Blocks importing other modules.\n            "
        if (not fromlist):
            name = name.split('.')[0]
        if ((name in self._import_whitelist) or (not self._called_from_project_file())):
            with self._allow_unsafe_import():
                return ORIGINAL_IMPORT(name, globals, locals, fromlist, level)
        if (name in self._safe_modules_config):
            return self._get_safe_module(name)
        raise ImportError((((('Importing module %s is forbidden. ' % name) + 'If you really need to import this module read about ') + 'allow_unsafe_import() function that is documented at ') + 'https://buckbuild.com/function/allow_unsafe_import.html'))
    return _import
