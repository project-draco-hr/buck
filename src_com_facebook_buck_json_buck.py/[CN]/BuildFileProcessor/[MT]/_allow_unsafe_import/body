@contextmanager
def _allow_unsafe_import(self, allow=True):
    "\n        Controls behavior of 'import' in a context.\n        Default value for 'allow' is True, which corresponds to default 'import' behavior, False\n        overrides that with 'custom_import()' if sandboxing is enabled.\n\n        :param allow: True if default 'import' behavior should be allowed in the context\n        "
    previous_import = __builtin__.__import__
    if (allow or (not self._enable_build_file_sandboxing)):
        __builtin__.__import__ = ORIGINAL_IMPORT
    else:
        __builtin__.__import__ = self._custom_import()
    try:
        yield
    finally:
        __builtin__.__import__ = previous_import
