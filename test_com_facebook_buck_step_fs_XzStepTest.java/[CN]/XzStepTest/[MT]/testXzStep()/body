{
  final Path sourceFile=TestDataHelper.getTestDataScenario(this,"xz_with_rm_and_check").resolve("xzstep.data");
  final File destinationFile=tmp.newFile("xzstep.data.xz");
  XzStep step=new XzStep(sourceFile,destinationFile.toPath(),1,true,XZ.CHECK_CRC32);
  ExecutionContext context=TestExecutionContext.newBuilder().setProjectFilesystem(new ProjectFilesystem(tmp.getRoot().toPath())).build();
  assertEquals(0,step.execute(context));
  ByteSource original=PathByteSource.asByteSource(sourceFile);
  ByteSource decompressed=new ByteSource(){
    @Override public InputStream openStream() throws IOException {
      return new XZInputStream(new FileInputStream(destinationFile));
    }
  }
;
  assertTrue("Decompressed file must be identical to original.",original.contentEquals(decompressed));
}
