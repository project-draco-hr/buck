{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"ocaml",tmp);
  workspace.setUp();
  BuildTarget target=BuildTargetFactory.newInstance("//calc:calc");
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  BuckBuildLog buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(target),buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(target.toString());
  workspace.resetBuildLogFile();
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(target),buildLog.getAllTargets());
  buildLog.assertTargetHadMatchingRuleKey(target.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents("calc/lexer.mll","The type token","the type token");
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(target),buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(target.toString());
  workspace.resetBuildLogFile();
  workspace.replaceFileContents("calc/parser.mly","the entry point","The entry point");
  workspace.runBuckCommand("build",target.toString()).assertSuccess();
  buildLog=workspace.getBuildLog();
  assertEquals(ImmutableSet.of(target),buildLog.getAllTargets());
  buildLog.assertTargetBuiltLocally(target.toString());
}
