{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  Path tmpPath=Files.createTempDirectory("tmp").toAbsolutePath().normalize();
  Path argsPath=Paths.get(tmpPath.toString(),"0.args");
  Path stdoutPath=Paths.get(tmpPath.toString(),"0.out");
  Path stderrPath=Paths.get(tmpPath.toString(),"0.err");
  String jobArgs="my job args";
  int exitCode=0;
  Optional<String> stdout=Optional.of("my stdout");
  Optional<String> stderr=Optional.of("my stderr");
  filesystem.writeContentsToPath(stdout.get(),stdoutPath);
  filesystem.writeContentsToPath(stderr.get(),stderrPath);
  WorkerProcess process=new WorkerProcess(new FakeProcessExecutor(),createDummyParams(),filesystem,tmpPath);
  process.setProtocol(new FakeWorkerProcessProtocol());
  WorkerJobResult expectedResult=WorkerJobResult.of(exitCode,stdout,stderr);
  assertThat(process.submitAndWaitForJob(jobArgs),Matchers.equalTo(expectedResult));
  assertThat(filesystem.readFileIfItExists(argsPath).get(),Matchers.equalTo(jobArgs));
}
