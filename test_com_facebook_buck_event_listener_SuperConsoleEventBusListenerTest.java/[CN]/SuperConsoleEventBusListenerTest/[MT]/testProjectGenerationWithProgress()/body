{
  Path storagePath=getStorageForTest();
  Map<String,Object> storageContents=ImmutableSortedMap.<String,Object>naturalOrder().put("project arg1 arg2",ImmutableSortedMap.<String,Number>naturalOrder().put(ProgressEstimator.EXPECTED_NUMBER_OF_GENERATED_PROJECT_FILES,10).build()).build();
  String contents=new Gson().toJson(storageContents);
  Files.createDirectories(storagePath.getParent());
  Files.write(storagePath,contents.getBytes());
  Clock fakeClock=new IncrementingFakeClock(TimeUnit.SECONDS.toNanos(1));
  BuckEventBus eventBus=BuckEventBusFactory.newInstance(fakeClock);
  EventBus rawEventBus=BuckEventBusFactory.getEventBusFor(eventBus);
  TestConsole console=new TestConsole();
  SuperConsoleEventBusListener listener=new SuperConsoleEventBusListener(console,fakeClock,silentSummaryVerbosity,new DefaultExecutionEnvironment(ImmutableMap.copyOf(System.getenv()),System.getProperties()),Optional.<WebServer>absent());
  ProgressEstimator e=new ProgressEstimator(getStorageForTest().getParent().getParent(),eventBus);
  listener.setProgressEstimator(e);
  eventBus.register(listener);
  rawEventBus.post(CommandEvent.started("project",ImmutableList.<String>of("arg1","arg2"),false));
  rawEventBus.post(configureTestEventAtTime(ProjectGenerationEvent.started(),0L,TimeUnit.MILLISECONDS,0L));
  validateConsole(console,listener,0L,ImmutableList.of(formatConsoleTimes("[+] GENERATING PROJECT...%s",0.0)));
  rawEventBus.post(configureTestEventAtTime(ProjectGenerationEvent.processed(),0L,TimeUnit.MILLISECONDS,0L));
  rawEventBus.post(configureTestEventAtTime(ProjectGenerationEvent.processed(),100L,TimeUnit.MILLISECONDS,0L));
  validateConsole(console,listener,100L,ImmutableList.of(formatConsoleTimes("[+] GENERATING PROJECT...%s",0.1) + " [20%]"));
  rawEventBus.post(configureTestEventAtTime(new ProjectGenerationEvent.Finished(),200L,TimeUnit.MILLISECONDS,0L));
  validateConsole(console,listener,0L,ImmutableList.of(formatConsoleTimes("[-] GENERATING PROJECT...FINISHED %s",0.2) + " [100%]"));
}
