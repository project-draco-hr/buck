{
  FakeOutputStream outputStream1=new FakeOutputStream();
  FakeOutputStream outputStream2=new FakeOutputStream();
  FakeOutputStream outputStream3=new FakeOutputStream();
  ConcurrentHashMap<Long,String> threadIdToCommandId=new ConcurrentHashMap<>();
  ConcurrentHashMap<String,OutputStreamWriter> commandIdToConsoleWriter=new ConcurrentHashMap<>();
  ConcurrentHashMap<String,Level> commandIdToLevel=new ConcurrentHashMap<>();
  ConsoleHandler handler=new ConsoleHandler(ConsoleHandler.utf8OutputStreamWriter(outputStream1),new MessageOnlyFormatter(),Level.INFO,threadIdToCommandId,commandIdToConsoleWriter,commandIdToLevel);
  threadIdToCommandId.put(49152L,"commandIdForOutputStream2");
  threadIdToCommandId.put(64738L,"commandIdForOutputStream3");
  handler.registerOutputStream("commandIdForOutputStream2",outputStream2);
  handler.registerOutputStream("commandIdForOutputStream3",outputStream3);
  publishAndFlush(handler,newLogRecordWithThreadId(Level.FINE,"Shh..",49152));
  assertThat(outputStream1.toString("UTF-8"),equalTo(""));
  assertThat(outputStream2.toString("UTF-8"),equalTo(""));
  assertThat(outputStream3.toString("UTF-8"),equalTo(""));
  publishAndFlush(handler,newLogRecordWithThreadId(Level.FINE,"Shh..",64738));
  assertThat(outputStream1.toString("UTF-8"),equalTo(""));
  assertThat(outputStream2.toString("UTF-8"),equalTo(""));
  assertThat(outputStream3.toString("UTF-8"),equalTo(""));
  commandIdToLevel.put("commandIdForOutputStream3",Level.ALL);
  publishAndFlush(handler,newLogRecordWithThreadId(Level.FINE,"Stream 3",64738));
  assertThat(outputStream1.toString("UTF-8"),equalTo(""));
  assertThat(outputStream2.toString("UTF-8"),equalTo(""));
  assertThat(outputStream3.toString("UTF-8"),equalTo("Stream 3"));
}
