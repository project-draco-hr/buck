{
  PartialGraph partialGraph;
  try {
    partialGraph=createPartialGraph(RawRulePredicates.matchBuildRuleType(ProjectConfigDescription.TYPE),options);
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    throw new HumanReadableException(e);
  }
  ExecutionContext executionContext=createExecutionContext(options,partialGraph.getDependencyGraph());
  Project project=new Project(partialGraph,options.getBasePathToAliasMap(),options.getJavaPackageFinder(),executionContext,getProjectFilesystem(),options.getPathToDefaultAndroidManifest(),options.getPathToPostProcessScript(),options.getBuckConfig().getPythonInterpreter());
  File tempDir=Files.createTempDir();
  File tempFile=new File(tempDir,"project.json");
  int exitCode;
  try {
    exitCode=createIntellijProject(project,tempFile,executionContext.getProcessExecutor(),!options.getArgumentsFormattedAsBuildTargets().isEmpty(),console.getStdOut(),console.getStdErr());
    if (exitCode != 0) {
      return exitCode;
    }
    List<String> additionalInitialTargets=ImmutableList.of();
    if (options.shouldProcessAnnotations()) {
      try {
        additionalInitialTargets=getAnnotationProcessingTargets(options);
      }
 catch (      BuildTargetException|BuildFileParseException e) {
        throw new HumanReadableException(e);
      }
    }
    if (options.hasInitialTargets() || !additionalInitialTargets.isEmpty()) {
      BuildCommand buildCommand=new BuildCommand(getCommandRunnerParams());
      BuildCommandOptions buildOptions=options.createBuildCommandOptionsWithInitialTargets(additionalInitialTargets);
      exitCode=runBuildCommand(buildCommand,buildOptions);
      if (exitCode != 0) {
        return exitCode;
      }
    }
  }
  finally {
    if (console.getVerbosity().shouldPrintOutput()) {
      getStdErr().printf("project.json was written to %s",tempFile.getAbsolutePath());
    }
 else {
      tempFile.delete();
      tempDir.delete();
    }
  }
  return 0;
}
