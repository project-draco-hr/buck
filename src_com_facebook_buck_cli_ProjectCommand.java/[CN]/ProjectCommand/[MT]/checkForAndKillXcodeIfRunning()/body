{
  Optional<ProcessManager> processManager=getProcessManager();
  if (processManager.isPresent() && processManager.get().isProcessRunning(XCODE_PROCESS_NAME)) {
    if (canPrompt() && prompt("Xcode is currently running. Buck might need to modify files Xcode currently has " + "open, which can cause it to become unstable.\n\nKill Xcode and continue?")) {
      processManager.get().killProcess(XCODE_PROCESS_NAME);
    }
 else {
      console.getStdOut().println(console.getAnsi().asWarningText("Xcode is still running. Generated projects might be lost or corrupted if Xcode " + "currently has them open."));
    }
  }
 else {
    LOG.warn("Could not check if Xcode is running (no process manager)");
  }
}
