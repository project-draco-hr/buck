{
  List<String> argumentsAsBuildTargets=options.getArgumentsFormattedAsBuildTargets();
  PartialGraph partialGraph;
  ImmutableSet<BuildTarget> targets;
  try {
    partialGraph=PartialGraph.createFullGraph(getProjectFilesystem(),options.getDefaultIncludes(),getParser(),getBuckEventBus());
    targets=ImmutableSet.copyOf(getBuildTargets(argumentsAsBuildTargets));
  }
 catch (  BuildTargetException|BuildFileParseException e) {
    throw new HumanReadableException(e);
  }
  ExecutionContext executionContext=createExecutionContext(options,partialGraph.getDependencyGraph());
  if (options.getCombinedProject() != null) {
    ProjectGenerator projectGenerator=new ProjectGenerator(partialGraph,targets,getProjectFilesystem(),executionContext,getProjectFilesystem().getPathForRelativePath(Paths.get("_gen")),"GeneratedProject",ProjectGenerator.COMBINED_PROJECT_OPTIONS);
    projectGenerator.createXcodeProjects();
  }
 else {
    SeparatedProjectGenerator projectGenerator=new SeparatedProjectGenerator(getProjectFilesystem(),partialGraph,executionContext,targets);
    projectGenerator.generateProjects();
  }
  return 0;
}
