{
  try (InputStream sdkSettingsPlist=Files.newInputStream(sdkDir.resolve("SDKSettings.plist"));BufferedInputStream bufferedSdkSettingsPlist=new BufferedInputStream(sdkSettingsPlist)){
    NSDictionary sdkSettings;
    try {
      sdkSettings=(NSDictionary)PropertyListParser.parse(bufferedSdkSettingsPlist);
    }
 catch (    PropertyListFormatException|ParseException|SAXException e) {
      LOG.error(e,"Malformatted SDKSettings.plist. Skipping SDK path %s.",sdkDir);
      return false;
    }
catch (    ParserConfigurationException e) {
      throw new IOException(e);
    }
    String name=sdkSettings.objectForKey("CanonicalName").toString();
    String version=sdkSettings.objectForKey("Version").toString();
    NSDictionary defaultProperties=(NSDictionary)sdkSettings.objectForKey("DefaultProperties");
    Optional<ImmutableList<String>> toolchains=appleConfig.getToolchainsOverrideForSDKName(name);
    boolean foundToolchain=false;
    if (!toolchains.isPresent()) {
      NSArray settingsToolchains=(NSArray)sdkSettings.objectForKey("Toolchains");
      if (settingsToolchains != null) {
        toolchains=Optional.of(FluentIterable.from(Arrays.asList(settingsToolchains.getArray())).transform(new Function<NSObject,String>(){
          @Override public String apply(          NSObject input){
            return input.toString();
          }
        }
).toList());
      }
    }
    if (toolchains.isPresent()) {
      for (      String toolchainId : toolchains.get()) {
        AppleToolchain toolchain=xcodeToolchains.get(toolchainId);
        if (toolchain != null) {
          foundToolchain=true;
          sdkBuilder.addToolchains(toolchain);
        }
 else {
          LOG.debug("Specified toolchain %s not found for SDK path %s",toolchainId,sdkDir);
        }
      }
    }
    if (!foundToolchain && defaultToolchain.isPresent()) {
      foundToolchain=true;
      sdkBuilder.addToolchains(defaultToolchain.get());
    }
    if (!foundToolchain) {
      LOG.warn("No toolchains found and no default toolchain. Skipping SDK path %s.",sdkDir);
      return false;
    }
 else {
      NSString platformName=(NSString)defaultProperties.objectForKey("PLATFORM_NAME");
      ApplePlatform applePlatform=ApplePlatform.of(platformName.toString());
      sdkBuilder.setName(name).setVersion(version).setApplePlatform(applePlatform);
      sdkBuilder.addAllArchitectures(applePlatform.getArchitectures());
      return true;
    }
  }
 catch (  FileNotFoundException e) {
    LOG.error(e,"No SDKSettings.plist found under SDK path %s",sdkDir);
    return false;
  }
}
