{
  CxxPreprocessorInput cxxPreprocessorInputFromDeps=CxxPreprocessables.getTransitiveCxxPreprocessorInput(FluentIterable.from(params.getDeps()).filter(Predicates.instanceOf(CxxPreprocessorDep.class)));
  return CxxPreprocessorInput.concat(ImmutableList.of(new CxxPreprocessorInput(ImmutableSet.of(headerSymlinkTree.getBuildTarget()),ImmutableList.<String>builder().addAll(config.getCppFlags()).addAll(preprocessorFlags).build(),ImmutableList.<String>builder().addAll(config.getCxxppFlags()).addAll(preprocessorFlags).build(),headers,ImmutableList.of(headerSymlinkTree.getRoot()),ImmutableList.<Path>of()),cxxPreprocessorInputFromDeps));
}
