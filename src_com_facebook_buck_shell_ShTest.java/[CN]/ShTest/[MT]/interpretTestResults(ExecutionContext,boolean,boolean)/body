{
  final ImmutableSet<String> contacts=getContacts();
  if (isDryRun) {
    return new Callable<TestResults>(){
      @Override public TestResults call() throws Exception {
        return new TestResults(getBuildTarget(),ImmutableList.<TestCaseSummary>of(),contacts,FluentIterable.from(labels).transform(Functions.toStringFunction()).toSet());
      }
    }
;
  }
 else {
    return new Callable<TestResults>(){
      @Override public TestResults call() throws Exception {
        Optional<String> resultsFileContents=getProjectFilesystem().readFileIfItExists(getPathToTestOutputResult());
        ObjectMapper mapper=new ObjectMapper();
        TestResultSummary testResultSummary=mapper.readValue(resultsFileContents.get(),TestResultSummary.class);
        TestCaseSummary testCaseSummary=new TestCaseSummary(getBuildTarget().getFullyQualifiedName(),ImmutableList.of(testResultSummary));
        return new TestResults(getBuildTarget(),ImmutableList.of(testCaseSummary),contacts,FluentIterable.from(labels).transform(Functions.toStringFunction()).toSet());
      }
    }
;
  }
}
