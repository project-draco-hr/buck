def main():
    args = parse_args()
    slice_size_mb = int(args.slice_size)
    context_events_count = int(args.context_events_count)
    trace_size_mb = (os.path.getsize(args.trace_file) / (1024 * 1024))
    slice_ratio = min(1, (slice_size_mb / float(trace_size_mb)))
    assert (slice_ratio > 0)
    with codecs.open(args.trace_file, u'r', u'utf-8') as trace:
        data = json.load(trace)
    events_per_trace = int((len(data) * slice_ratio))
    print(u'Total events in trace file:', len(data), u'Events per trace', events_per_trace)
    slice_index = 0
    start_index = 0
    while (start_index < len(data)):
        i = max(0, (start_index - context_events_count))
        j = ((start_index + events_per_trace) + context_events_count)
        dump_slice(args, slice_index, data[i:j])
        slice_index += 1
        start_index += events_per_trace
