{
  Path root=Files.createTempDirectory("root");
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem(root.toFile());
  Path temp=Paths.get("example_file");
  FileHashCache hashCache=new DefaultFileHashCache(filesystem);
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  DefaultRuleKeyBuilderFactory ruleKeyFactory=new DefaultRuleKeyBuilderFactory(0,hashCache,resolver);
  filesystem.writeContentsToPath("I like cheese",temp);
  ExportFileBuilder builder=ExportFileBuilder.newExportFileBuilder(BuildTargetFactory.newInstance("//some:file")).setSrc(new PathSourcePath(filesystem,temp));
  ExportFile rule=(ExportFile)builder.build(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()),filesystem);
  RuleKey original=ruleKeyFactory.build(rule);
  filesystem.writeContentsToPath("I really like cheese",temp);
  rule=(ExportFile)builder.build(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()),filesystem);
  hashCache=new DefaultFileHashCache(filesystem);
  resolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  ruleKeyFactory=new DefaultRuleKeyBuilderFactory(0,hashCache,resolver);
  RuleKey refreshed=ruleKeyFactory.build(rule);
  assertNotEquals(original,refreshed);
}
