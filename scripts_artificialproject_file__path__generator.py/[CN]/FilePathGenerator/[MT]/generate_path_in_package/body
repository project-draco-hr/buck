def generate_path_in_package(self, package_path, depth, component_generator, extension):
    if (depth == 0):
        return ''
    if self._file_samples_dirty:
        self._sizes_by_depth_in_package.clear()
        for dir_entries in self._file_samples.values():
            for (path, entries) in dir_entries.items():
                self._sizes_by_depth_in_package[len(path)].update([len(entries)])
        self._file_samples_dirty = False
    root = self._root
    components = self._split_path_into_components(package_path)
    for component in components:
        root = root[component.lower()]
    (path, parent_dir) = self._generate_path(package_path, root, depth, self._sizes_by_depth_in_package, component_generator, extension)
    parent_dir[os.path.basename(path).lower()] = None
    return path
