{
  return new Callable<TestResults>(){
    @Override public TestResults call() throws Exception {
      List<TestCaseSummary> testCaseSummaries;
      if (xctoolStdoutReader.isPresent()) {
        testCaseSummaries=xctoolStdoutReader.get().getTestCaseSummaries();
      }
 else       if (xctestOutputReader.isPresent()) {
        testCaseSummaries=xctestOutputReader.get().getTestCaseSummaries();
      }
 else       if (isUiTest()) {
        TestCaseSummary noTestsSummary=new TestCaseSummary("XCUITest runs not supported with buck test",Collections.<TestResultSummary>emptyList());
        testCaseSummaries=Collections.singletonList(noTestsSummary);
      }
 else {
        Path resolvedOutputPath=getProjectFilesystem().resolve(testOutputPath);
        try (BufferedReader reader=Files.newBufferedReader(resolvedOutputPath,StandardCharsets.UTF_8)){
          if (useXctest) {
            TestCaseSummariesBuildingXctestEventHandler xctestEventHandler=new TestCaseSummariesBuildingXctestEventHandler(NOOP_REPORTING_CALLBACK);
            XctestOutputParsing.streamOutput(reader,xctestEventHandler);
            testCaseSummaries=xctestEventHandler.getTestCaseSummaries();
          }
 else {
            TestCaseSummariesBuildingXctoolEventHandler xctoolEventHandler=new TestCaseSummariesBuildingXctoolEventHandler(NOOP_REPORTING_CALLBACK);
            XctoolOutputParsing.streamOutputFromReader(reader,xctoolEventHandler);
            testCaseSummaries=xctoolEventHandler.getTestCaseSummaries();
          }
        }
       }
      TestResults.Builder testResultsBuilder=TestResults.builder().setBuildTarget(getBuildTarget()).setTestCases(testCaseSummaries).setContacts(contacts).setLabels(FluentIterable.from(labels).transform(Functions.toStringFunction()).toSet());
      if (getProjectFilesystem().isDirectory(testLogsPath)) {
        for (        Path testLogPath : getProjectFilesystem().getDirectoryContents(testLogsPath)) {
          testResultsBuilder.addTestLogPaths(testLogPath);
        }
      }
      return testResultsBuilder.build();
    }
  }
;
}
