{
  final Hasher hasher=Hashing.sha1().newHasher();
  ClasspathTraverser traverser=new DefaultClasspathTraverser();
  try {
    traverser.traverse(new ClasspathTraversal(Paths.transformPathToFile(srcs)){
      @Override public void visit(      FileLike fileLike){
        try {
          hasher.putBytes(fileLike.fastHash().asBytes());
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 catch (  RuntimeException e) {
    Throwables.propagateIfInstanceOf(e.getCause(),IOException.class);
    throw Throwables.propagate(e);
  }
  return hasher.hash().toString();
}
