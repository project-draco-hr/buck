{
  final List<Path> logfiles=Lists.newArrayList();
  projectFilesystem.walkRelativeFileTree(BuckConstant.getLogPath(),new FileVisitor<Path>(){
    @Override public FileVisitResult preVisitDirectory(    Path dir,    BasicFileAttributes attrs) throws IOException {
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFile(    Path file,    BasicFileAttributes attrs) throws IOException {
      if (file.getFileName().toString().equals(BUCK_LOG_FILE)) {
        logfiles.add(file);
      }
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFileFailed(    Path file,    IOException exc) throws IOException {
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult postVisitDirectory(    Path dir,    IOException exc) throws IOException {
      return FileVisitResult.CONTINUE;
    }
  }
);
  return logfiles;
}
