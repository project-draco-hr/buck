{
  Optional<InvocationInfo.ParsedLog> parsedLine=extractFirstMatchingLine(logFile);
  BuildLogEntry.Builder builder=BuildLogEntry.builder();
  if (parsedLine.isPresent()) {
    builder.setBuildId(parsedLine.get().getBuildId());
    builder.setCommandArgs(parsedLine.get().getArgs());
  }
  Path ruleKeyLoggerFile=logFile.getParent().resolve(BuckConstant.RULE_KEY_LOGGER_FILE_NAME);
  if (projectFilesystem.isFile(ruleKeyLoggerFile)) {
    builder.setRuleKeyLoggerLogFile(ruleKeyLoggerFile);
  }
  Optional<Path> traceFile=FluentIterable.from(projectFilesystem.getFilesUnderPath(logFile.getParent())).filter(new Predicate<Path>(){
    @Override public boolean apply(    Path input){
      return input.toString().endsWith(".trace");
    }
  }
).first();
  return builder.setRelativePath(logFile).setSize(projectFilesystem.getFileSize(logFile)).setLastModifiedTime(new Date(projectFilesystem.getLastModifiedTime(logFile))).setTraceFile(traceFile).build();
}
