{
  populateCxxConstructorArg(resolver,output,arg,buildTarget,appleSdkPaths);
  Path headerPathPrefix=AppleDescriptions.getHeaderPathPrefix(arg,buildTarget);
  ImmutableMap<String,SourcePath> headerMap=convertAppleHeadersToPrivateCxxHeaders(resolver,headerPathPrefix,arg);
  output.headers=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofRight(headerMap));
  output.exportedPreprocessorFlags=arg.exportedPreprocessorFlags;
  output.exportedHeaders=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofRight(convertAppleHeadersToPublicCxxHeaders(resolver,headerPathPrefix,arg)));
  output.exportedPreprocessorFlags=Optional.of(ImmutableList.<String>of());
  output.exportedPlatformPreprocessorFlags=Optional.of(ImmutableList.<Pair<String,ImmutableList<String>>>of());
  output.exportedLangPreprocessorFlags=Optional.of(ImmutableMap.<CxxSource.Type,ImmutableList<String>>of());
  output.soname=Optional.absent();
  output.linkWhole=Optional.of(linkWhole);
}
