{
  return fluentIterable.filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      return ImmutableSet.of(AppleBinaryDescription.TYPE,AppleLibraryDescription.TYPE).contains(input.getType());
    }
  }
).transform(new Function<TargetNode<?>,TargetNode<AppleNativeTargetDescriptionArg>>(){
    @Override @SuppressWarnings("unchecked") public TargetNode<AppleNativeTargetDescriptionArg> apply(    TargetNode<?> input){
      return (TargetNode<AppleNativeTargetDescriptionArg>)input;
    }
  }
);
}
