{
  TargetNode<?> targetNode=Preconditions.checkNotNull(params.getTargetGraph().get(params.getBuildTarget()));
  ImmutableSet<AppleAssetCatalogDescription.Arg> assetCatalogArgs=AppleBuildRules.collectRecursiveAssetCatalogs(params.getTargetGraph(),ImmutableList.of(targetNode));
  ImmutableSortedSet.Builder<Path> mergeableAssetCatalogDirsBuilder=ImmutableSortedSet.naturalOrder();
  ImmutableSortedSet.Builder<Path> unmergeableAssetCatalogDirsBuilder=ImmutableSortedSet.naturalOrder();
  for (  AppleAssetCatalogDescription.Arg arg : assetCatalogArgs) {
    if (arg.getCopyToBundles()) {
      unmergeableAssetCatalogDirsBuilder.addAll(arg.dirs);
    }
 else {
      mergeableAssetCatalogDirsBuilder.addAll(arg.dirs);
    }
  }
  ImmutableSortedSet<Path> mergeableAssetCatalogDirs=mergeableAssetCatalogDirsBuilder.build();
  ImmutableSortedSet<Path> unmergeableAssetCatalogDirs=unmergeableAssetCatalogDirsBuilder.build();
  Optional<AppleAssetCatalog> mergedAssetCatalog=Optional.absent();
  if (!mergeableAssetCatalogDirs.isEmpty()) {
    BuildRuleParams assetCatalogParams=params.copyWithChanges(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleAssetCatalog.getFlavor(ActoolStep.BundlingMode.MERGE_BUNDLES,MERGED_ASSET_CATALOG_NAME)).build(),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()));
    mergedAssetCatalog=Optional.of(new AppleAssetCatalog(assetCatalogParams,sourcePathResolver,applePlatform.getName(),actool,mergeableAssetCatalogDirs,ActoolStep.BundlingMode.MERGE_BUNDLES,MERGED_ASSET_CATALOG_NAME));
  }
  ImmutableSet.Builder<AppleAssetCatalog> bundledAssetCatalogsBuilder=ImmutableSet.builder();
  for (  Path assetDir : unmergeableAssetCatalogDirs) {
    String bundleName=getCatalogNameFromPath(assetDir);
    BuildRuleParams assetCatalogParams=params.copyWithChanges(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleAssetCatalog.getFlavor(ActoolStep.BundlingMode.SEPARATE_BUNDLES,bundleName)).build(),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()));
    bundledAssetCatalogsBuilder.add(new AppleAssetCatalog(assetCatalogParams,sourcePathResolver,applePlatform.getName(),actool,ImmutableSortedSet.of(assetDir),ActoolStep.BundlingMode.SEPARATE_BUNDLES,bundleName));
  }
  ImmutableSet<AppleAssetCatalog> bundledAssetCatalogs=bundledAssetCatalogsBuilder.build();
  return CollectedAssetCatalogs.of(mergedAssetCatalog,bundledAssetCatalogs);
}
