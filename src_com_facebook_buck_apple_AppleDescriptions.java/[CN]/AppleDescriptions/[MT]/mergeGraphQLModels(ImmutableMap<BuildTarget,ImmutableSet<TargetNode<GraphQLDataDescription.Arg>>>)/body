{
  ImmutableMap.Builder<BuildTarget,TargetNode<GraphQLDataDescription.Arg>> modelsBuilder=ImmutableMap.builder();
  Map<Set<TargetNode<GraphQLDataDescription.Arg>>,TargetNode<GraphQLDataDescription.Arg>> mergedNodes=new HashMap<>();
  for (  Map.Entry<BuildTarget,ImmutableSet<TargetNode<GraphQLDataDescription.Arg>>> entry : targetsToTransitiveModelDependencies.entrySet()) {
    TargetNode<GraphQLDataDescription.Arg> mergedNode=mergedNodes.get(entry.getValue());
    if (mergedNode != null) {
      modelsBuilder.put(entry.getKey(),mergedNode);
      continue;
    }
    mergedNode=mergeGraphQLModels(entry.getValue());
    mergedNodes.put(entry.getValue(),mergedNode);
    modelsBuilder.put(entry.getKey(),mergedNode);
  }
  return modelsBuilder.build();
}
