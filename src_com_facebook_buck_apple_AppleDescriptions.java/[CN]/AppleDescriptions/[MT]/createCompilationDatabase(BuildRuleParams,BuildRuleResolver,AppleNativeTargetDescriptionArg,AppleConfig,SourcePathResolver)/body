{
  CompilationDatabaseTraversal traversal=new CompilationDatabaseTraversal(params.getTargetGraph(),buildRuleResolver);
  Iterable<TargetNode<AppleNativeTargetDescriptionArg>> startNodes=filterAppleNativeTargetNodes(FluentIterable.from(params.getDeclaredDeps()).transform(HasBuildTarget.TO_TARGET).transform(params.getTargetGraph().get()).append(params.getTargetGraph().get(params.getBuildTarget())));
  try {
    traversal.traverse(startNodes);
  }
 catch (  CycleException|IOException|InterruptedException e) {
    throw new RuntimeException(e);
  }
  BuildRuleParams compilationDatabaseParams=params.copyWithDeps(Suppliers.ofInstance(traversal.deps.build()),Suppliers.ofInstance(params.getExtraDeps()));
  Path headerPathPrefix=AppleDescriptions.getHeaderPathPrefix(args,params.getBuildTarget());
  return new CompilationDatabase(compilationDatabaseParams,pathResolver,appleConfig,ImmutableSortedSet.copyOf(args.srcs.get()),ImmutableSortedSet.copyOf(convertAppleHeadersToPublicCxxHeaders(pathResolver,headerPathPrefix,args).values()),ImmutableSortedSet.copyOf(convertAppleHeadersToPrivateCxxHeaders(pathResolver,headerPathPrefix,args).values()),args.frameworks.get(),traversal.includePaths.build(),args.prefixHeader);
}
