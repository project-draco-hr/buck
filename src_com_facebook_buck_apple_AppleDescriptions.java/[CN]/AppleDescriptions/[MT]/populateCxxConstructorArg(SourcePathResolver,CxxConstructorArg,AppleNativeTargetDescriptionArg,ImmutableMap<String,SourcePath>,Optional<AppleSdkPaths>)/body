{
  output.srcs=Optional.of(Either.<ImmutableList<SourceWithFlags>,ImmutableMap<String,SourceWithFlags>>ofLeft(arg.srcs.get()));
  output.headers=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofRight(headerMap));
  output.prefixHeaders=Optional.of(ImmutableList.copyOf(arg.prefixHeader.asSet()));
  output.compilerFlags=arg.compilerFlags;
  output.linkerFlags=arg.frameworks.transform(frameworksToLinkerFlagsFunction(resolver));
  output.platformLinkerFlags=Optional.of(ImmutableList.<Pair<String,ImmutableList<String>>>of());
  output.preprocessorFlags=arg.preprocessorFlags;
  output.langPreprocessorFlags=Optional.of(ImmutableMap.<CxxSource.Type,ImmutableList<String>>of());
  if (appleSdkPaths.isPresent()) {
    output.frameworkSearchPaths=arg.frameworks.transform(frameworksToSearchPathsFunction(resolver,appleSdkPaths.get()));
  }
 else {
    output.frameworkSearchPaths=Optional.of(ImmutableList.<Path>of());
  }
  output.lexSrcs=Optional.of(ImmutableList.<SourcePath>of());
  output.yaccSrcs=Optional.of(ImmutableList.<SourcePath>of());
  output.deps=arg.deps;
  output.headerNamespace=Optional.of("");
}
