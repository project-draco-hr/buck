{
  TargetNode<?> targetNode=Preconditions.checkNotNull(targetGraph.get(params.getBuildTarget()));
  ImmutableSet<AppleAssetCatalogDescription.Arg> assetCatalogArgs=AppleBuildRules.collectRecursiveAssetCatalogs(targetGraph,ImmutableList.of(targetNode));
  ImmutableSortedSet.Builder<SourcePath> assetCatalogDirsBuilder=ImmutableSortedSet.naturalOrder();
  for (  AppleAssetCatalogDescription.Arg arg : assetCatalogArgs) {
    assetCatalogDirsBuilder.addAll(arg.dirs);
  }
  ImmutableSortedSet<SourcePath> assetCatalogDirs=assetCatalogDirsBuilder.build();
  if (assetCatalogDirs.isEmpty()) {
    return Optional.absent();
  }
  BuildRuleParams assetCatalogParams=params.copyWithChanges(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleAssetCatalog.FLAVOR).build(),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of()));
  return Optional.of(new AppleAssetCatalog(assetCatalogParams,sourcePathResolver,applePlatform.getName(),actool,assetCatalogDirs,MERGED_ASSET_CATALOG_NAME));
}
