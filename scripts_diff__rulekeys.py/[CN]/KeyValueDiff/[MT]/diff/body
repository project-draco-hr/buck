def diff(self):
    if (self._left == self._right):
        return [u'No changes']
    if (sorted(self._left) == sorted(self._right)):
        return [KeyValueDiff.ORDER_ONLY.format(left=u', '.join(self._left), right=u', '.join(self._right))]
    left_lower_index = dict([(v.lower(), v) for v in self._left])
    right_lower_index = dict([(v.lower(), v) for v in self._right])
    if (set(left_lower_index.keys()) == set(right_lower_index.keys())):
        differences = []
        for k in sorted(left_lower_index.keys()):
            if (left_lower_index[k] != right_lower_index[k]):
                differences.append((self._left_format % left_lower_index[k]))
                differences.append((self._right_format % right_lower_index[k]))
        return ([KeyValueDiff.ORDER_AND_CASE_ONLY] + differences)
    left_set = set(self._left)
    right_set = set(self._right)
    left_only = left_set.difference(right_set)
    right_only = right_set.difference(left_set)
    left_common = filter((lambda i: (i not in left_only)), self._left)
    right_common = filter((lambda i: (i not in right_only)), self._right)
    left_not_in_order = []
    right_not_in_order = []
    for (l, r) in map(None, left_common, right_common):
        if (l == r):
            continue
        left_not_in_order.append(l)
        right_not_in_order.append(r)
    result = [(self._left_format % v) for v in sorted(left_only)]
    result.extend([(self._right_format % v) for v in sorted(right_only)])
    if (len(left_not_in_order) > 0):
        result.append(KeyValueDiff.ORDER_ONLY_REMAINING.format(left=u', '.join(left_not_in_order), right=u', '.join(right_not_in_order)))
    return result
