{
  Step step=new Step(){
    @Override public int execute(    ExecutionContext executionContext){
      for (      SourcePath sourcePath : srcs) {
        Path src=sourcePath.resolve(buildContext);
        File file=executionContext.getProjectFilesystem().getFileForRelativePath(src);
        try {
          ParcelableClass parcelableClass=Parser.parse(file);
          String generatedJava=new Generator(parcelableClass).generate();
          File outputPath=getOutputPathForParcelableClass(parcelableClass).toFile();
          Files.createParentDirs(outputPath);
          Files.write(generatedJava,outputPath,Charsets.UTF_8);
        }
 catch (        IOException e) {
          executionContext.logError(e,"Error creating parcelable from file: %s",src);
          return 1;
        }
      }
      return 0;
    }
    @Override public String getShortName(){
      return "gen_parcelable";
    }
    @Override public String getDescription(    ExecutionContext context){
      return "gen_parcelable";
    }
  }
;
  return ImmutableList.of(step);
}
