{
  boolean needsDeadCodeRemover=true;
  if (steps.contains(OptionalStep.MOVE_PARAM_COMBINER)) {
    MoveParamCombiner.process(ssaMeth);
  }
  if (steps.contains(OptionalStep.SCCP)) {
    SCCP.process(ssaMeth);
    DeadCodeRemover.process(ssaMeth);
    needsDeadCodeRemover=false;
  }
  if (steps.contains(OptionalStep.LITERAL_UPGRADE)) {
    LiteralOpUpgrader.process(ssaMeth);
    DeadCodeRemover.process(ssaMeth);
    needsDeadCodeRemover=false;
  }
  steps.remove(OptionalStep.ESCAPE_ANALYSIS);
  if (steps.contains(OptionalStep.ESCAPE_ANALYSIS)) {
    EscapeAnalysis.process(ssaMeth);
    DeadCodeRemover.process(ssaMeth);
    needsDeadCodeRemover=false;
  }
  if (steps.contains(OptionalStep.CONST_COLLECTOR)) {
    ConstCollector.process(ssaMeth);
    DeadCodeRemover.process(ssaMeth);
    needsDeadCodeRemover=false;
  }
  if (needsDeadCodeRemover) {
    DeadCodeRemover.process(ssaMeth);
  }
  PhiTypeResolver.process(ssaMeth);
}
