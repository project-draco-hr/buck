{
  Set<T> argumentValue=args.get(0).getExpression().eval(env);
  int depthBound=args.size() > 1 ? args.get(1).getInteger() : Integer.MAX_VALUE;
  Set<T> visited=new LinkedHashSet<>();
  Collection<T> current=argumentValue;
  for (int i=0; i <= depthBound; i++) {
    List<T> next=new ArrayList<>();
    Iterable<T> currentInUniverse=Iterables.filter(current,universe);
    next.addAll(env.getReverseDeps(Iterables.filter(currentInUniverse,Predicates.not(Predicates.in(visited)))));
    Iterables.addAll(visited,currentInUniverse);
    if (next.isEmpty()) {
      break;
    }
    current=next;
  }
  return visited;
}
