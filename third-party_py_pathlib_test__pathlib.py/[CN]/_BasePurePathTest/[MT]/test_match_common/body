def test_match_common(self):
    P = self.cls
    self.assertRaises(ValueError, P('a').match, '')
    self.assertRaises(ValueError, P('a').match, '.')
    self.assertTrue(P('b.py').match('b.py'))
    self.assertTrue(P('a/b.py').match('b.py'))
    self.assertTrue(P('/a/b.py').match('b.py'))
    self.assertFalse(P('a.py').match('b.py'))
    self.assertFalse(P('b/py').match('b.py'))
    self.assertFalse(P('/a.py').match('b.py'))
    self.assertFalse(P('b.py/c').match('b.py'))
    self.assertTrue(P('b.py').match('*.py'))
    self.assertTrue(P('a/b.py').match('*.py'))
    self.assertTrue(P('/a/b.py').match('*.py'))
    self.assertFalse(P('b.pyc').match('*.py'))
    self.assertFalse(P('b./py').match('*.py'))
    self.assertFalse(P('b.py/c').match('*.py'))
    self.assertTrue(P('ab/c.py').match('a*/*.py'))
    self.assertTrue(P('/d/ab/c.py').match('a*/*.py'))
    self.assertFalse(P('a.py').match('a*/*.py'))
    self.assertFalse(P('/dab/c.py').match('a*/*.py'))
    self.assertFalse(P('ab/c.py/d').match('a*/*.py'))
    self.assertTrue(P('/b.py').match('/*.py'))
    self.assertFalse(P('b.py').match('/*.py'))
    self.assertFalse(P('a/b.py').match('/*.py'))
    self.assertFalse(P('/a/b.py').match('/*.py'))
    self.assertTrue(P('/a/b.py').match('/a/*.py'))
    self.assertFalse(P('/ab.py').match('/a/*.py'))
    self.assertFalse(P('/a/b/c.py').match('/a/*.py'))
    self.assertTrue(P('/a.py').match('**/*.py'))
    self.assertTrue(P('/a/b.py').match('**'))
    self.assertTrue(P('/a/b.py').match('**/*'))
    self.assertTrue(P('/a/b.py').match('**/*.py'))
    self.assertTrue(P('/a/b/c.py').match('**/*.py'))
    self.assertTrue(P('/a/b/c/d.py').match('**/*.py'))
    self.assertFalse(P('/a/b/c/d.spam').match('**/*.py'))
    self.assertTrue(P('a.py').match('**/*.py'))
    self.assertTrue(P('a/b.py').match('**'))
    self.assertTrue(P('a/b.py').match('**/*'))
    self.assertTrue(P('a/b.py').match('**/*.py'))
    self.assertTrue(P('a/b/c.py').match('**/*py'))
    self.assertTrue(P('a/b/c/d.py').match('**/*py'))
    self.assertFalse(P('a/b/c/d.spam').match('**/*.py'))
    self.assertTrue(P('/a/b.py').match('/a/**'))
    self.assertTrue(P('/a/b.py').match('/a/**/*'))
    self.assertTrue(P('/a/b.py').match('/a/**/*.py'))
    self.assertTrue(P('/a/b/c.py').match('/a/**/*py'))
    self.assertTrue(P('/a/b/c/d.py').match('/a/**/*py'))
    self.assertTrue(P('/a/b/c/b/c').match('/a/b/**'))
    self.assertFalse(P('/a/spam/c/b/c').match('/a/b/**'))
    self.assertTrue(P('a/b.py').match('a/**'))
    self.assertTrue(P('a/b.py').match('a/**/*'))
    self.assertTrue(P('a/b.py').match('a/**/*.py'))
    self.assertTrue(P('a/b/c.py').match('a/**/*py'))
    self.assertTrue(P('a/b/c/d.py').match('a/**/*py'))
    self.assertFalse(P('a/b/c/d.spam').match('a/**/*py'))
    self.assertFalse(P('a/b/c/d.py').match('e/**'))
    self.assertTrue(P('a/b/c/b/c').match('a/b/**'))
    self.assertFalse(P('a/spam/c/b/c').match('a/b/**'))
    self.assertTrue(P('/c/a/c/a/b').match('**/a/b'))
    self.assertTrue(P('c/a/c/a/b').match('**/a/b'))
    self.assertFalse(P('c/a/c/spam/b').match('**/a/b'))
    self.assertTrue(P('a/b/c/food/e.py').match('**/b/*/foo*/*.py'))
    self.assertTrue(P('a/b/c/d.py').match('**/b/**/*.py'))
    self.assertTrue(P('foo').match('**/*'))
    self.assertTrue(P('foo').match('**/**'))
    self.assertTrue(P('foo').match('**/**/**'))
