def test_relative_to_common(self):
    P = self.cls
    p = P('a/b')
    self.assertRaises(TypeError, p.relative_to)
    if (sys.version_info > (3,)):
        self.assertRaises(TypeError, p.relative_to, 'a')
    self.assertEqual(p.relative_to(P()), P('a/b'))
    self.assertEqual(p.relative_to(''), P('a/b'))
    self.assertEqual(p.relative_to(P('a')), P('b'))
    self.assertEqual(p.relative_to('a'), P('b'))
    self.assertEqual(p.relative_to('a/'), P('b'))
    self.assertEqual(p.relative_to(P('a/b')), P())
    self.assertEqual(p.relative_to('a/b'), P())
    self.assertEqual(p.relative_to('a', 'b'), P())
    self.assertRaises(ValueError, p.relative_to, P('c'))
    self.assertRaises(ValueError, p.relative_to, P('a/b/c'))
    self.assertRaises(ValueError, p.relative_to, P('a/c'))
    self.assertRaises(ValueError, p.relative_to, P('/a'))
    p = P('/a/b')
    self.assertEqual(p.relative_to(P('/')), P('a/b'))
    self.assertEqual(p.relative_to('/'), P('a/b'))
    self.assertEqual(p.relative_to(P('/a')), P('b'))
    self.assertEqual(p.relative_to('/a'), P('b'))
    self.assertEqual(p.relative_to('/a/'), P('b'))
    self.assertEqual(p.relative_to(P('/a/b')), P())
    self.assertEqual(p.relative_to('/a/b'), P())
    self.assertRaises(ValueError, p.relative_to, P('/c'))
    self.assertRaises(ValueError, p.relative_to, P('/a/b/c'))
    self.assertRaises(ValueError, p.relative_to, P('/a/c'))
    self.assertRaises(ValueError, p.relative_to, P())
    self.assertRaises(ValueError, p.relative_to, '')
    self.assertRaises(ValueError, p.relative_to, P('a'))
