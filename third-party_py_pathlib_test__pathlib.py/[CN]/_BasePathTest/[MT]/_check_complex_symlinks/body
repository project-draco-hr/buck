def _check_complex_symlinks(self, link0_target):
    P = self.cls(BASE)
    self.dirlink(os.path.join('link0', 'link0'), join('link1'))
    self.dirlink(os.path.join('link1', 'link1'), join('link2'))
    self.dirlink(os.path.join('link2', 'link2'), join('link3'))
    self.dirlink(link0_target, join('link0'))
    p = (P / 'link0').resolve()
    self.assertEqual(p, P)
    self.assertEqual(str(p), BASE)
    p = (P / 'link1').resolve()
    self.assertEqual(p, P)
    self.assertEqual(str(p), BASE)
    p = (P / 'link2').resolve()
    self.assertEqual(p, P)
    self.assertEqual(str(p), BASE)
    p = (P / 'link3').resolve()
    self.assertEqual(p, P)
    self.assertEqual(str(p), BASE)
    old_path = os.getcwd()
    os.chdir(BASE)
    try:
        p = self.cls('link0').resolve()
        self.assertEqual(p, P)
        self.assertEqual(str(p), BASE)
        p = self.cls('link1').resolve()
        self.assertEqual(p, P)
        self.assertEqual(str(p), BASE)
        p = self.cls('link2').resolve()
        self.assertEqual(p, P)
        self.assertEqual(str(p), BASE)
        p = self.cls('link3').resolve()
        self.assertEqual(p, P)
        self.assertEqual(str(p), BASE)
    finally:
        os.chdir(old_path)
