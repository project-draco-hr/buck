def test_relative_to(self):
    P = self.cls
    p = P('C:Foo/Bar')
    self.assertEqual(p.relative_to(P('c:')), P('Foo/Bar'))
    self.assertEqual(p.relative_to('c:'), P('Foo/Bar'))
    self.assertEqual(p.relative_to(P('c:foO')), P('Bar'))
    self.assertEqual(p.relative_to('c:foO'), P('Bar'))
    self.assertEqual(p.relative_to('c:foO/'), P('Bar'))
    self.assertEqual(p.relative_to(P('c:foO/baR')), P())
    self.assertEqual(p.relative_to('c:foO/baR'), P())
    self.assertRaises(ValueError, p.relative_to, P())
    self.assertRaises(ValueError, p.relative_to, '')
    self.assertRaises(ValueError, p.relative_to, P('d:'))
    self.assertRaises(ValueError, p.relative_to, P('/'))
    self.assertRaises(ValueError, p.relative_to, P('Foo'))
    self.assertRaises(ValueError, p.relative_to, P('/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('C:/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('C:Foo/Bar/Baz'))
    self.assertRaises(ValueError, p.relative_to, P('C:Foo/Baz'))
    p = P('C:/Foo/Bar')
    self.assertEqual(p.relative_to(P('c:')), P('/Foo/Bar'))
    self.assertEqual(p.relative_to('c:'), P('/Foo/Bar'))
    self.assertEqual(str(p.relative_to(P('c:'))), '\\Foo\\Bar')
    self.assertEqual(str(p.relative_to('c:')), '\\Foo\\Bar')
    self.assertEqual(p.relative_to(P('c:/')), P('Foo/Bar'))
    self.assertEqual(p.relative_to('c:/'), P('Foo/Bar'))
    self.assertEqual(p.relative_to(P('c:/foO')), P('Bar'))
    self.assertEqual(p.relative_to('c:/foO'), P('Bar'))
    self.assertEqual(p.relative_to('c:/foO/'), P('Bar'))
    self.assertEqual(p.relative_to(P('c:/foO/baR')), P())
    self.assertEqual(p.relative_to('c:/foO/baR'), P())
    self.assertRaises(ValueError, p.relative_to, P('C:/Baz'))
    self.assertRaises(ValueError, p.relative_to, P('C:/Foo/Bar/Baz'))
    self.assertRaises(ValueError, p.relative_to, P('C:/Foo/Baz'))
    self.assertRaises(ValueError, p.relative_to, P('C:Foo'))
    self.assertRaises(ValueError, p.relative_to, P('d:'))
    self.assertRaises(ValueError, p.relative_to, P('d:/'))
    self.assertRaises(ValueError, p.relative_to, P('/'))
    self.assertRaises(ValueError, p.relative_to, P('/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('//C/Foo'))
    p = P('//Server/Share/Foo/Bar')
    self.assertEqual(p.relative_to(P('//sErver/sHare')), P('Foo/Bar'))
    self.assertEqual(p.relative_to('//sErver/sHare'), P('Foo/Bar'))
    self.assertEqual(p.relative_to('//sErver/sHare/'), P('Foo/Bar'))
    self.assertEqual(p.relative_to(P('//sErver/sHare/Foo')), P('Bar'))
    self.assertEqual(p.relative_to('//sErver/sHare/Foo'), P('Bar'))
    self.assertEqual(p.relative_to('//sErver/sHare/Foo/'), P('Bar'))
    self.assertEqual(p.relative_to(P('//sErver/sHare/Foo/Bar')), P())
    self.assertEqual(p.relative_to('//sErver/sHare/Foo/Bar'), P())
    self.assertRaises(ValueError, p.relative_to, P('/Server/Share/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('c:/Server/Share/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('//z/Share/Foo'))
    self.assertRaises(ValueError, p.relative_to, P('//Server/z/Foo'))
