import collections
import io
import os
import errno
import pathlib
import pickle
import shutil
import socket
import stat
import sys
import tempfile
import unittest
from contextlib import contextmanager
if (sys.version_info < (2, 7)):
    try:
        import unittest2 as unittest
    except ImportError:
        raise ImportError('unittest2 is required for tests on pre-2.7')
try:
    from test import support
except ImportError:
    from test import test_support as support
TESTFN = support.TESTFN
try:
    import grp, pwd
except ImportError:
    grp = pwd = None
support.fs_is_case_insensitive = fs_is_case_insensitive
with_fsencode = unittest.skipIf((sys.version_info < (3, 2)), 'os.fsencode has been introduced in version 3.2')
BASE = os.path.realpath(TESTFN)
join = (lambda *x: os.path.join(BASE, *x))
rel_join = (lambda *x: os.path.join(TESTFN, *x))
symlink_skip_reason = symlink_skip_reason()
only_nt = unittest.skipIf((os.name != 'nt'), 'test requires a Windows-compatible system')
only_posix = unittest.skipIf((os.name == 'nt'), 'test requires a POSIX-compatible system')
with_symlinks = unittest.skipIf(symlink_skip_reason, symlink_skip_reason)
if (__name__ == '__main__'):
    main()
