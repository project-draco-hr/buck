{
  final ImmutableSet.Builder<BuildTarget> builder=ImmutableSet.builder();
  TargetGraph subgraph=graph.getSubgraph(graph.getAll(targets));
  new AbstractBottomUpTraversal<TargetNode<?>,Void>(subgraph){
    @Override public void visit(    TargetNode<?> node){
      LOG.debug("Visiting dependency " + node.getBuildTarget().getFullyQualifiedName());
      if (!targets.contains(node.getBuildTarget())) {
        builder.add(node.getBuildTarget());
      }
    }
    @Override public Void getResult(){
      return null;
    }
  }
.traverse();
  return builder.build();
}
