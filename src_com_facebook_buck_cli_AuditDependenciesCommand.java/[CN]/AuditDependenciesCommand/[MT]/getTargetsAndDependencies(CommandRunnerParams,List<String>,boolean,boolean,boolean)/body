{
  ImmutableSet<BuildTarget> targets=FluentIterable.from(argumentsFormattedAsBuildTargets).transform(new Function<String,BuildTarget>(){
    @Override public BuildTarget apply(    String input){
      return BuildTargetParser.INSTANCE.parse(input,BuildTargetPatternParser.fullyQualified());
    }
  }
).toSet();
  TargetGraph graph=params.getParser().buildTargetGraphForBuildTargets(targets,new ParserConfig(params.getBuckConfig()),params.getBuckEventBus(),params.getConsole(),params.getEnvironment(),enableProfiling);
  TreeMultimap<BuildTarget,BuildTarget> targetsAndDependencies=TreeMultimap.create();
  for (  BuildTarget target : targets) {
    targetsAndDependencies.putAll(target,getDependenciesWithOptions(params,target,graph,showTransitive,showTests,enableProfiling));
  }
  return targetsAndDependencies;
}
