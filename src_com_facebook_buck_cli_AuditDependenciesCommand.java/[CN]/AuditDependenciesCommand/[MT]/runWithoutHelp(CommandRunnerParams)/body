{
  final ImmutableSet<String> fullyQualifiedBuildTargets=ImmutableSet.copyOf(getArgumentsFormattedAsBuildTargets(params.getBuckConfig()));
  if (fullyQualifiedBuildTargets.isEmpty()) {
    params.getBuckEventBus().post(ConsoleEvent.severe("Must specify at least one build target."));
    return 1;
  }
  if (params.getConsole().getAnsi().isAnsiTerminal()) {
    params.getBuckEventBus().post(ConsoleEvent.info("'buck audit dependencies' is deprecated. Please use 'buck query' instead.\n" + "The equivalent 'buck query' command is:\n$ %s\n\nThe query language is documented at " + "https://buckbuild.com/command/query.html",QueryCommand.buildAuditDependenciesQueryExpression(getArguments(),shouldShowTransitiveDependencies(),shouldIncludeTests(),shouldGenerateJsonOutput())));
  }
  try (CommandThreadManager pool=new CommandThreadManager("Audit",getConcurrencyLimit(params.getBuckConfig()));PerBuildState parserState=new PerBuildState(params.getParser(),params.getBuckEventBus(),pool.getExecutor(),params.getCell(),getEnableParserProfiling(),SpeculativeParsing.of(true),false)){
    BuckQueryEnvironment env=new BuckQueryEnvironment(params,parserState,getEnableParserProfiling());
    return QueryCommand.runMultipleQuery(params,env,pool.getExecutor(),QueryCommand.getAuditDependenciesQueryFormat(shouldShowTransitiveDependencies(),shouldIncludeTests()),getArgumentsFormattedAsBuildTargets(params.getBuckConfig()),shouldGenerateJsonOutput());
  }
 catch (  Exception e) {
    if (e.getCause() instanceof InterruptedException) {
      throw (InterruptedException)e.getCause();
    }
    params.getBuckEventBus().post(ConsoleEvent.severe(MoreExceptions.getHumanReadableOrLocalizedMessage(e)));
    return 1;
  }
}
