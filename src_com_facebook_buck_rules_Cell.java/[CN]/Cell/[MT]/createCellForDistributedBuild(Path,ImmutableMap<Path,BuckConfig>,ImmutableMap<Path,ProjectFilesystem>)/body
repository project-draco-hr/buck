{
  final AtomicReference<LoadingCache<Path,Cell>> cacheReference=new AtomicReference<>();
  CacheLoader<Path,Cell> loader=new CacheLoader<Path,Cell>(){
    @Override public Cell load(    Path cellPath) throws Exception {
      ProjectFilesystem cellFilesystem=Preconditions.checkNotNull(cellFilesystems.get(cellPath));
      BuckConfig buckConfig=Preconditions.checkNotNull(cellConfigs.get(cellPath));
      return new Cell(cellConfigs.keySet(),cellFilesystem,Watchman.NULL_WATCHMAN,buckConfig,knownBuildRuleTypesFactory,directoryResolver,cacheReference.get());
    }
  }
;
  LoadingCache<Path,Cell> cache=CacheBuilder.newBuilder().build(loader);
  cacheReference.set(cache);
  return cache.getUnchecked(rootCellPath);
}
