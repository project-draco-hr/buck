{
  FakeProjectFilesystem projectFilesystem=new FakeProjectFilesystem(new FakeClock(TimeUnit.MILLISECONDS.toNanos(1000L)));
  projectFilesystem.writeContentsToPath("[" + "{\n" + "\"cat\" : \"buck\",\n"+ "\"pid\" : 0,\n"+ "\"ts\" : 0,\n"+ "\"ph\" : \"M\",\n"+ "\"args\" : {\n"+ "\"name\" : \"buck\"\n"+ "},\n"+ "\"name\" : \"process_name\",\n"+ "\"tid\" : 0\n"+ "},"+ "{"+ "\"cat\":\"buck\","+ "\"name\":\"build\","+ "\"ph\":\"B\","+ "\"pid\":0,"+ "\"tid\":1,"+ "\"ts\":5621911884918,"+ "\"args\":{\"command_args\":\"buck\"}"+ "}"+ "]",BuckConstant.getBuckTraceDir().resolve("build.a.trace"));
  TracesHelper helper=new TracesHelper(projectFilesystem);
  TraceAttributes traceAttributes=helper.getTraceAttributesFor("a");
  assertEquals("TracesHelper should be able to extract the command.",Optional.of("buck build buck"),traceAttributes.getCommand());
  assertEquals(1000L,traceAttributes.getLastModifiedTime());
  assertNotNull(Strings.emptyToNull(traceAttributes.getFormattedDateTime()));
}
