{
  ImmutableList<CxxSource> srcs=CxxDescriptionEnhancer.parseCxxSources(params.getBuildTarget(),args.srcs.or(ImmutableList.<SourcePath>of()));
  ImmutableMap<Path,SourcePath> headers=CxxDescriptionEnhancer.parseHeaders(params.getBuildTarget(),args.headers.or((ImmutableList.<SourcePath>of())));
  ImmutableList<SourcePath> objects=CxxDescriptionEnhancer.createPreprocessAndCompileBuildRules(params,resolver,cxxBuckConfig,args.preprocessorFlags.or(ImmutableList.<String>of()),headers,args.compilerFlags.or(ImmutableList.<String>of()),srcs);
  return CxxLinkableEnhancer.createCxxLinkableBuildRule(params,resolver,cxxBuckConfig.getLd().or(CxxLinkables.DEFAULT_LINKER_PATH),cxxBuckConfig.getCxxLdFlags(),cxxBuckConfig.getLdFlags(),params.getBuildTarget(),getOutputPath(params.getBuildTarget()),objects,params.getDeps());
}
