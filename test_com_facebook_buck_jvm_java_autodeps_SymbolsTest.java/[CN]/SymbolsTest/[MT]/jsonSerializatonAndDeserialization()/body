{
  ImmutableSet<String> providedSymbols=ImmutableSet.of("com.example.Example1","com.example.Example2","com.example.Example3");
  ImmutableList<String> requiredSymbols=ImmutableList.of("com.example.Required1","com.example.Required2","com.example.Required3");
  ImmutableList<String> exportedSymbols=ImmutableList.of("com.example.Exported1","com.example.Exported2","com.example.Exported3");
  Symbols symbols=new Symbols(providedSymbols,requiredSymbols,exportedSymbols);
  ObjectMapper objectMapper=ObjectMappers.newDefaultInstance();
  StringWriter writer=new StringWriter();
  objectMapper.writeValue(writer,symbols);
  assertEquals("{\"provided\":" + "[\"com.example.Example1\",\"com.example.Example2\",\"com.example.Example3\"]," + "\"required\":"+ "[\"com.example.Required1\",\"com.example.Required2\",\"com.example.Required3\"],"+ "\"exported\":"+ "[\"com.example.Exported1\",\"com.example.Exported2\",\"com.example.Exported3\"]}",writer.toString());
  Symbols restoredSymbols=objectMapper.readValue(writer.toString(),Symbols.class);
  assertEquals(ImmutableList.copyOf(providedSymbols),ImmutableList.copyOf(restoredSymbols.provided));
  assertEquals(requiredSymbols,ImmutableList.copyOf(restoredSymbols.required));
}
