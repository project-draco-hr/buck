{
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver resolver=new SourcePathResolver(ruleResolver);
  tmp.getRootPath().resolve("one").toFile().mkdir();
  tmp.getRootPath().resolve("two").toFile().mkdir();
  ProjectFilesystem fsOne=new ProjectFilesystem(tmp.getRootPath().resolve("one"));
  ProjectFilesystem fsTwo=new ProjectFilesystem(tmp.getRootPath().resolve("two"));
  ImmutableBiMap<SourcePath,Path> expected=ImmutableBiMap.<SourcePath,Path>of(new FakeSourcePath(fsOne,"a/one.a"),Paths.get("a/one.a"),new FakeSourcePath(fsOne,"a/two"),Paths.get("a/two"),new FakeSourcePath(fsTwo,"a/one.a"),Paths.get("a/one-1.a"),new FakeSourcePath(fsTwo,"a/two"),Paths.get("a/two-1"));
  ImmutableBiMap<SourcePath,Path> resolvedDuplicates=SymlinkTree.resolveDuplicateRelativePaths(ImmutableSortedSet.copyOf(expected.keySet()),resolver);
  assertThat(resolvedDuplicates,Matchers.equalTo(expected));
}
