{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  FakeFileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.<String,String>of());
  RuleKeyBuilderFactory ruleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(hashCache,pathResolver);
  RuleKeyBuilderFactory inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver,ruleKeyBuilderFactory);
  FakeBuildRule dep=new FakeBuildRule("//:dep",pathResolver);
  symlinkTreeBuildRule=new SymlinkTree(new FakeBuildRuleParamsBuilder(buildTarget).setDeclaredDeps(ImmutableSortedSet.<BuildRule>of(dep)).build(),new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer())),outputPath,links);
  RuleKey ruleKey1=inputBasedRuleKeyBuilderFactory.build(symlinkTreeBuildRule);
  RuleKey ruleKey2=inputBasedRuleKeyBuilderFactory.build(symlinkTreeBuildRule);
  assertEquals(ruleKey1,ruleKey2);
}
