{
  Path aFile=tmpDir.newFile().toPath();
  Files.write(aFile,"hello world".getBytes(Charsets.UTF_8));
  AbstractBuildRule modifiedSymlinkTreeBuildRule=new SymlinkTree(new FakeBuildRuleParamsBuilder(buildTarget).build(),new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer())),outputPath,ImmutableMap.<Path,SourcePath>of(Paths.get("different/link"),new PathSourcePath(projectFilesystem,MorePaths.relativize(tmpDir.getRoot().toPath(),aFile))));
  SourcePathResolver resolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer()));
  FakeFileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.<String,String>of());
  RuleKey key1=new DefaultRuleKeyBuilderFactory(hashCache,resolver).build(symlinkTreeBuildRule);
  RuleKey key2=new DefaultRuleKeyBuilderFactory(hashCache,resolver).build(modifiedSymlinkTreeBuildRule);
  assertNotEquals(key1,key2);
}
