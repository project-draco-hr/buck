{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  Genrule dep=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:dep")).setOut("out").build(resolver);
  symlinkTreeBuildRule=new SymlinkTree(new FakeBuildRuleParamsBuilder(buildTarget).setDeclaredDeps(ImmutableSortedSet.<BuildRule>of(dep)).build(),pathResolver,outputPath,ImmutableMap.<Path,SourcePath>of(Paths.get("link"),new BuildTargetSourcePath(dep.getBuildTarget())));
  FakeFileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.of("out","aaaa"));
  InputBasedRuleKeyBuilderFactory inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver);
  RuleKey ruleKey1=inputBasedRuleKeyBuilderFactory.build(symlinkTreeBuildRule);
  hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.of("out","bbbb"));
  inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(hashCache,pathResolver);
  RuleKey ruleKey2=inputBasedRuleKeyBuilderFactory.build(symlinkTreeBuildRule);
  assertEquals(ruleKey1,ruleKey2);
}
