{
  Map<String,BuildRule> buildRuleIndex=Maps.newHashMap();
  AndroidResourceRule c=AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:c")).setRes("res_c").setRDotJavaPackage("com.facebook").build(buildRuleIndex);
  buildRuleIndex.put(c.getFullyQualifiedName(),c);
  AndroidResourceRule b=AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:b")).setRes("res_b").setRDotJavaPackage("com.facebook").addDep("//:c").build(buildRuleIndex);
  buildRuleIndex.put(b.getFullyQualifiedName(),b);
  AndroidResourceRule d=AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:d")).setRes("res_d").setRDotJavaPackage("com.facebook").addDep("//:c").build(buildRuleIndex);
  buildRuleIndex.put(d.getFullyQualifiedName(),d);
  AndroidResourceRule a=AndroidResourceRule.newAndroidResourceRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:a")).setRes("res_a").setRDotJavaPackage("com.facebook").addDep("//:b").addDep("//:c").addDep("//:d").build(buildRuleIndex);
  buildRuleIndex.put(a.getFullyQualifiedName(),a);
  DependencyGraph graph=RuleMap.createGraphFromBuildRules(buildRuleIndex);
  ImmutableList<AndroidResourceRule> deps=AndroidResourceRule.getAndroidResourceDeps(a,graph);
  ImmutableList<AndroidResourceRule> validResult1=ImmutableList.of(a,b,d,c);
  ImmutableList<AndroidResourceRule> validResult2=ImmutableList.of(a,d,b,c);
  assertTrue(String.format("Topological sort %s should be either %s or %s",deps,validResult1,validResult2),deps.equals(validResult1) || deps.equals(validResult2));
  AndroidBinaryRule e=AndroidBinaryRule.newAndroidBinaryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:e")).setManifest("AndroidManfiest.xml").setTarget("Google Inc.:Google APIs:16").setKeystorePropertiesPath("debug.keystore").addDep("//:a").addDep("//:c").build(buildRuleIndex);
  buildRuleIndex.put(e.getFullyQualifiedName(),e);
  DependencyGraph graph2=RuleMap.createGraphFromBuildRules(buildRuleIndex);
  ImmutableList<AndroidResourceRule> deps2=AndroidResourceRule.getAndroidResourceDeps(e,graph2);
  assertTrue(String.format("Topological sort %s should be either %s or %s",deps,validResult1,validResult2),deps2.equals(validResult1) || deps2.equals(validResult2));
}
