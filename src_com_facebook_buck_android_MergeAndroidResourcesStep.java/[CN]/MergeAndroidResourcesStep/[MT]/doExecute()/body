{
  ImmutableMap.Builder<Path,String> rDotTxtToPackage=ImmutableMap.builder();
  ImmutableMap.Builder<Path,HasAndroidResourceDeps> symbolsFileToResourceDeps=ImmutableMap.builder();
  for (  HasAndroidResourceDeps res : androidResourceDeps) {
    Path rDotTxtPath=pathResolver.getRelativePath(res.getPathToTextSymbolsFile());
    rDotTxtToPackage.put(rDotTxtPath,res.getRDotJavaPackage());
    symbolsFileToResourceDeps.put(rDotTxtPath,res);
  }
  Optional<ImmutableMap<RDotTxtEntry,String>> uberRDotTxtIds;
  if (uberRDotTxt.isPresent()) {
    uberRDotTxtIds=Optional.of(FluentIterable.from(RDotTxtEntry.readResources(filesystem,uberRDotTxt.get())).toMap(new Function<RDotTxtEntry,String>(){
      @Override public String apply(      RDotTxtEntry input){
        return input.idValue;
      }
    }
));
  }
 else {
    uberRDotTxtIds=Optional.absent();
  }
  ImmutableMap<Path,String> symbolsFileToRDotJavaPackage=rDotTxtToPackage.build();
  SortedSetMultimap<String,RDotTxtEntry> rDotJavaPackageToResources=sortSymbols(symbolsFileToRDotJavaPackage,uberRDotTxtIds,symbolsFileToResourceDeps.build(),bannedDuplicateResourceTypes,filesystem);
  if (unionPackage.isPresent()) {
    Collection<RDotTxtEntry> target=rDotJavaPackageToResources.asMap().get(unionPackage.get());
    if (target != null) {
      for (      Map.Entry<String,RDotTxtEntry> entry : new ArrayList<>(rDotJavaPackageToResources.entries())) {
        if (target.contains(entry.getValue())) {
          continue;
        }
        target.add(entry.getValue());
      }
    }
  }
  writePerPackageRDotJava(rDotJavaPackageToResources,filesystem);
  Set<String> emptyPackages=Sets.difference(ImmutableSet.copyOf(symbolsFileToRDotJavaPackage.values()),rDotJavaPackageToResources.keySet());
  if (!emptyPackages.isEmpty()) {
    writeEmptyRDotJavaForPackages(emptyPackages,filesystem);
  }
}
