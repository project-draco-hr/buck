{
  SourcePathResolver sourcePathResolver=new SourcePathResolver(resolver);
  BuildTarget originalBuildTarget=params.getBuildTarget();
  ReactNativeBundle bundle=createReactNativeBundle(params,resolver,sourcePathResolver,BuildTarget.builder(originalBuildTarget).addFlavors(REACT_NATIVE_BUNDLE_FLAVOR).build(),args,ReactNativePlatform.ANDROID);
  resolver.addToIndex(bundle);
  ImmutableList.Builder<BuildRule> extraDeps=ImmutableList.builder();
  extraDeps.add(bundle);
  if (args.rDotJavaPackage.isPresent()) {
    BuildRuleParams paramsForResource=params.copyWithBuildTarget(BuildTarget.builder(originalBuildTarget).addFlavors(REACT_NATIVE_ANDROID_RES_FLAVOR).build()).copyWithExtraDeps(Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of(bundle)));
    SourcePath resources=new BuildTargetSourcePath(bundle.getBuildTarget(),bundle.getResources());
    BuildRule resource=new AndroidResource(paramsForResource,sourcePathResolver,ImmutableSortedSet.<BuildRule>of(),resources,ImmutableSortedSet.<SourcePath>of(),Optional.of(resources),args.rDotJavaPackage.get(),null,ImmutableSortedSet.<SourcePath>of(),Optional.<SourcePath>absent(),null,false);
    resolver.addToIndex(resource);
    extraDeps.add(resource);
  }
  return new AndroidReactNativeLibrary(params.appendExtraDeps(extraDeps.build()),sourcePathResolver,bundle);
}
