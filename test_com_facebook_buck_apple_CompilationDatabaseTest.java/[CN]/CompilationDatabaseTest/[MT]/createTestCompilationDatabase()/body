{
  setUpTestValues();
  ProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  ImmutableSortedSet<FrameworkPath> frameworks=ImmutableSortedSet.of(FrameworkPath.ofSourceTreePath(new SourceTreePath(PBXReference.SourceTree.SDKROOT,Paths.get("System/Library/Frameworks/CoreLocation.framework"))),FrameworkPath.ofSourceTreePath(new SourceTreePath(PBXReference.SourceTree.SDKROOT,Paths.get("System/Library/Frameworks/Foundation.framework"))),FrameworkPath.ofSourceTreePath(new SourceTreePath(PBXReference.SourceTree.SDKROOT,Paths.get("System/Library/Frameworks/UIKit.framework"))));
  ImmutableSet<Path> includePaths=ImmutableSet.of(Paths.get("/Users/user/src/buck-out/gen/library/lib.hmap"));
  Optional<SourcePath> pchFile=Optional.<SourcePath>of(new PathSourcePath(projectFilesystem,Paths.get("foo/bar.pch")));
  ImmutableMap<AppleSdk,AppleSdkPaths> appleSdkPaths=ImmutableMap.of(AppleSdk.builder().setName("iphonesimulator8.0").setVersion("8.0").setXcodeVersion("6A2008a").setApplePlatform(ApplePlatform.IPHONESIMULATOR).addArchitectures("i386","x86_64").build(),AppleSdkPaths.builder().setDeveloperPath(Paths.get("developerPath")).addToolchainPaths(Paths.get("toolchainPath")).setPlatformPath(Paths.get("platformPath")).setSdkPath(Paths.get("/path/to/somewhere" + "/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk")).build());
  appleConfig=new FakeAppleConfig().setAppleSdkPaths(appleSdkPaths);
  return new CompilationDatabase(new FakeBuildRuleParamsBuilder(testBuildTarget).build(),testSourcePathResolver,appleConfig,testSourcesWithFlags,testPublicHeaders,testPrivateHeaders,frameworks,includePaths,pchFile);
}
