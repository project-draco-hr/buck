{
  setUpTestValues();
  Pair<SourcePath,String> publicHeader=new Pair<SourcePath,String>(new TestSourcePath("Foo/Hello.h"),"public");
  Collection<AppleSource> appleSources=ImmutableList.of(AppleSource.ofSourcePathWithFlags(publicHeader),AppleSource.ofSourcePath(new TestSourcePath("Foo/Bye.h")),AppleSource.ofSourcePath(new TestSourcePath("Foo/Hello.m")));
  TargetSources targetSources=TargetSources.ofAppleSources(testSourcePathResolver,appleSources);
  CompilationDatabase compilationDatabase=new CompilationDatabase(new FakeBuildRuleParamsBuilder(testBuildTarget).build(),testSourcePathResolver,appleConfig,targetSources,ImmutableSortedSet.<String>of(),ImmutableSet.<Path>of(),Optional.<SourcePath>absent());
  MoreAsserts.assertIterablesEquals("getInputsToCompareToOutput() should contain files in targetSources.",ImmutableList.of(Paths.get("Foo/Hello.m"),Paths.get("Foo/Hello.h"),Paths.get("Foo/Bye.h")),compilationDatabase.getInputsToCompareToOutput());
}
