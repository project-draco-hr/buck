{
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  String flag="-compiler-flag";
  HaskellBinaryBuilder builder=new HaskellBinaryBuilder(target).setCompilerFlags(ImmutableList.of(flag));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraphFactory.newInstance(builder.build()),new DefaultTargetNodeToBuildRuleTransformer());
  builder.build(resolver);
  BuildTarget compileTarget=HaskellDescriptionUtils.getCompileBuildTarget(target,CxxPlatformUtils.DEFAULT_PLATFORM,CxxSourceRuleFactory.PicType.PDC);
  HaskellCompileRule rule=resolver.getRuleWithType(compileTarget,HaskellCompileRule.class);
  assertThat(rule.getFlags(),Matchers.hasItem(flag));
}
