{
  LoadCommand loadCommand=LoadCommandUtils.createFromBuffer(buffer);
  Preconditions.checkArgument(loadCommand.getCmd().equals(SegmentCommand.LC_SEGMENT) || loadCommand.getCmd().equals(SegmentCommand.LC_SEGMENT_64));
  boolean is64Bit=loadCommand.getCmd().equals(SegmentCommand.LC_SEGMENT_64);
  String segname=null;
  try {
    segname=NulTerminatedCharsetDecoder.decodeUTF8String(buffer);
  }
 catch (  CharacterCodingException e) {
    throw new HumanReadableException(e,"Cannot read segname for SegmentCommand at %d",loadCommand.getOffsetInBinary());
  }
  buffer.position(loadCommand.getOffsetInBinary() + LoadCommand.CMD_AND_CMDSIZE_SIZE + SegmentCommand.SEGNAME_SIZE_IN_BYTES);
  return SegmentCommand.of(loadCommand,segname,UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),buffer.getInt(),buffer.getInt(),UnsignedInteger.fromIntBits(buffer.getInt()),UnsignedInteger.fromIntBits(buffer.getInt()));
}
