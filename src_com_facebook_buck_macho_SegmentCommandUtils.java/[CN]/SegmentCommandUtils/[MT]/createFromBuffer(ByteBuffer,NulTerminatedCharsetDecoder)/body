{
  LoadCommandCommonFields fields=LoadCommandCommonFieldsUtils.createFromBuffer(buffer);
  Preconditions.checkArgument(SegmentCommand.VALID_CMD_VALUES.contains(fields.getCmd()));
  boolean is64Bit=fields.getCmd().equals(SegmentCommand.LC_SEGMENT_64);
  String segname=null;
  try {
    segname=decoder.decodeString(buffer);
  }
 catch (  CharacterCodingException e) {
    throw new HumanReadableException(e,"Cannot read segname for SegmentCommand at %d",fields.getOffsetInBinary());
  }
  buffer.position(fields.getOffsetInBinary() + LoadCommandCommonFields.CMD_AND_CMDSIZE_SIZE + SegmentCommand.SEGNAME_SIZE_IN_BYTES);
  return SegmentCommand.of(fields,segname,UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),UnsignedLong.fromLongBits(is64Bit ? buffer.getLong() : buffer.getInt() & 0xFFFFFFFFL),buffer.getInt(),buffer.getInt(),UnsignedInteger.fromIntBits(buffer.getInt()),UnsignedInteger.fromIntBits(buffer.getInt()));
}
