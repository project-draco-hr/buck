{
  final Map<BuildTarget,NativeLinkable> excluded=new LinkedHashMap<>();
  excluded.putAll(excludedRoots);
  new AbstractBreadthFirstTraversal<NativeLinkable>(excludedRoots.values()){
    @Override public Iterable<NativeLinkable> visit(    NativeLinkable linkable){
      if (includedRoots.containsKey(linkable.getBuildTarget())) {
        excluded.put(linkable.getBuildTarget(),linkable);
      }
      return Iterables.concat(linkable.getNativeLinkableDeps(cxxPlatform),linkable.getNativeLinkableExportedDeps(cxxPlatform));
    }
  }
.start();
  return ImmutableMap.copyOf(excluded);
}
