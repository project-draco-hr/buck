{
  Set<String> sourceDirectories=ImmutableSet.of("parentDirectory1/src","root/parentDirectory/src");
  String outputDirectory="buck-gen/output";
  ExecutionContext context=createMock(ExecutionContext.class);
  replay(context);
  ImmutableList.Builder<String> shellCommandBuilder=ImmutableList.builder();
  shellCommandBuilder.add("java","-classpath",JUnitCommand.PATH_TO_EMMA_JAR,"emma","report",String.format("-D%s=%s",GenerateCodeCoverageReportCommand.REPORT_OUTPUT_DIR,outputDirectory));
  for (  String reportFormat : GenerateCodeCoverageReportCommand.CODE_COVERAGE_OUTPUT_FORMAT) {
    shellCommandBuilder.add("-report",reportFormat);
  }
  shellCommandBuilder.add("-input",String.format("%s/coverage.ec,%s/coverage.em",JUnitCommand.EMMA_OUTPUT_DIR,JUnitCommand.EMMA_OUTPUT_DIR),"-sourcepath","parentDirectory1/src,root/parentDirectory/src");
  List<String> expectedShellCommand=shellCommandBuilder.build();
  GenerateCodeCoverageReportCommand command=new GenerateCodeCoverageReportCommand(sourceDirectories,outputDirectory);
  MoreAsserts.assertListEquals(expectedShellCommand,command.getShellCommandInternal(context));
  verify(context);
}
