{
  CollectingOutputReceiver receiver=new CollectingOutputReceiver(){
    private boolean sentPayload=false;
    @Override public void addOutput(    byte[] data,    int offset,    int length){
      super.addOutput(data,offset,length);
      if (!sentPayload && getOutput().length() >= AgentUtil.TEXT_SECRET_KEY_SIZE) {
        LOG.verbose("Got key: %s",getOutput().trim());
        sentPayload=true;
        try (Socket clientSocket=new Socket("localhost",port)){
          LOG.verbose("Connected");
          OutputStream outToDevice=clientSocket.getOutputStream();
          outToDevice.write(getOutput().substring(0,AgentUtil.TEXT_SECRET_KEY_SIZE).getBytes());
          LOG.verbose("Wrote key");
          com.google.common.io.Files.asByteSource(source.toFile()).copyTo(outToDevice);
          LOG.verbose("Wrote file");
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
;
  String targetFileName=dataRoot.resolve(pathRelativeToDataRoot).toString();
  String command="umask 022 && " + getAgentCommand() + "receive-file "+ port+ " "+ Files.size(source)+ " "+ targetFileName+ " ; echo -n :$?";
  LOG.debug("Executing %s",command);
  Exception shellException=null;
  try {
    device.executeShellCommand(command,receiver);
  }
 catch (  Exception e) {
    shellException=e;
  }
  try {
    AdbHelper.checkReceiverOutput(command,receiver);
  }
 catch (  Exception e) {
    if (shellException != null) {
      e.addSuppressed(shellException);
    }
    throw e;
  }
  if (shellException != null) {
    throw shellException;
  }
  AdbHelper.executeCommandWithErrorChecking(device,"chmod 644 " + targetFileName);
}
