{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  List<String> targets=Lists.newArrayList();
  PartialGraph partialGraph1=createGraphFromBuildRules(ruleResolver,targets);
  auditClasspathCommand.printClasspath(partialGraph1);
  assertEquals("",console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:test-java-library")).addSrc("src/com/facebook/TestJavaLibrary.java"));
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:test-android-library")).addSrc("src/com/facebook/TestAndroidLibrary.java").addDep(BuildTargetFactory.newInstance("//:test-java-library")));
  ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:test-android-binary")).setManifest("AndroidManifest.xml").setTarget("Google Inc.:Google APIs:16").setKeystorePropertiesPath("keystore.properties").addDep(BuildTargetFactory.newInstance("//:test-android-library")).addDep(BuildTargetFactory.newInstance("//:test-java-library")));
  ruleResolver.buildAndAddToIndex(JavaTestRule.newJavaTestRuleBuilder().setBuildTarget(BuildTargetFactory.newInstance("//:project-tests")).addDep(BuildTargetFactory.newInstance("//:test-java-library")).setSourceUnderTest(ImmutableSet.of(BuildTargetFactory.newInstance("//:test-java-library"))).addSrc("src/com/facebook/test/ProjectTests.java"));
  PartialGraph partialGraph2=createGraphFromBuildRules(ruleResolver,targets);
  auditClasspathCommand.printClasspath(partialGraph2);
  assertEquals("",console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
  targets.add("//:test-android-binary");
  PartialGraph partialGraph3=createGraphFromBuildRules(ruleResolver,targets);
  auditClasspathCommand.printClasspath(partialGraph3);
  SortedSet<String> expectedPaths=Sets.newTreeSet(Arrays.asList(GEN_DIR + "/lib__test-android-library__output/test-android-library.jar",GEN_DIR + "/lib__test-java-library__output/test-java-library.jar"));
  String expectedClasspath=Joiner.on("\n").join(expectedPaths) + "\n";
  assertEquals(expectedClasspath,console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
  setUp();
  targets.add("//:test-java-library");
  targets.add("//:test-android-library");
  targets.add("//:project-tests");
  PartialGraph partialGraph4=createGraphFromBuildRules(ruleResolver,targets);
  auditClasspathCommand.printClasspath(partialGraph4);
  expectedPaths.add(GEN_DIR + "/lib__project-tests__output/project-tests.jar");
  expectedClasspath=Joiner.on("\n").join(expectedPaths) + "\n";
  assertEquals(expectedClasspath,console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
}
