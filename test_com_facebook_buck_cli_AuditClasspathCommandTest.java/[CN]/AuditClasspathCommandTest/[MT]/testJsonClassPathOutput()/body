{
  BuildTarget javaTarget=BuildTargetFactory.newInstance("//:test-java-library");
  TargetNode<?> javaNode=JavaLibraryBuilder.createBuilder(javaTarget).addSrc(Paths.get("src/com/facebook/TestJavaLibrary.java")).build();
  BuildTarget androidTarget=BuildTargetFactory.newInstance("//:test-android-library");
  TargetNode<?> androidNode=AndroidLibraryBuilder.createBuilder(androidTarget).addSrc(Paths.get("src/com/facebook/TestAndroidLibrary.java")).addDep(javaTarget).build();
  auditClasspathCommand.printJsonClasspath(params,TargetGraphFactory.newInstance(ImmutableSet.of(androidNode,javaNode)),targetGraphTransformer,ImmutableSet.of(androidTarget,javaTarget));
  Path root=javaTarget.getCellPath();
  String expected=String.format(EXPECTED_JSON,root.resolve("buck-out/gen/lib__test-java-library__output/test-java-library.jar"),root.resolve("buck-out/gen/lib__test-android-library__output/test-android-library.jar"),root.resolve("buck-out/gen/lib__test-java-library__output/test-java-library.jar"));
  assertEquals(expected,console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
}
