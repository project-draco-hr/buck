{
  BuildTarget javaTarget=BuildTargetFactory.newInstance("//:test-java-library");
  TargetNode<?> javaNode=JavaLibraryBuilder.createBuilder(javaTarget).addSrc(Paths.get("src/com/facebook/TestJavaLibrary.java")).build();
  BuildTarget androidTarget=BuildTargetFactory.newInstance("//:test-android-library");
  TargetNode<?> androidNode=AndroidLibraryBuilder.createBuilder(androidTarget).addSrc(Paths.get("src/com/facebook/TestAndroidLibrary.java")).addDep(javaTarget).build();
  auditClasspathCommand.printJsonClasspath(params,TargetGraphFactory.newInstance(ImmutableSet.of(androidNode,javaNode)),ImmutableSet.of(androidTarget,javaTarget));
  Path root=javaTarget.getCellPath();
  String expected=String.format(EXPECTED_JSON,root.resolve(BuildTargets.getGenPath(params.getCell().getFilesystem(),javaTarget,"lib__%s__output").resolve(javaTarget.getShortName() + ".jar")),root.resolve(BuildTargets.getGenPath(params.getCell().getFilesystem(),androidTarget,"lib__%s__output").resolve(androidTarget.getShortName() + ".jar")),root.resolve(BuildTargets.getGenPath(params.getCell().getFilesystem(),javaTarget,"lib__%s__output").resolve(javaTarget.getShortName() + ".jar")));
  assertEquals(expected,console.getTextWrittenToStdOut());
  assertEquals("",console.getTextWrittenToStdErr());
}
