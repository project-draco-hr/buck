{
  ImmutableSet<ArtifactCacheBuckConfig.ArtifactCacheMode> modes=buckConfig.getArtifactCacheModes();
  if (modes.isEmpty()) {
    return new NoopArtifactCache();
  }
  ImmutableList.Builder<ArtifactCache> builder=ImmutableList.builder();
  boolean useDistributedCache=buckConfig.isWifiUsableForDistributedCache(wifiSsid);
  for (  ArtifactCacheBuckConfig.ArtifactCacheMode mode : modes) {
switch (mode) {
case dir:
      ArtifactCache dirArtifactCache=createDirArtifactCache(buckConfig,projectFilesystem);
    builder.add(dirArtifactCache);
  break;
case http:
if (useDistributedCache) {
  ArtifactCache httpArtifactCache=createHttpArtifactCache(buckConfig,buckEventBus,projectFilesystem);
  builder.add(httpArtifactCache);
}
break;
}
}
ImmutableList<ArtifactCache> artifactCaches=builder.build();
if (artifactCaches.size() == 1) {
return artifactCaches.get(0);
}
 else {
return new MultiArtifactCache(artifactCaches);
}
}
