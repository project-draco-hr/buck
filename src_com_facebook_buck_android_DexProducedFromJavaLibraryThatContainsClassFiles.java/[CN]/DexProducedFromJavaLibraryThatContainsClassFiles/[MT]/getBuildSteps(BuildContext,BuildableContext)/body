{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  steps.add(new RmStep(getPathToDex().toString(),true));
  steps.add(new MkdirStep(getPathToDex().getParent()));
  if (!javaLibraryWithClassesList.getClassNames().isEmpty()) {
    JavaLibraryRule javaLibraryRuleToDex=javaLibraryWithClassesList.getJavaLibraryRule();
    DxStep dx=new DxStep(getPathToDex().toString(),Collections.singleton(Paths.get(javaLibraryRuleToDex.getPathToOutputFile())),EnumSet.of(DxStep.Option.NO_OPTIMIZE,DxStep.Option.FORCE_JUMBO));
    steps.add(dx);
    AbstractExecutionStep recordArtifactStep=new AbstractExecutionStep("record_dx_success"){
      @Override public int execute(      ExecutionContext context){
        buildableContext.recordArtifact(getPathToDex().getFileName());
        return 0;
      }
    }
;
    steps.add(recordArtifactStep);
  }
  return steps.build();
}
