{
  final EventPair ongoing1=EventPair.of(Optional.<BuckEventExternalInterface>of(ProxyBuckEvent.of(100)),Optional.<BuckEventExternalInterface>absent());
  final EventPair ongoing2=EventPair.of(Optional.<BuckEventExternalInterface>of(ProxyBuckEvent.of(200)),Optional.<BuckEventExternalInterface>absent());
  long timeUntilNow=AbstractConsoleEventBusListener.getWorkingTimeFromLastStartUntilNow(ImmutableList.of(ongoing1,ongoing2),300);
  assertEquals("Time should be counted since the latest ongoing event",100L,timeUntilNow);
  final EventPair closed=EventPair.proxy(300,400);
  timeUntilNow=AbstractConsoleEventBusListener.getWorkingTimeFromLastStartUntilNow(ImmutableList.of(ongoing1,closed),600);
  assertEquals("Time should only be counted from the last closed event",200L,timeUntilNow);
  final EventPair finishOnly=EventPair.of(Optional.<BuckEventExternalInterface>absent(),Optional.<BuckEventExternalInterface>of(ProxyBuckEvent.of(100)));
  timeUntilNow=AbstractConsoleEventBusListener.getWorkingTimeFromLastStartUntilNow(ImmutableList.of(finishOnly),600);
  assertEquals("Finished events without start are not ongoing",-1L,timeUntilNow);
}
