{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetType()).compareTo(other.isSetType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.type,other.type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetGitHash()).compareTo(other.isSetGitHash());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetGitHash()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.gitHash,other.gitHash);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDevelopmentVersion()).compareTo(other.isSetDevelopmentVersion());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDevelopmentVersion()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.developmentVersion,other.developmentVersion);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
