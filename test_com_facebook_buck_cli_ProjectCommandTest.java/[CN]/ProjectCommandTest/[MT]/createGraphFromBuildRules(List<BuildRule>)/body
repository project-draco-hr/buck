{
  MutableDirectedGraph<BuildRule> graph=new MutableDirectedGraph<>();
  for (  BuildRule rule : rules) {
    for (    BuildRule dep : rule.getDeps()) {
      graph.addEdge(rule,dep);
    }
  }
  List<BuildTarget> buildTargets=Lists.transform(rules,new Function<BuildRule,BuildTarget>(){
    @Override public BuildTarget apply(    BuildRule rule){
      return rule.getBuildTarget();
    }
  }
);
  DependencyGraph dependencyGraph=new DependencyGraph(graph);
  return PartialGraphFactory.newInstance(dependencyGraph,buildTargets);
}
