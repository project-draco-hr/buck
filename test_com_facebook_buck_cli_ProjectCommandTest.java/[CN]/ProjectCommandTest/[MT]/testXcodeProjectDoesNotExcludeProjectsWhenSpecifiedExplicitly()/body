{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  IosLibraryDescription iosLibraryDescription=new IosLibraryDescription();
  XcodeProjectConfigDescription xcodeProjectConfigDescription=new XcodeProjectConfigDescription();
  BuildRuleParams fooParams=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","lib").build()).setType(IosLibraryDescription.TYPE).setProjectFilesystem(projectFilesystem).build();
  AppleNativeTargetDescriptionArg libFooArg=iosLibraryDescription.createUnpopulatedConstructorArg();
  libFooArg.configs=ImmutableMap.of();
  libFooArg.srcs=ImmutableList.of();
  libFooArg.frameworks=ImmutableSortedSet.of();
  libFooArg.deps=Optional.absent();
  libFooArg.gid=Optional.absent();
  BuildRule fooLibRule=iosLibraryDescription.createBuildRule(fooParams,ruleResolver,libFooArg);
  BuildRuleParams fooProjectParams=new FakeBuildRuleParamsBuilder(BuildTarget.builder("//foo","project").build()).setType(XcodeProjectConfigDescription.TYPE).setDeps(ImmutableSortedSet.of(fooLibRule)).setProjectFilesystem(projectFilesystem).build();
  XcodeProjectConfigDescription.Arg fooProjectArg=xcodeProjectConfigDescription.createUnpopulatedConstructorArg();
  fooProjectArg.projectName="foo";
  fooProjectArg.rules=ImmutableSet.of(fooLibRule);
  BuildRule fooProjectRule=xcodeProjectConfigDescription.createBuildRule(fooProjectParams,ruleResolver,fooProjectArg);
  BuckConfig buckConfig=createBuckConfig(Joiner.on("\n").join("[project]","ide = xcode","default_exclude_paths = foo"));
  ProjectCommandForTest command=new ProjectCommandForTest(projectFilesystem);
  command.createPartialGraphCallReturnValues.push(createGraphFromBuildRules(ImmutableList.of(fooLibRule,fooProjectRule)));
  ProjectCommandOptions projectCommandOptions=createOptions(buckConfig);
  projectCommandOptions.setArguments(ImmutableList.of("//foo:project"));
  projectFilesystem.mkdirs(Paths.get("foo"));
  projectFilesystem.touch(Paths.get("foo/BUCK"));
  command.runCommandWithOptions(projectCommandOptions);
  assertTrue(command.createPartialGraphCallReturnValues.isEmpty());
  RuleJsonPredicate projectConfigPredicate=command.createPartialGraphCallPredicates.get(0);
  checkPredicate(projectConfigPredicate,EMPTY_PARSE_DATA,fooProjectRule,true);
}
