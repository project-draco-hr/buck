{
  if (seenPaths.contains(path)) {
    return;
  }
  seenPaths.add(path);
  Optional<Path> pathRelativeToProjectRoot=projectFilesystem.getPathRelativeToProjectRoot(path);
  BuildJobStateFileHashEntry fileHashEntry=new BuildJobStateFileHashEntry();
  Path entryKey;
  if (pathRelativeToProjectRoot.isPresent()) {
    entryKey=pathRelativeToProjectRoot.get();
    fileHashEntry.setPathIsAbsolute(false);
  }
 else {
    entryKey=path;
    fileHashEntry.setPathIsAbsolute(true);
  }
  fileHashEntry.setIsDirectory(projectFilesystem.isDirectory(path));
  fileHashEntry.setHashCode(hashCode.toString());
  fileHashEntry.setPath(new PathWithUnixSeparators(MorePaths.pathWithUnixSeparators(entryKey)));
  remoteFileHashes.addToEntries(fileHashEntry);
}
