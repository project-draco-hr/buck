{
  Path main=tmpDir.newFile().toPath();
  Files.write(main,"main".getBytes(Charsets.UTF_8));
  Path source1=tmpDir.newFile().toPath();
  Files.write(source1,"hello world".getBytes(Charsets.UTF_8));
  Path source2=tmpDir.newFile().toPath();
  Files.write(source2,"goodbye world".getBytes(Charsets.UTF_8));
  RuleKeyBuilderFactory ruleKeyBuilderFactory=new FakeRuleKeyBuilderFactory(FakeFileHashCache.createFromStrings(ImmutableMap.of(main.toString(),Strings.repeat("a",40),source1.toString(),Strings.repeat("b",40),source2.toString(),Strings.repeat("c",40))));
  RuleKey.Builder.RuleKeyPair pair1=getRuleKeyForModuleLayout(ruleKeyBuilderFactory,"main.py",main,"module/one.py",source1,"module/two.py",source2);
  RuleKey.Builder.RuleKeyPair pair2=getRuleKeyForModuleLayout(ruleKeyBuilderFactory,"main.py",main,"module/two.py",source2,"module/one.py",source1);
  RuleKey.Builder.RuleKeyPair pair3=getRuleKeyForModuleLayout(ruleKeyBuilderFactory,"main.py",main,"module/one.py",source2,"module/two.py",source1);
  RuleKey.Builder.RuleKeyPair pair4=getRuleKeyForModuleLayout(ruleKeyBuilderFactory,"main.py",main,"module/two.py",source1,"module/one.py",source2);
  assertEquals(pair1.getTotalRuleKey(),pair2.getTotalRuleKey());
  assertEquals(pair3.getTotalRuleKey(),pair4.getTotalRuleKey());
  assertNotEquals(pair1.getTotalRuleKey(),pair3.getTotalRuleKey());
}
