{
  ProjectFilesystem filesystem=new AllExistingProjectFilesystem();
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  PrebuiltCxxLibrary dep=(PrebuiltCxxLibrary)new PrebuiltCxxLibraryBuilder(BuildTargetFactory.newInstance("//:dep")).build(resolver,filesystem);
  PrebuiltCxxLibrary exportedDep=(PrebuiltCxxLibrary)new PrebuiltCxxLibraryBuilder(BuildTargetFactory.newInstance("//:exported_dep")).build(resolver,filesystem);
  PrebuiltCxxLibrary rule=(PrebuiltCxxLibrary)new PrebuiltCxxLibraryBuilder(BuildTargetFactory.newInstance("//:rule")).setExportedDeps(ImmutableSortedSet.of(dep.getBuildTarget(),exportedDep.getBuildTarget())).build(resolver,filesystem);
  assertThat(ImmutableList.copyOf(rule.getSharedNativeLinkTarget(CXX_PLATFORM).get().getSharedNativeLinkTargetDeps(CXX_PLATFORM)),Matchers.<NativeLinkable>hasItems(dep,exportedDep));
}
