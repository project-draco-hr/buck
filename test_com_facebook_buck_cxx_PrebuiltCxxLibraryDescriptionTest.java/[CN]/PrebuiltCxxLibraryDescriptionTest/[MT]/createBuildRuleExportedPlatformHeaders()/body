{
  BuildRuleResolver resolver=new BuildRuleResolver();
  ProjectFilesystem filesystem=new AllExistingProjectFilesystem();
  PrebuiltCxxLibraryBuilder libBuilder=new PrebuiltCxxLibraryBuilder(TARGET).setExportedPlatformHeaders(CXX_PLATFORM,SourceList.ofUnnamedSources(ImmutableSortedSet.<SourcePath>of()));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(libBuilder.build());
  PrebuiltCxxLibrary lib=(PrebuiltCxxLibrary)libBuilder.build(resolver,filesystem,targetGraph);
  PrebuiltCxxLibraryDescription.Arg arg=libBuilder.build().getConstructorArg();
  CxxPreprocessorInput expectedCxxPreprocessorInput=CxxPreprocessorInput.builder().addAllSystemIncludeRoots(getIncludeRoots(lib)).addAllSystemIncludeRoots(getIncludeDirs(arg)).setRules(getInputRules(lib)).build();
  assertThat(lib.getCxxPreprocessorInput(targetGraph,CXX_PLATFORM,HeaderVisibility.PUBLIC),Matchers.equalTo(expectedCxxPreprocessorInput));
  NativeLinkableInput expectedStaticLinkableInput=NativeLinkableInput.of(ImmutableList.<SourcePath>of(new PathSourcePath(filesystem,getStaticLibraryPath(arg))),ImmutableList.of(getStaticLibraryPath(arg).toString()),ImmutableSet.<FrameworkPath>of(),ImmutableSet.<FrameworkPath>of());
  assertEquals(expectedStaticLinkableInput,lib.getNativeLinkableInput(targetGraph,CXX_PLATFORM,Linker.LinkableDepType.STATIC));
  NativeLinkableInput expectedSharedLinkableInput=NativeLinkableInput.of(ImmutableList.<SourcePath>of(new PathSourcePath(filesystem,getSharedLibraryPath(arg))),ImmutableList.of(getSharedLibraryPath(arg).toString()),ImmutableSet.<FrameworkPath>of(),ImmutableSet.<FrameworkPath>of());
  assertEquals(expectedSharedLinkableInput,lib.getNativeLinkableInput(targetGraph,CXX_PLATFORM,Linker.LinkableDepType.SHARED));
  PythonPackageComponents expectedComponents=PythonPackageComponents.of(ImmutableMap.<Path,SourcePath>of(),ImmutableMap.<Path,SourcePath>of(),ImmutableMap.<Path,SourcePath>of(Paths.get(getSharedLibrarySoname(arg)),new PathSourcePath(filesystem,getSharedLibraryPath(arg))),ImmutableSet.<SourcePath>of(),Optional.<Boolean>absent());
  assertEquals(expectedComponents,lib.getPythonPackageComponents(targetGraph,PythonTestUtils.PYTHON_PLATFORM,CXX_PLATFORM));
}
