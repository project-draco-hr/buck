{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  PrebuiltCxxLibrary dep=(PrebuiltCxxLibrary)new PrebuiltCxxLibraryBuilder(BuildTargetFactory.newInstance("//:dep")).build(resolver);
  PrebuiltCxxLibrary rule=(PrebuiltCxxLibrary)new PrebuiltCxxLibraryBuilder(BuildTargetFactory.newInstance("//:r")).setDeps(ImmutableSortedSet.of(dep.getBuildTarget())).build(resolver);
  assertThat(rule.getNativeLinkableDeps(CxxLibraryBuilder.createDefaultPlatform()),Matchers.<NativeLinkable>contains(dep));
  assertThat(ImmutableList.copyOf(rule.getNativeLinkableExportedDeps(CxxLibraryBuilder.createDefaultPlatform())),Matchers.<NativeLinkable>empty());
}
