{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  PrebuiltJarRule guavaRule=ruleResolver.buildAndAddToIndex(PrebuiltJarRule.newPrebuiltJarRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//third_party/guava:guava")).setBinaryJar("third_party/guava/guava-10.0.1.jar").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  PrebuiltJarRule jsr305Rule=ruleResolver.buildAndAddToIndex(PrebuiltJarRule.newPrebuiltJarRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//third_party/jsr-305:jsr-305")).setBinaryJar("third_party/jsr-305/jsr305.jar").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  BuildRule ndkLibrary=ruleResolver.buildAndAddToIndex(NdkLibrary.newNdkLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/com/facebook/native_library:library")).addSrc("Android.mk").setIsAsset(false).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  BuildRule prebuiltNativeLibraryBuild=ruleResolver.buildAndAddToIndex(PrebuiltNativeLibrary.newPrebuiltNativeLibrary(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/com/facebook/prebuilt_native_library:library")).setNativeLibsDirectory("/java/com/facebook/prebuilt_native_library/libs").setIsAsset(true).addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  DefaultJavaLibraryRule libraryRule=ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook:example")).addDep(guavaRule.getBuildTarget()).addDep(jsr305Rule.getBuildTarget()).addDep(prebuiltNativeLibraryBuild.getBuildTarget()).addDep(ndkLibrary.getBuildTarget()));
  AndroidResourceRule manifestRule=ruleResolver.buildAndAddToIndex(AndroidResourceRule.newAndroidResourceRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook:res")).setManifestFile("java/src/com/facebook/module/AndroidManifest.xml").setAssetsDirectory("assets/"));
  BuildTarget keystoreTarget=BuildTargetFactory.newInstance("//keystore:debug");
  ruleResolver.buildAndAddToIndex(Keystore.newKeystoreBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(keystoreTarget).setStore("keystore/debug.keystore").setProperties("keystore/debug.keystore.properties").addVisibilityPattern(BuildTargetPattern.MATCH_ALL));
  AndroidBinaryRule binaryRule=ruleResolver.buildAndAddToIndex(AndroidBinaryRule.newAndroidBinaryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(BuildTargetFactory.newInstance("//java/src/com/facebook:app")).addClasspathDep(libraryRule.getBuildTarget()).addClasspathDep(manifestRule.getBuildTarget()).addBuildRuleToExcludeFromDex(BuildTargetFactory.newInstance("//third_party/guava:guava")).setManifest(new FileSourcePath("java/src/com/facebook/AndroidManifest.xml")).setTarget("Google Inc.:Google APIs:16").setKeystore(keystoreTarget));
  DependencyGraph graph=RuleMap.createGraphFromBuildRules(ruleResolver);
  AndroidTransitiveDependencies transitiveDeps=binaryRule.findTransitiveDependencies(graph);
  AndroidDexTransitiveDependencies dexTransitiveDeps=binaryRule.findDexTransitiveDependencies(graph);
  assertEquals("Because guava was passed to no_dx, it should not be in the classpathEntriesToDex list",ImmutableSet.of("third_party/jsr-305/jsr305.jar"),dexTransitiveDeps.classpathEntriesToDex);
  assertEquals("Because guava was passed to no_dx, it should not be treated as a third-party JAR whose " + "resources need to be extracted and repacked in the APK. If this is done, then code in " + "the guava-10.0.1.dex.1.jar in the APK's assets/ tmp may try to load the resource "+ "from the APK as a ZipFileEntry rather than as a resource within guava-10.0.1.dex.1.jar. "+ "Loading a resource in this way could take substantially longer. Specifically, this was "+ "observed to take over one second longer to load the resource in fb4a. Because the "+ "resource was loaded on startup, this introduced a substantial regression in the startup "+ "time for the fb4a app.",ImmutableSet.of("third_party/jsr-305/jsr305.jar"),dexTransitiveDeps.pathsToThirdPartyJars);
  assertEquals("Because assets directory was passed an AndroidResourceRule it should be added to the " + "transitive dependencies",ImmutableSet.of("assets/"),transitiveDeps.assetsDirectories);
  assertEquals("Because manifest file was passed an AndroidResourceRule it should be added to the " + "transitive dependencies",ImmutableSet.of("java/src/com/facebook/module/AndroidManifest.xml"),transitiveDeps.manifestFiles);
  assertEquals("Because a native library was declared as a dependency, it should be added to the " + "transitive dependencies.",ImmutableSet.of(((NativeLibraryBuildable)ndkLibrary.getBuildable()).getLibraryPath()),transitiveDeps.nativeLibsDirectories);
  assertEquals("Because a prebuilt native library  was declared as a dependency (and asset), it should " + "be added to the transitive dependecies.",ImmutableSet.of(((NativeLibraryBuildable)prebuiltNativeLibraryBuild.getBuildable()).getLibraryPath()),transitiveDeps.nativeLibAssetsDirectories);
}
