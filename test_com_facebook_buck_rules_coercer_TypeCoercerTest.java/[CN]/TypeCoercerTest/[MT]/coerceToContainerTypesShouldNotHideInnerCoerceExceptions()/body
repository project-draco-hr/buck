{
  String invalidPath="";
  CoerceFailedException pathCoerceException=getCoerceException(Path.class,invalidPath);
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("stringMapOfPaths").getGenericType(),ImmutableMap.of("test",invalidPath)));
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("listOfPaths").getGenericType(),ImmutableList.of(invalidPath)));
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("sortedSetOfPaths").getGenericType(),ImmutableList.of(invalidPath)));
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("setOfPaths").getGenericType(),ImmutableList.of(invalidPath)));
  assertSameMessage(pathCoerceException,getCoerceException(SourcePath.class,invalidPath));
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("eitherListOfStringsOrPath").getGenericType(),invalidPath));
  assertSameMessage(pathCoerceException,getCoerceException(TestFields.class.getField("eitherPathOrListOfStrings").getGenericType(),invalidPath));
  ImmutableList<Integer> invalidListOfStrings=ImmutableList.of(1,4,5);
  CoerceFailedException listOfStringsException=getCoerceException(TestFields.class.getField("listOfStrings").getGenericType(),invalidListOfStrings);
  assertSameMessage(listOfStringsException,getCoerceException(TestFields.class.getField("eitherListOfStringsOrPath").getGenericType(),invalidListOfStrings));
  assertSameMessage(listOfStringsException,getCoerceException(TestFields.class.getField("eitherPathOrListOfStrings").getGenericType(),invalidListOfStrings));
}
