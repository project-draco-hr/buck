def test_loadTestsFromModule__load_tests(self):
    m = types.ModuleType('m')


    class MyTestCase(unittest2.TestCase):

        def test(self):
            pass
    m.testcase_1 = MyTestCase
    load_tests_args = []

    def load_tests(loader, tests, pattern):
        self.assertIsInstance(tests, unittest2.TestSuite)
        load_tests_args.extend((loader, tests, pattern))
        return tests
    m.load_tests = load_tests
    loader = unittest2.TestLoader()
    suite = loader.loadTestsFromModule(m)
    self.assertIsInstance(suite, unittest2.TestSuite)
    self.assertEquals(load_tests_args, [loader, suite, None])
    load_tests_args = []
    suite = loader.loadTestsFromModule(m, use_load_tests=False)
    self.assertEquals(load_tests_args, [])
