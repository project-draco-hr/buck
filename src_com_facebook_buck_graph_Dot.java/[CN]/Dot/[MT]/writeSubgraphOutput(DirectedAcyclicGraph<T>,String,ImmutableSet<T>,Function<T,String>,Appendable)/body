{
  final ImmutableSortedSet.Builder<String> builder=ImmutableSortedSet.naturalOrder();
  output.append("digraph " + graphName + " {\n");
  new AbstractBottomUpTraversal<T,Object>(graph){
    @Override public void visit(    T node){
      if (!nodesToFilter.contains(node)) {
        return;
      }
      String source=nodeToName.apply(node);
      for (      T sink : Sets.filter(graph.getOutgoingNodesFor(node),Predicates.in(nodesToFilter))) {
        String sinkName=nodeToName.apply(sink);
        builder.add(String.format("  %s -> %s;\n",source,sinkName));
      }
    }
  }
.traverse();
  for (  String line : builder.build()) {
    output.append(line);
  }
  output.append("}\n");
}
