{
  output.append("digraph " + graphName + " {\n");
  new AbstractBottomUpTraversal<T,RuntimeException>(graph){
    @Override public void visit(    T node){
      String source=nodeToName.apply(node);
      for (      T sink : graph.getOutgoingNodesFor(node)) {
        String sinkName=nodeToName.apply(sink);
        try {
          output.append(String.format("  %s -> %s;\n",source,sinkName));
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
.traverse();
  output.append("}\n");
}
