def test_assertRaises(self):

    def _raise(e):
        raise e
    self.assertRaises(KeyError, _raise, KeyError)
    self.assertRaises(KeyError, _raise, KeyError('key'))
    try:
        self.assertRaises(KeyError, (lambda : None))
    except self.failureException as e:
        self.assertIn('KeyError not raised', e.args)
    else:
        self.fail("assertRaises() didn't fail")
    try:
        self.assertRaises(KeyError, _raise, ValueError)
    except ValueError:
        pass
    else:
        self.fail("assertRaises() didn't let exception pass through")
    with self.assertRaises(KeyError) as cm:
        try:
            raise KeyError
        except Exception as e:
            raise
    self.assertIs(cm.exception, e)
    with self.assertRaises(KeyError):
        raise KeyError('key')
    try:
        with self.assertRaises(KeyError):
            pass
    except self.failureException as e:
        self.assertIn('KeyError not raised', e.args)
    else:
        self.fail("assertRaises() didn't fail")
    try:
        with self.assertRaises(KeyError):
            raise ValueError
    except ValueError:
        pass
    else:
        self.fail("assertRaises() didn't let exception pass through")
