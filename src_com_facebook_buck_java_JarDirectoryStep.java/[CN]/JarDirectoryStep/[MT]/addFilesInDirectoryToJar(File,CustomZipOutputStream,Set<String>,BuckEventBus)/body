{
  new DirectoryTraversal(directory){
    @Override public void visit(    File file,    String relativePath){
      JarEntry entry=new JarEntry(relativePath);
      String entryName=entry.getName();
      entry.setTime(file.lastModified());
      try {
        if (!isDuplicateAllowed(entryName) && !alreadyAddedEntries.add(entryName)) {
          if (!entryName.endsWith("/")) {
            eventBus.post(ConsoleEvent.create(determineSeverity(entry),"Duplicate found when adding directory to jar: %s",relativePath));
          }
          return;
        }
        jar.putNextEntry(entry);
        Files.copy(file,jar);
        jar.closeEntry();
      }
 catch (      IOException e) {
        Throwables.propagate(e);
      }
    }
    @Override public void visitDirectory(    File directory,    String relativePath) throws IOException {
      if (relativePath.isEmpty()) {
        return;
      }
      String entryName=relativePath + "/";
      if (alreadyAddedEntries.contains(entryName)) {
        return;
      }
      JarEntry entry=new JarEntry(entryName);
      entry.setTime(directory.lastModified());
      jar.putNextEntry(entry);
      jar.closeEntry();
    }
  }
.traverse();
}
