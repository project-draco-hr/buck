{
  Iterator<String> argumentIterator=arguments.iterator();
  if (!argumentIterator.hasNext()) {
    return ImmutableList.of();
  }
  ImmutableList.Builder<ImmutableList<String>> commands=ImmutableList.builder();
  ImmutableList.Builder<String> commandBuilder=ImmutableList.builder();
  String firstArgument=argumentIterator.next();
  commandBuilder.addAll(commandPrefix).add(firstArgument);
  int commandLength=commandPrefixLength + firstArgument.length() + 1;
  while (argumentIterator.hasNext()) {
    String argument=argumentIterator.next();
    int updatedCommandLength=commandLength + argument.length() + 1;
    if (updatedCommandLength > desiredLimit) {
      commands.add(commandBuilder.build());
      commandBuilder=ImmutableList.<String>builder().addAll(commandPrefix);
      commandLength=commandPrefixLength;
    }
    commandBuilder.add(argument);
    commandLength+=argument.length() + 1;
  }
  commands.add(commandBuilder.build());
  return commands.build();
}
