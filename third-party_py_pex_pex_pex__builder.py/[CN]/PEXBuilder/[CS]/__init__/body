def __init__(self, path=None, interpreter=None, chroot=None, pex_info=None, preamble=None, copy=False):
    'Initialize a pex builder.\n\n    :keyword path: The path to write the PEX as it is built.  If ``None`` is specified,\n      a temporary directory will be created.\n    :keyword interpreter: The interpreter to use to build this PEX environment.  If ``None``\n      is specified, the current interpreter is used.\n    :keyword chroot: If specified, preexisting :class:`Chroot` to use for building the PEX.\n    :keyword pex_info: A preexisting PexInfo to use to build the PEX.\n    :keyword preamble: If supplied, execute this code prior to bootstrapping this PEX\n      environment.\n    :type preamble: str\n    :keyword copy: If False, attempt to create the pex environment via hard-linking, falling\n                   back to copying across devices. If True, always copy.\n\n    .. versionchanged:: 0.8\n      The temporary directory created when ``path`` is not specified is now garbage collected on\n      interpreter exit.\n    '
    self._chroot = (chroot or Chroot((path or safe_mkdtemp())))
    self._pex_info = (pex_info or PexInfo.default())
    self._frozen = False
    self._interpreter = (interpreter or PythonInterpreter.get())
    self._shebang = self._interpreter.identity.hashbang()
    self._logger = logging.getLogger(__name__)
    self._preamble = to_bytes((preamble or ''))
    self._copy = copy
    self._distributions = set()
