"Interpret PEP 345 environment markers.\n\nEXPR [in|==|!=|not in] EXPR [or|and] ...\n\nwhere EXPR belongs to any of those:\n\n    python_version = '%s.%s' % (sys.version_info[0], sys.version_info[1])\n    python_full_version = sys.version.split()[0]\n    os.name = os.name\n    sys.platform = sys.platform\n    platform.version = platform.version()\n    platform.machine = platform.machine()\n    platform.python_implementation = platform.python_implementation()\n    a free string, like '2.6', or 'win32'\n"
__all__ = ['default_environment', 'compile', 'interpret']
import ast
import os
import platform
import sys
import weakref
_builtin_compile = compile
try:
    from platform import python_implementation
except ImportError:
    if (os.name == 'java'):

        def python_implementation():
            return 'Jython'
    else:
        raise
_VARS = {'sys.platform': sys.platform, 'python_version': ('%s.%s' % sys.version_info[:2]), 'python_full_version': sys.version.split(' ', 1)[0], 'os.name': os.name, 'platform.version': platform.version(), 'platform.machine': platform.machine(), 'platform.python_implementation': python_implementation(), 'extra': None, }
for var in list(_VARS.keys()):
    if ('.' in var):
        _VARS[var.replace('.', '_')] = _VARS[var]
_cache = weakref.WeakValueDictionary()
