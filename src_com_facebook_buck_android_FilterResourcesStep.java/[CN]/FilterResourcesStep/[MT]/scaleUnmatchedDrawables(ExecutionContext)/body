{
  ProjectFilesystem filesystem=context.getProjectFilesystem();
  Filters.Density targetDensity=Filters.Density.ORDERING.max(targetDensities);
  for (  String drawable : drawableFinder.findDrawables(inResDirToOutResDirMap.values())) {
    File drawableFile=filesystem.getFileForRelativePath(drawable);
    if (drawable.endsWith(".9.png")) {
      continue;
    }
    Filters.Qualifiers qualifiers=new Filters.Qualifiers(drawableFile);
    Filters.Density density=qualifiers.density;
    if (!targetDensities.contains(density)) {
      String destination=drawable.replaceFirst("((?:^|/)drawable[^/]*-)" + Pattern.quote(density.toString()) + "(-|$|/)","$1" + targetDensity + "$2");
      double factor=targetDensity.value() / density.value();
      if (factor >= 1.0) {
        continue;
      }
      filesystem.createParentDirs(destination);
      imageScaler.scale(factor,drawable,destination,context);
      if (!filesystem.deleteFileAtPath(drawable)) {
        throw new HumanReadableException("Cannot delete file: " + drawable);
      }
      String parent=drawableFile.getParent();
      if (filesystem.listFiles(parent).length == 0 && !filesystem.deleteFileAtPath(parent)) {
        throw new HumanReadableException("Cannot delete directory: " + parent);
      }
    }
  }
}
