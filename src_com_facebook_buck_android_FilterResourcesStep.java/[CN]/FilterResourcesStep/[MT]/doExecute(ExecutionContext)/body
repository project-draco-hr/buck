{
  List<Predicate<File>> filePredicates=Lists.newArrayList();
  final boolean canDownscale=imageScaler != null && imageScaler.isAvailable(context);
  if (filterDrawables) {
    Set<Path> drawables=drawableFinder.findDrawables(inResDirToOutResDirMap.keySet());
    filePredicates.add(Filters.createImageDensityFilter(drawables,targetDensities,canDownscale));
  }
  if (filterStrings) {
    final ProjectFilesystem filesystem=context.getProjectFilesystem();
    filePredicates.add(new Predicate<File>(){
      @Override public boolean apply(      File input){
        String inputPath=input.getAbsolutePath();
        Path pathRelativeToProjectRoot=filesystem.getRootPath().toAbsolutePath().normalize().relativize(Paths.get(inputPath));
        if (!NON_ENGLISH_STRING_PATH.matcher(pathRelativeToProjectRoot.toString()).matches()) {
          return true;
        }
        for (        Path whitelistedStringDir : whitelistedStringDirs) {
          if (pathRelativeToProjectRoot.startsWith(whitelistedStringDir)) {
            return true;
          }
        }
        nonEnglishStringFilesBuilder.add(pathRelativeToProjectRoot);
        return false;
      }
    }
);
  }
  filteredDirectoryCopier.copyDirs(inResDirToOutResDirMap,Predicates.and(filePredicates));
  if (canDownscale && filterDrawables) {
    scaleUnmatchedDrawables(context);
  }
  return 0;
}
