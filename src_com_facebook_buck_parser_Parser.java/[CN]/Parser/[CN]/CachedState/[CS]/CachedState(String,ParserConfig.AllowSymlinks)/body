{
  this.memoizedTargetNodes=CacheBuilder.newBuilder().<BuildTarget,TargetNode<?>>build();
  this.symlinkExistenceCache=Maps.newHashMap();
  this.buildInputPathsUnderSymlink=Sets.newHashSet();
  this.parsedBuildFiles=ArrayListMultimap.create();
  this.targetsToFile=Maps.newHashMap();
  this.pathsToBuildTargets=ArrayListMultimap.create();
  this.buildTargetHashCodeCache=CacheBuilder.newBuilder().build(new CacheLoader<BuildTarget,HashCode>(){
    @Override public HashCode load(    BuildTarget buildTarget) throws IOException, InterruptedException {
      return loadHashCodeForBuildTarget(buildTarget);
    }
  }
);
  this.buildFileDependents=ArrayListMultimap.create();
  this.buildFile=buildFileName;
  this.allowSymlinks=allowSymlinks;
}
