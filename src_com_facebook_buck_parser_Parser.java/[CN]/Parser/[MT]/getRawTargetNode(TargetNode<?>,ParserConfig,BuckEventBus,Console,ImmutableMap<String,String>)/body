{
  BuildTarget buildTarget=targetNode.getBuildTarget();
  Path buildFile=cell.getAbsolutePathToBuildFile(buildTarget);
  List<Map<String,Object>> rules;
  if (state.isParsed(buildFile)) {
    rules=state.getRawRules(buildFile);
  }
 else {
    try {
      rules=parseBuildFile(cell.getFilesystem().getRootPath(),buildFile,parserConfig,environment,console,eventBus);
    }
 catch (    BuildTargetException e) {
      return null;
    }
  }
  Map<String,Object> targetRule=null;
  for (  Map<String,Object> rule : rules) {
    String name=(String)Preconditions.checkNotNull(rule.get("name"));
    if (name.equals(buildTarget.getShortName())) {
      targetRule=rule;
      break;
    }
  }
  if (targetRule == null) {
    return null;
  }
  targetRule.put("buck.direct_dependencies",ImmutableList.copyOf((Iterables.transform(targetNode.getDeps(),Functions.toStringFunction()))));
  SortedMap<String,Object> sortedTargetRule=Maps.newTreeMap();
  sortedTargetRule.putAll(targetRule);
  return sortedTargetRule;
}
