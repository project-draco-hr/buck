{
  ImmutableSet.Builder<BuildTarget> targets=ImmutableSet.builder();
  for (  Path buildFile : spec.getBuildFileSpec().findBuildFiles(cell)) {
    if (!cell.getFilesystem().isFile(buildFile)) {
      throw new MissingBuildFileException(spec,cell.getRoot().relativize(buildFile));
    }
    ProjectBuildFileParser buildFileParser=buildFileParsers.create(cell);
    List<Map<String,Object>> parsed=parseBuildFile(cell.getFilesystem().getRootPath(),cell.getFilesystem().resolve(buildFile),parserConfig,buildFileParser,environment);
    List<TargetNode<?>> nodes=Lists.newArrayListWithCapacity(parsed.size());
    for (    Map<String,Object> map : parsed) {
      BuildTarget target=parseBuildTargetFromRawRule(cell.getFilesystem().getRootPath(),map);
      TargetNode<?> node=getTargetNode(target);
      nodes.add(node);
    }
    targets.addAll(spec.filter(nodes));
  }
  return targets.build();
}
