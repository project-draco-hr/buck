{
  for (  Map<String,Object> map : rules) {
    if (isMetaRule(map)) {
      parseMetaRule(map);
      continue;
    }
    BuildRuleType buildRuleType=parseBuildRuleTypeFromRawRule(map);
    BuildTarget target=parseBuildTargetFromRawRule(map);
    targetsToFile.put(target,normalize(Paths.get((String)map.get("buck.base_path"))).resolve("BUCK").toAbsolutePath());
    BuildRuleFactory<?> factory=buildRuleTypes.getFactory(buildRuleType);
    if (factory == null) {
      throw new HumanReadableException("Unrecognized rule %s while parsing %s.",buildRuleType,target.getBuildFile(projectFilesystem));
    }
    BuildFileTree buildFileTree;
    buildFileTree=buildFileTreeCache.getInput();
    BuildRuleBuilder<?> buildRuleBuilder;
    BuildRuleFactoryParams factoryParams=new BuildRuleFactoryParams(map,projectFilesystem,buildFileTree,buildTargetParser,target,ruleKeyBuilderFactory);
    buildRuleBuilder=factory.newInstance(factoryParams);
    Object existingRule=knownBuildTargets.put(target,buildRuleBuilder);
    if (existingRule != null) {
      throw new RuntimeException("Duplicate definition for " + target.getFullyQualifiedName());
    }
    parsedBuildFiles.put(normalize(target.getBuildFile(projectFilesystem).toPath()),map);
  }
}
