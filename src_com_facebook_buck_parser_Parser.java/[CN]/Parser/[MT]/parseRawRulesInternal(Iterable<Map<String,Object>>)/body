{
  for (  Map<String,Object> map : rules) {
    if (isMetaRule(map)) {
      parseMetaRule(map);
      continue;
    }
    BuildRuleType buildRuleType=parseBuildRuleTypeFromRawRule(map);
    BuildTarget target=parseBuildTargetFromRawRule(map);
    targetsToFile.put(target,normalize(Paths.get((String)map.get("buck.base_path"))).resolve("BUCK").toAbsolutePath());
    Description<?> description=repository.getDescription(buildRuleType);
    if (description == null) {
      throw new HumanReadableException("Unrecognized rule %s while parsing %s.",buildRuleType,target.getBuildFile(repository.getFilesystem()));
    }
    BuildRuleFactoryParams factoryParams=new BuildRuleFactoryParams(map,repository.getFilesystem(),buildTargetParser,target,ruleKeyBuilderFactory);
    TargetNode<?> targetNode=new TargetNode<>(description,factoryParams);
    TargetNode<?> existingTargetNode=knownBuildTargets.put(target,targetNode);
    if (existingTargetNode != null) {
      throw new HumanReadableException("Duplicate definition for " + target);
    }
    parsedBuildFiles.put(normalize(target.getBuildFile(repository.getFilesystem()).toPath()),map);
  }
}
