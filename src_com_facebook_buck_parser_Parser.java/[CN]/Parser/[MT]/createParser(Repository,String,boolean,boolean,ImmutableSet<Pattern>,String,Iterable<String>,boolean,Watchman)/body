{
  return new Parser(repository,enforceBuckPackageBoundary,tempFilePatterns,buildFileName,new Supplier<BuildFileTree>(){
    @Override public BuildFileTree get(){
      return new FilesystemBackedBuildFileTree(repository.getFilesystem(),buildFileName);
    }
  }
,new DefaultProjectBuildFileParserFactory(ProjectBuildFileParserOptions.builder().setProjectRoot(repository.getFilesystem().getRootPath()).setPythonInterpreter(pythonInterpreter).setAllowEmptyGlobs(allowEmptyGlobs).setBuildFileName(buildFileName).setDefaultIncludes(defaultIncludes).setDescriptions(repository.getAllDescriptions()).setUseWatchmanGlob(useWatchmanGlob).setWatchmanWatchRoot(watchman.getWatchRoot()).setWatchmanProjectPrefix(watchman.getProjectPrefix()).build()));
}
