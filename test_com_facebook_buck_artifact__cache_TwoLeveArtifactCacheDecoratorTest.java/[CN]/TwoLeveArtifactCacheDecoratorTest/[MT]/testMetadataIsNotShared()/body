{
  InMemoryArtifactCache inMemoryArtifactCache=new InMemoryArtifactCache();
  TwoLevelArtifactCacheDecorator twoLevelCache=new TwoLevelArtifactCacheDecorator(inMemoryArtifactCache,new ProjectFilesystem(tmp.getRoot()),MoreExecutors.newDirectExecutorService(),true,0L);
  LazyPath dummyFile=LazyPath.ofInstance(tmp.newFile());
  final String testMetadataKey="testMetaKey";
  twoLevelCache.store(ImmutableSet.of(dummyRuleKey),ImmutableMap.of(testMetadataKey,"value1"),BorrowablePath.notBorrowablePath(dummyFile.get()));
  twoLevelCache.store(ImmutableSet.of(dummyRuleKey2),ImmutableMap.of(testMetadataKey,"value2"),BorrowablePath.notBorrowablePath(dummyFile.get()));
  CacheResult fetch1=twoLevelCache.fetch(dummyRuleKey,dummyFile);
  CacheResult fetch2=twoLevelCache.fetch(dummyRuleKey2,dummyFile);
  assertEquals(fetch1.getMetadata().get(TwoLevelArtifactCacheDecorator.METADATA_KEY),fetch2.getMetadata().get(TwoLevelArtifactCacheDecorator.METADATA_KEY));
  assertNotEquals(fetch1.getMetadata().get(testMetadataKey),fetch2.getMetadata().get(testMetadataKey));
  twoLevelCache.close();
}
