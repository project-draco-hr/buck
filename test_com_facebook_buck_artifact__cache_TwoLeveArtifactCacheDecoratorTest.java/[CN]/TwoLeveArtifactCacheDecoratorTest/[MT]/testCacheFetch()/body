{
  InMemoryArtifactCache inMemoryArtifactCache=new InMemoryArtifactCache();
  TwoLevelArtifactCacheDecorator twoLevelCache=new TwoLevelArtifactCacheDecorator(inMemoryArtifactCache,new ProjectFilesystem(tmp.getRoot()),MoreExecutors.newDirectExecutorService(),0L);
  LazyPath dummyFile=LazyPath.ofInstance(tmp.newFile());
  assertThat(twoLevelCache.fetch(dummyRuleKey,dummyFile).getType(),Matchers.equalTo(CacheResultType.MISS));
  twoLevelCache.store(ImmutableSet.of(dummyRuleKey),ImmutableMap.<String,String>of(),BorrowablePath.notBorrowablePath(dummyFile.get()));
  assertThat(twoLevelCache.fetch(dummyRuleKey,dummyFile).getType(),Matchers.equalTo(CacheResultType.HIT));
  twoLevelCache.store(ImmutableSet.of(dummyRuleKey2),ImmutableMap.<String,String>of(),BorrowablePath.notBorrowablePath(dummyFile.get()));
  assertThat(twoLevelCache.fetch(dummyRuleKey2,dummyFile).getType(),Matchers.equalTo(CacheResultType.HIT));
  assertThat(inMemoryArtifactCache.getArtifactCount(),Matchers.equalTo(3));
  twoLevelCache.close();
}
