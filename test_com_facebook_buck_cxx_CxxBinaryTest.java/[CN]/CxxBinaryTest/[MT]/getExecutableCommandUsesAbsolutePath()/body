{
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(ruleResolver);
  BuildRuleParams linkParams=new FakeBuildRuleParamsBuilder("//:link").build();
  Path bin=Paths.get("path/to/exectuable");
  CxxLink cxxLink=ruleResolver.addToIndex(new CxxLink(linkParams,pathResolver,CxxPlatformUtils.DEFAULT_PLATFORM.getLd().resolve(ruleResolver),bin,ImmutableList.<Arg>of(),Optional.<RuleScheduleInfo>absent(),true));
  BuildRuleParams params=new FakeBuildRuleParamsBuilder("//:target").build();
  CxxBinary binary=ruleResolver.addToIndex(new CxxBinary(params.appendExtraDeps(ImmutableSortedSet.<BuildRule>of(cxxLink)),ruleResolver,pathResolver,cxxLink,new CommandTool.Builder().addArg(new SourcePathArg(pathResolver,new BuildTargetSourcePath(cxxLink.getBuildTarget()))).build(),ImmutableSortedSet.<FrameworkPath>of(),ImmutableList.<BuildTarget>of(),params.getBuildTarget()));
  ImmutableList<String> command=binary.getExecutableCommand().getCommandPrefix(pathResolver);
  assertTrue(Paths.get(command.get(0)).isAbsolute());
}
