{
  final TargetGraph subgraph=projectGraph.getSubgraph(subgraphRoots);
  return FluentIterable.from(projectGraph.getNodes()).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> node){
      return associatedTargetNodePredicate.apply(node,subgraph);
    }
  }
).toSet();
}
