{
  ImmutableMap.Builder<PBXTarget,Path> targetToProjectPathMapBuilder=ImmutableMap.builder();
  PBXTarget rootTarget=new PBXNativeTarget("rootRule",ProductType.STATIC_LIBRARY);
  rootTarget.setGlobalID("rootGID");
  rootTarget.setProductReference(new PBXFileReference("root.a","root.a",PBXReference.SourceTree.BUILT_PRODUCTS_DIR));
  Path pbxprojectPath=Paths.get("foo/Foo.xcodeproj/project.pbxproj");
  targetToProjectPathMapBuilder.put(rootTarget,pbxprojectPath);
  SchemeGenerator schemeGenerator=new SchemeGenerator(projectFilesystem,Optional.of(rootTarget),ImmutableSet.of(rootTarget),ImmutableSet.<PBXTarget>of(),ImmutableSet.<PBXTarget>of(),"TestScheme",Paths.get("_gen/Foo.xcworkspace/scshareddata/xcshemes"),Optional.of("/RemoteApp"),SchemeActionType.DEFAULT_CONFIG_NAMES,targetToProjectPathMapBuilder.build());
  Path schemePath=schemeGenerator.writeScheme();
  DocumentBuilderFactory dbFactory=DocumentBuilderFactory.newInstance();
  DocumentBuilder dBuilder=dbFactory.newDocumentBuilder();
  Document scheme=dBuilder.parse(projectFilesystem.newFileInputStream(schemePath));
  XPathFactory xpathFactory=XPathFactory.newInstance();
  XPath remoteRunnableLaunchActionXPath=xpathFactory.newXPath();
  XPathExpression remoteRunnableLaunchActionExpr=remoteRunnableLaunchActionXPath.compile("//LaunchAction/RemoteRunnable");
  NodeList remoteRunnables=(NodeList)remoteRunnableLaunchActionExpr.evaluate(scheme,XPathConstants.NODESET);
  assertThat(remoteRunnables.getLength(),equalTo(1));
  Node remoteRunnable=remoteRunnables.item(0);
  assertThat(remoteRunnable.getAttributes().getNamedItem("runnableDebuggingMode").getNodeValue(),equalTo("2"));
  assertThat(remoteRunnable.getAttributes().getNamedItem("BundleIdentifier").getNodeValue(),equalTo("com.apple.springboard"));
  assertThat(remoteRunnable.getAttributes().getNamedItem("RemotePath").getNodeValue(),equalTo("/RemoteApp"));
  XPath buildXpath=xpathFactory.newXPath();
  XPathExpression buildExpr=buildXpath.compile("//LaunchAction//BuildableReference/@BlueprintIdentifier");
  NodeList buildNodes=(NodeList)buildExpr.evaluate(scheme,XPathConstants.NODESET);
  assertThat(buildNodes.getLength(),equalTo(2));
  assertThat(buildNodes.item(0).getNodeValue(),equalTo("rootGID"));
  assertThat(buildNodes.item(1).getNodeValue(),equalTo("rootGID"));
}
