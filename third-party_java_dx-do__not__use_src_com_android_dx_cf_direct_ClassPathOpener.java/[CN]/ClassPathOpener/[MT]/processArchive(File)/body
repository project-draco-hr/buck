{
  ZipFile zip=new ZipFile(file);
  ByteArrayOutputStream baos=new ByteArrayOutputStream(40000);
  byte[] buf=new byte[20000];
  boolean any=false;
  ArrayList<? extends java.util.zip.ZipEntry> entriesList=Collections.list(zip.entries());
  if (sort) {
    Collections.sort(entriesList,new Comparator<ZipEntry>(){
      public int compare(      ZipEntry a,      ZipEntry b){
        return compareClassNames(a.getName(),b.getName());
      }
    }
);
  }
  consumer.onProcessArchiveStart(file);
  for (  ZipEntry one : entriesList) {
    if (one.isDirectory()) {
      continue;
    }
    String path=one.getName();
    if (filter.accept(path)) {
      InputStream in=zip.getInputStream(one);
      baos.reset();
      for (; ; ) {
        int amt=in.read(buf);
        if (amt < 0) {
          break;
        }
        baos.write(buf,0,amt);
      }
      in.close();
      byte[] bytes=baos.toByteArray();
      any|=consumer.processFileBytes(path,one.getTime(),bytes);
    }
  }
  zip.close();
  return any;
}
