{
  BuildCommand buildCommand=new BuildCommand(arguments);
  Pair<ActionGraph,BuildRuleResolver> actionGraphAndResolver;
  try (CommandThreadManager pool=new CommandThreadManager("Simulate",params.getBuckConfig().getWorkQueueExecutionOrder(),getConcurrencyLimit(params.getBuckConfig()))){
    actionGraphAndResolver=buildCommand.createActionGraphAndResolver(params,pool.getExecutor());
  }
   if (actionGraphAndResolver == null) {
    return 1;
  }
  SimulateTimes times=Strings.isNullOrEmpty(simulateTimesFile) ? SimulateTimes.createEmpty(ruleFallbackTimeMillis) : SimulateTimes.createFromJsonFile(params.getObjectMapper(),simulateTimesFile,ruleFallbackTimeMillis);
  BuildSimulator simulator=new BuildSimulator(times,actionGraphAndResolver.getFirst(),actionGraphAndResolver.getSecond(),params.getBuckConfig().getNumThreads());
  SimulateReport report=simulator.simulateBuild(params.getClock().currentTimeMillis(),buildCommand.getBuildTargets());
  outputReport(params.getObjectMapper(),report);
  String finishedMsg=String.format("Simulation report was successfully written to [%s]",simulateReportFile);
  params.getBuckEventBus().post(ConsoleEvent.create(Level.INFO,finishedMsg));
  return 0;
}
