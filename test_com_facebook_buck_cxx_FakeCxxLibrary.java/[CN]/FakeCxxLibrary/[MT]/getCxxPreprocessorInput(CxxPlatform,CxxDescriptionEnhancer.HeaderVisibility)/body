{
switch (headerVisibility) {
case PUBLIC:
    return CxxPreprocessorInput.builder().addRules(publicHeaderTarget,publicHeaderSymlinkTreeTarget).addIncludeRoots(publicHeaderSymlinkTreeRoot).build();
case PRIVATE:
  return CxxPreprocessorInput.builder().addRules(privateHeaderTarget,privateHeaderSymlinkTreeTarget).addIncludeRoots(privateHeaderSymlinkTreeRoot).build();
}
throw new RuntimeException("Invalid header visibility value: " + headerVisibility);
}
