{
  ExecutorService service=new LimitedThreadPoolExecutor(new CommandThreadFactory("SmartDexing"),new ConcurrencyLimit(Math.min(numThreads.or(determineOptimalThreadCount()),context.getConcurrencyLimit().threadLimit),context.getConcurrencyLimit().loadLimit));
  try {
    DefaultStepRunner stepRunner=new DefaultStepRunner(context);
    List<Step> dxSteps=generateDxCommands(context.getProjectFilesystem(),outputToInputs);
    stepRunner.runStepsInParallelAndWait(dxSteps,listeningDecorator(service));
  }
  finally {
    MoreExecutors.shutdown(service);
  }
}
