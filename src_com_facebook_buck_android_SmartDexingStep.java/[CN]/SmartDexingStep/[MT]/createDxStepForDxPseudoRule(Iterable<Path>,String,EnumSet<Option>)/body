{
  if (outputPath.endsWith(DexStore.XZ.getExtension())) {
    List<Step> steps=Lists.newArrayList();
    String tempDexJarOutput=outputPath.replaceAll("\\.jar\\.xz$",".tmp.jar");
    steps.add(new DxStep(tempDexJarOutput,filesToDex,dxOptions));
    String repackedJar=outputPath.replaceAll("\\.xz$","");
    steps.add(new RepackZipEntriesStep(tempDexJarOutput,repackedJar,ImmutableSet.of("classes.dex"),ZipStep.MIN_COMPRESSION_LEVEL));
    steps.add(new RmStep(tempDexJarOutput,true));
    steps.add(new XzStep(repackedJar));
    return new CompositeStep(steps);
  }
 else   if (outputPath.endsWith(DexStore.JAR.getExtension())) {
    return new DxStep(outputPath,filesToDex,dxOptions);
  }
 else {
    throw new IllegalArgumentException(String.format("Suffix of %s does not have a corresponding DexStore type.",outputPath));
  }
}
