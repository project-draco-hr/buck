{
  JavacOptions.Builder javacOptions=JavaLibraryDescription.getJavacOptions(args,javacEnv);
  AnnotationProcessingParams annotationParams=args.buildAnnotationProcessingParams(params.getBuildTarget(),params.getProjectFilesystem());
  javacOptions.setAnnotationProcessingData(annotationParams);
  AndroidLibraryGraphEnhancer graphEnhancer=new AndroidLibraryGraphEnhancer(params.getBuildTarget(),params.copyWithExtraDeps(args.exportedDeps.get()),javacOptions.build());
  Optional<DummyRDotJava> dummyRDotJava=graphEnhancer.createBuildableForAndroidResources(resolver,false);
  ImmutableSet<Path> additionalClasspathEntries=ImmutableSet.of();
  if (dummyRDotJava.isPresent()) {
    additionalClasspathEntries=ImmutableSet.of(dummyRDotJava.get().getRDotJavaBinFolder());
    ImmutableSortedSet<BuildRule> newDeclaredDeps=ImmutableSortedSet.<BuildRule>naturalOrder().addAll(params.getDeclaredDeps()).add(dummyRDotJava.get()).build();
    params=params.copyWithDeps(newDeclaredDeps,params.getExtraDeps());
  }
  return new AndroidLibrary(params,args.srcs.get(),JavaLibraryDescription.validateResources(args,params.getProjectFilesystem()),args.proguardConfig,args.postprocessClassesCommands.get(),args.exportedDeps.get(),args.providedDeps.get(),additionalClasspathEntries,javacOptions.build(),args.resourcesRoot,args.manifest,false);
}
