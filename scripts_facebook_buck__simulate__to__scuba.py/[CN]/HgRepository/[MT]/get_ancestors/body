def get_ancestors(self, rev, limit=None):
    printf(u'Getting {0} HG revisions...'.format(limit))
    query = (u'::%s' % rev)
    query = (u'sort(%s,-rev)' % query)
    command = [u'hg', u'log', u'-r', query, u'-T', u'{node}\x01{date}\x01{author|user}\x02']
    command.extend([u'-l', str(limit)])
    history = self.run(command).split(u'\x02')
    revs = []
    for line in history:
        if (not line):
            continue
        (hash, date, author) = line.split(u'\x01')
        date = int(date.split(u'.')[0])
        commit = HgCommit(self, hash, date, author)
        revs.append(commit)
    printf(u'Sorting {0} HG revisions...'.format(limit))
    revs = sorted(revs, key=(lambda r: r.date), reverse=True)
    printf(u'Finished sorting {0} HG revisions.'.format(limit))
    return revs
