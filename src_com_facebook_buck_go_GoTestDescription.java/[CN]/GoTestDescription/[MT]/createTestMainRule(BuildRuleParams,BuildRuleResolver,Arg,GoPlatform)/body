{
  Path packageName=getGoPackageName(resolver,params.getBuildTarget(),args);
  BuildRuleParams testTargetParams=params.copyWithBuildTarget(BuildTarget.builder(params.getBuildTarget()).addFlavors(TEST_LIBRARY_FLAVOR).build());
  BuildRule testLibrary=new NoopBuildRule(testTargetParams,new SourcePathResolver(resolver));
  resolver.addToIndex(testLibrary);
  BuildRule generatedTestMain=requireTestMainGenRule(params,resolver,args.srcs,packageName);
  GoBinary testMain=GoDescriptors.createGoBinaryRule(params.copyWithChanges(BuildTarget.builder(params.getBuildTarget()).addFlavors(ImmutableFlavor.of("test-main")).build(),Suppliers.ofInstance(ImmutableSortedSet.of(testLibrary)),Suppliers.ofInstance(ImmutableSortedSet.of(generatedTestMain))),resolver,goBuckConfig,ImmutableSet.<SourcePath>of(new BuildTargetSourcePath(generatedTestMain.getBuildTarget())),args.compilerFlags.get(),args.assemblerFlags.get(),args.linkerFlags.get(),platform);
  resolver.addToIndex(testMain);
  return testMain;
}
