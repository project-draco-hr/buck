{
  final Map<String,Pair<JarEntry,Optional<File>>> entries=Maps.newTreeMap();
  new DirectoryTraversal(directory){
    @Override public void visit(    File file,    String relativePath){
      JarEntry entry=new JarEntry(relativePath.replace('\\','/'));
      String entryName=entry.getName();
      entry.setTime(0);
      if (!isDuplicateAllowed(entryName) && !alreadyAddedEntries.add(entryName)) {
        if (!entryName.endsWith("/")) {
          eventBus.post(ConsoleEvent.create(determineSeverity(entry),"Duplicate found when adding directory to jar: %s",relativePath));
        }
        return;
      }
      entries.put(entry.getName(),new Pair<>(entry,Optional.of(file)));
    }
    @Override public void visitDirectory(    File directory,    String relativePath) throws IOException {
      if (relativePath.isEmpty()) {
        return;
      }
      String entryName=relativePath.replace('\\','/') + "/";
      if (alreadyAddedEntries.contains(entryName)) {
        return;
      }
      JarEntry entry=new JarEntry(entryName);
      entry.setTime(0);
      entries.put(entry.getName(),new Pair<>(entry,Optional.<File>absent()));
    }
  }
.traverse();
  for (  Pair<JarEntry,Optional<File>> entry : entries.values()) {
    jar.putNextEntry(entry.getFirst());
    if (entry.getSecond().isPresent()) {
      Files.copy(entry.getSecond().get(),jar);
    }
    jar.closeEntry();
  }
}
