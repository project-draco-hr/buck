{
  try (ZipFile zip=new ZipFile(file.toFile())){
    zipEntryLoop:     for (Enumeration<? extends ZipEntry> entries=zip.entries(); entries.hasMoreElements(); ) {
      ZipEntry entry=entries.nextElement();
      String entryName=entry.getName();
      if (entryName.equals(JarFile.MANIFEST_NAME)) {
        Manifest readManifest=readManifest(zip,entry);
        merge(manifest,readManifest);
        continue;
      }
      if (!isDuplicateAllowed(entryName) && !alreadyAddedEntries.add(entryName)) {
        eventBus.post(ConsoleEvent.create(determineSeverity(entry),"Duplicate found when adding file to jar: %s",entryName));
        continue;
      }
      for (      Pattern p : blacklist) {
        if (p.matcher(entryName).matches()) {
          eventBus.post(ConsoleEvent.create(Level.FINE,"Skipping adding file to jar: %s",entryName));
          continue zipEntryLoop;
        }
      }
      ZipEntry newEntry=new ZipEntry(entry);
      if (entry.getMethod() == ZipEntry.DEFLATED) {
        newEntry.setCompressedSize(-1);
      }
      jar.putNextEntry(newEntry);
      try (InputStream inputStream=zip.getInputStream(entry)){
        ByteStreams.copy(inputStream,jar);
      }
       jar.closeEntry();
    }
  }
 catch (  ZipException e) {
    throw new IOException("Failed to process zip file " + file + ": "+ e.getMessage(),e);
  }
}
