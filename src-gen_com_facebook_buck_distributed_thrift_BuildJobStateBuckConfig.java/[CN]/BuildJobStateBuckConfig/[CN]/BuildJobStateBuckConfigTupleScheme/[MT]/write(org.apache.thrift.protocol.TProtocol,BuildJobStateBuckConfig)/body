{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetUserEnvironment()) {
    optionals.set(0);
  }
  if (struct.isSetRawBuckConfig()) {
    optionals.set(1);
  }
  if (struct.isSetArchitecture()) {
    optionals.set(2);
  }
  if (struct.isSetPlatform()) {
    optionals.set(3);
  }
  oprot.writeBitSet(optionals,4);
  if (struct.isSetUserEnvironment()) {
{
      oprot.writeI32(struct.userEnvironment.size());
      for (      Map.Entry<String,String> _iter14 : struct.userEnvironment.entrySet()) {
        oprot.writeString(_iter14.getKey());
        oprot.writeString(_iter14.getValue());
      }
    }
  }
  if (struct.isSetRawBuckConfig()) {
{
      oprot.writeI32(struct.rawBuckConfig.size());
      for (      Map.Entry<String,List<OrderedStringMapEntry>> _iter15 : struct.rawBuckConfig.entrySet()) {
        oprot.writeString(_iter15.getKey());
{
          oprot.writeI32(_iter15.getValue().size());
          for (          OrderedStringMapEntry _iter16 : _iter15.getValue()) {
            _iter16.write(oprot);
          }
        }
      }
    }
  }
  if (struct.isSetArchitecture()) {
    oprot.writeString(struct.architecture);
  }
  if (struct.isSetPlatform()) {
    oprot.writeString(struct.platform);
  }
}
