{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map8=iprot.readMapBegin();
          struct.userEnvironment=new HashMap<String,String>(2 * _map8.size);
          String _key9;
          String _val10;
          for (int _i11=0; _i11 < _map8.size; ++_i11) {
            _key9=iprot.readString();
            _val10=iprot.readString();
            struct.userEnvironment.put(_key9,_val10);
          }
          iprot.readMapEnd();
        }
        struct.setUserEnvironmentIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map12=iprot.readMapBegin();
      struct.rawBuckConfig=new HashMap<String,List<OrderedStringMapEntry>>(2 * _map12.size);
      String _key13;
      List<OrderedStringMapEntry> _val14;
      for (int _i15=0; _i15 < _map12.size; ++_i15) {
        _key13=iprot.readString();
{
          org.apache.thrift.protocol.TList _list16=iprot.readListBegin();
          _val14=new ArrayList<OrderedStringMapEntry>(_list16.size);
          OrderedStringMapEntry _elem17;
          for (int _i18=0; _i18 < _list16.size; ++_i18) {
            _elem17=new OrderedStringMapEntry();
            _elem17.read(iprot);
            _val14.add(_elem17);
          }
          iprot.readListEnd();
        }
        struct.rawBuckConfig.put(_key13,_val14);
      }
      iprot.readMapEnd();
    }
    struct.setRawBuckConfigIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
struct.architecture=iprot.readString();
struct.setArchitectureIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
struct.platform=iprot.readString();
struct.setPlatformIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
