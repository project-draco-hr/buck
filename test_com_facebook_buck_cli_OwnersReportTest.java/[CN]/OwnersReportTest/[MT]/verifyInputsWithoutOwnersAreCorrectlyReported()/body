{
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem(){
    @Override public File getFileForRelativePath(    String pathRelativeToProjectRoot){
      return new ExistingFile(getRootPath(),pathRelativeToProjectRoot);
    }
  }
;
  ImmutableSet<String> inputs=ImmutableSet.of("java/somefolder/badfolder/somefile.java","java/somefolder/perfect.java","com/test/subtest/random.java");
  ImmutableSet<Path> inputPaths=asPaths(inputs);
  BuildTarget target=BuildTargetFactory.newInstance("//base:name");
  TargetNode<?> targetNode=createTargetNode(target,ImmutableSet.<Path>of());
  CommandRunnerParams params=createOwnersReportRunnerParams(filesystem);
  OwnersReport report=OwnersReport.generateOwnersReport(params,targetNode,inputs);
  assertTrue(report.owners.isEmpty());
  assertTrue(report.nonFileInputs.isEmpty());
  assertTrue(report.nonExistentInputs.isEmpty());
  assertEquals(inputPaths,report.inputsWithNoOwners);
}
