{
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).setProjectFilesystem(filesystem).build();
  BuildRule rule=new UncachableRule(params,pathResolver,ImmutableList.<Step>of(),Paths.get("foo.out"));
  CachingBuildEngine cachingBuildEngine=cachingBuildEngineFactory().setRuleKeyFactoriesFunction(Functions.constant(new CachingBuildEngine.RuleKeyFactories(NOOP_RULE_KEY_FACTORY,NOOP_INPUT_BASED_RULE_KEY_FACTORY,NOOP_RULE_KEY_FACTORY,NOOP_DEP_FILE_RULE_KEY_FACTORY,NOOP_INPUT_COUNTING_RULE_KEY_FACTORY))).build();
  BuildResult result=cachingBuildEngine.build(buildContext,rule).get();
  assertEquals(BuildRuleSuccessType.BUILT_LOCALLY,result.getSuccess());
  assertEquals("Should not attempt to fetch from cache",CacheResultType.IGNORED,result.getCacheResult().getType());
  assertEquals("should not have written to the cache",0,cache.getArtifactCount());
}
