def match(self, path_pattern, match_entire=False):
    '\n        Return True if this path matches the given pattern.\n\n        If this path is absolute or if match_entire is True, the\n        entire path must match the pattern.  Otherwise, any suffix of\n        the path may match the pattern.\n        '
    cf = self._flavour.casefold
    path_pattern = cf(path_pattern)
    (drv, root, pat_parts) = self._flavour.parse_parts((path_pattern,))
    if (not pat_parts):
        raise ValueError('empty pattern')
    if (drv and (drv != cf(self._drv))):
        return False
    if (root and (root != cf(self._root))):
        return False
    parts = self._cparts
    if (len([x for x in pat_parts if (x != '**')]) > len(parts)):
        return False
    if (drv or root):
        if ((len(pat_parts) == 1) and (len(parts) == 1)):
            return True
        parts = parts[1:]
        pat_parts = pat_parts[1:]
        match_entire = True
    return self._apply_match(parts, pat_parts, match_entire)
