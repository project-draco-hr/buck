def parse_parts(self, parts):
    if _py2:
        parts = _py2_fsencode(parts)
    parsed = []
    sep = self.sep
    altsep = self.altsep
    drv = root = ''
    it = reversed(parts)
    for part in it:
        if (not part):
            continue
        if altsep:
            part = part.replace(altsep, sep)
        (drv, root, rel) = self.splitroot(part)
        if (sep in rel):
            for x in reversed(rel.split(sep)):
                if (x and (x != '.')):
                    parsed.append(intern(x))
        elif (rel and (rel != '.')):
            parsed.append(intern(rel))
        if (drv or root):
            if (not drv):
                for part in it:
                    drv = self.splitroot(part)[0]
                    if drv:
                        break
            break
    if (drv or root):
        parsed.append((drv + root))
    parsed.reverse()
    return (drv, root, parsed)
