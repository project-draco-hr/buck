def splitroot(self, part, sep=sep):
    first = part[0:1]
    second = part[1:2]
    if ((second == sep) and (first == sep)):
        (prefix, part) = self._split_extended_path(part)
        first = part[0:1]
        second = part[1:2]
    else:
        prefix = ''
    third = part[2:3]
    if ((second == sep) and (first == sep) and (third != sep)):
        index = part.find(sep, 2)
        if (index != (-1)):
            index2 = part.find(sep, (index + 1))
            if (index2 != (index + 1)):
                if (index2 == (-1)):
                    index2 = len(part)
                if prefix:
                    return ((prefix + part[1:index2]), sep, part[(index2 + 1):])
                else:
                    return (part[:index2], sep, part[(index2 + 1):])
    drv = root = ''
    if ((second == ':') and (first in self.drive_letters)):
        drv = part[:2]
        part = part[2:]
        first = third
    if (first == sep):
        root = first
        part = part.lstrip(sep)
    return ((prefix + drv), root, part)
