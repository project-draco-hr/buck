{
  StringBuilder builder=new StringBuilder();
  builder.append(String.format("// Generated by %s. DO NOT MODIFY.\n",source.getUnflavoredTarget()));
  builder.append("package ").append(javaPackage).append(";\n");
  builder.append("public class BuildConfig {\n");
  builder.append("  private BuildConfig() {}\n");
  final String prefix="  public static final ";
  for (  Field field : getNameToField().values()) {
    String type=field.getType();
    if ("boolean".equals(type)) {
      boolean isTrue="true".equals(field.getValue());
      if (!(isTrue || "false".equals(field.getValue()))) {
        throw new HumanReadableException("expected boolean literal but was: %s",field.getValue());
      }
      String value;
      if (useConstantExpressions) {
        value=String.valueOf(isTrue);
      }
 else {
        value="Boolean.parseBoolean(null)";
        if (isTrue) {
          value="!" + value;
        }
      }
      builder.append(prefix + "boolean " + field.getName()+ " = "+ value+ ";\n");
    }
 else {
      String typeSafeZero=PRIMITIVE_NUMERIC_TYPE_NAMES.contains(type) ? "0" : "null";
      String defaultValue=field.getValue();
      if (!useConstantExpressions) {
        defaultValue="!Boolean.parseBoolean(null) ? " + defaultValue + " : "+ typeSafeZero;
      }
      builder.append(prefix + type + " "+ field.getName()+ " = "+ defaultValue+ ";\n");
    }
  }
  builder.append("}\n");
  return builder.toString();
}
