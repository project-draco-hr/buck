{
  final BuildRule bundle=resolver.getRule(propagateFlavorsToTarget(params.getBuildTarget(),args.bundle));
  final SourcePathResolver sourcePathResolver=new SourcePathResolver(resolver);
  final Optional<ApplePackageConfigAndPlatformInfo> applePackageConfigAndPlatformInfo=getApplePackageConfig(params.getBuildTarget(),MacroArg.toMacroArgFunction(AbstractGenruleDescription.MACRO_HANDLER,params.getBuildTarget(),params.getCellRoots(),resolver));
  if (applePackageConfigAndPlatformInfo.isPresent()) {
    return new ExternallyBuiltApplePackage(params.copyWithExtraDeps(new Supplier<ImmutableSortedSet<BuildRule>>(){
      @Override public ImmutableSortedSet<BuildRule> get(){
        return ImmutableSortedSet.<BuildRule>naturalOrder().add(bundle).addAll(applePackageConfigAndPlatformInfo.get().getExpandedArg().getDeps(sourcePathResolver)).build();
      }
    }
),sourcePathResolver,applePackageConfigAndPlatformInfo.get(),new BuildTargetSourcePath(bundle.getBuildTarget()));
  }
 else {
    return new BuiltinApplePackage(params,sourcePathResolver,bundle);
  }
}
