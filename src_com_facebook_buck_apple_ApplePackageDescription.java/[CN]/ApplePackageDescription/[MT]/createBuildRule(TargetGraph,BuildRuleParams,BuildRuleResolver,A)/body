{
  final BuildRule bundle=resolver.getRule(propagateFlavorsToTarget(params.getBuildTarget(),args.bundle));
  BuildTarget targetWithPlatform;
  if (!Sets.intersection(appleCxxPlatformFlavorDomain.getFlavors(),params.getBuildTarget().getFlavors()).isEmpty()) {
    targetWithPlatform=params.getBuildTarget();
  }
 else {
    targetWithPlatform=params.getBuildTarget().withAppendedFlavors(defaultCxxPlatform.getFlavor());
  }
  if (!(bundle instanceof AppleBundle)) {
    throw new HumanReadableException("In %s, bundle='%s' must be an apple_bundle() but was %s().",params.getBuildTarget(),bundle.getFullyQualifiedName(),bundle.getType());
  }
  final SourcePathResolver sourcePathResolver=new SourcePathResolver(resolver);
  final Optional<ApplePackageConfigAndPlatformInfo> applePackageConfigAndPlatformInfo=getApplePackageConfig(targetWithPlatform,MacroArg.toMacroArgFunction(AbstractGenruleDescription.MACRO_HANDLER,params.getBuildTarget(),params.getCellRoots(),resolver));
  if (applePackageConfigAndPlatformInfo.isPresent()) {
    return new ExternallyBuiltApplePackage(params.copyWithExtraDeps(new Supplier<ImmutableSortedSet<BuildRule>>(){
      @Override public ImmutableSortedSet<BuildRule> get(){
        return ImmutableSortedSet.<BuildRule>naturalOrder().add(bundle).addAll(applePackageConfigAndPlatformInfo.get().getExpandedArg().getDeps(sourcePathResolver)).build();
      }
    }
),sourcePathResolver,applePackageConfigAndPlatformInfo.get(),new BuildTargetSourcePath(bundle.getBuildTarget()));
  }
 else {
    return new BuiltinApplePackage(params,sourcePathResolver,(AppleBundle)bundle);
  }
}
