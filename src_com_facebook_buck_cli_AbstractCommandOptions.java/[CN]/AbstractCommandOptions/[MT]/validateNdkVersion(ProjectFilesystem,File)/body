{
  Optional<String> minVersion=this.buckConfig.getMinimumNdkVersion();
  Optional<String> maxVersion=this.buckConfig.getMaximumNdkVersion();
  if (minVersion.isPresent() && maxVersion.isPresent()) {
    File versionPath=new File(ndkPath,"RELEASE.TXT");
    Optional<String> contents=projectFilesystem.readFirstLineFromFile(versionPath);
    String version;
    if (contents.isPresent()) {
      version=new StringTokenizer(contents.get()).nextToken();
    }
 else {
      throw new HumanReadableException("Failed to read NDK version from %s",versionPath.getPath());
    }
    if (version.length() < 2) {
      throw new HumanReadableException("Invalid NDK version: %s",version);
    }
    if (version.compareTo(minVersion.get()) < 0 || version.compareTo(maxVersion.get()) > 0) {
      throw new HumanReadableException("Supported NDK versions are between %s and %s but Buck is configured to use %s from %s",minVersion.get(),maxVersion.get(),version,ndkPath.getAbsolutePath());
    }
  }
 else   if (minVersion.isPresent() || maxVersion.isPresent()) {
    throw new HumanReadableException("Either both min_version and max_version are provided or neither are");
  }
}
