{
  NativeLinkable a=new Node("//:a");
  NativeLinkable b=new Node("//:b");
  NativeLinkable c=new SharedOnlyNode("//:c",ImmutableList.of(b));
  SharedNativeLinkTarget root=new Root("//:root",ImmutableList.of(a,c));
  Omnibus.OmnibusSpec spec=Omnibus.buildSpec(CxxPlatformUtils.DEFAULT_PLATFORM,ImmutableList.of(root),ImmutableList.<NativeLinkable>of());
  assertThat(spec.getGraph().getNodes(),Matchers.containsInAnyOrder(a.getBuildTarget()));
  assertThat(spec.getBody().keySet(),Matchers.containsInAnyOrder(a.getBuildTarget()));
  assertThat(spec.getRoots().keySet(),Matchers.containsInAnyOrder(root.getBuildTarget()));
  assertThat(spec.getDeps().keySet(),Matchers.<BuildTarget>empty());
  assertThat(spec.getExcluded().keySet(),Matchers.containsInAnyOrder(b.getBuildTarget(),c.getBuildTarget()));
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(resolver);
  ImmutableMap<String,SourcePath> libs=toSonameMap(Omnibus.getSharedLibraries(new FakeBuildRuleParamsBuilder(BuildTargetFactory.newInstance("//:rule")).build(),resolver,pathResolver,CxxPlatformUtils.DEFAULT_CONFIG,CxxPlatformUtils.DEFAULT_PLATFORM,ImmutableList.<Arg>of(),ImmutableList.of(root),ImmutableList.<NativeLinkable>of()));
  assertThat(libs.keySet(),Matchers.containsInAnyOrder(root.getBuildTarget().toString(),b.getBuildTarget().toString(),c.getBuildTarget().toString(),"libomnibus.so"));
  assertCxxLinkContainsNativeLinkableInput(getCxxLinkRule(pathResolver,libs.get(root.getBuildTarget().toString())),root.getSharedNativeLinkTargetInput(CxxPlatformUtils.DEFAULT_PLATFORM),c.getNativeLinkableInput(CxxPlatformUtils.DEFAULT_PLATFORM,Linker.LinkableDepType.SHARED));
  assertThat(libs.get(b.getBuildTarget().toString()),Matchers.not(Matchers.instanceOf(BuildTargetSourcePath.class)));
  assertThat(libs.get(c.getBuildTarget().toString()),Matchers.not(Matchers.instanceOf(BuildTargetSourcePath.class)));
  assertCxxLinkContainsNativeLinkableInput(getCxxLinkRule(pathResolver,libs.get("libomnibus.so")),a.getNativeLinkableInput(CxxPlatformUtils.DEFAULT_PLATFORM,Linker.LinkableDepType.STATIC_PIC));
}
