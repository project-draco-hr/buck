{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer()));
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  FakeFileHashCache hashCache=FakeFileHashCache.createFromStrings(ImmutableMap.of("different",Strings.repeat("d",40)));
  BuildRule fakeBuildRule=new FakeBuildRule(target,pathResolver);
  RuleKeyBuilder<RuleKey> builder;
  builder=new DefaultRuleKeyBuilderFactory(hashCache,pathResolver).newInstance(fakeBuildRule);
  defaultFlags.appendToRuleKey(builder,CxxPlatforms.DEFAULT_DEBUG_PATH_SANITIZER);
  RuleKey defaultRuleKey=builder.build();
  builder=new DefaultRuleKeyBuilderFactory(hashCache,pathResolver).newInstance(fakeBuildRule);
  alteredFlags.appendToRuleKey(builder,CxxPlatforms.DEFAULT_DEBUG_PATH_SANITIZER);
  RuleKey alteredRuleKey=builder.build();
  if (shouldDiffer) {
    Assert.assertNotEquals(defaultRuleKey,alteredRuleKey);
  }
 else {
    Assert.assertEquals(defaultRuleKey,alteredRuleKey);
  }
}
