{
  BuildRule rootRule=createBuildRuleWithDefaults(BuildTarget.builder("//foo","root").build(),ImmutableSortedSet.<BuildRule>of(),appleLibraryDescription);
  ImmutableMap.Builder<BuildRule,PBXTarget> buildRuleToTargetMapBuilder=ImmutableMap.builder();
  ImmutableMap.Builder<PBXTarget,Path> targetToProjectPathMapBuilder=ImmutableMap.builder();
  PBXTarget rootTarget=new PBXNativeTarget("rootRule");
  rootTarget.setGlobalID("rootGID");
  rootTarget.setProductReference(new PBXFileReference("root.a","root.a",PBXReference.SourceTree.BUILT_PRODUCTS_DIR));
  buildRuleToTargetMapBuilder.put(rootRule,rootTarget);
  Path pbxprojectPath=Paths.get("foo/Foo.xcodeproj/project.pbxproj");
  targetToProjectPathMapBuilder.put(rootTarget,pbxprojectPath);
  SchemeGenerator schemeGenerator=new SchemeGenerator(projectFilesystem,rootRule,ImmutableSet.of(rootRule),ImmutableSet.<BuildRule>of(),ImmutableSet.<BuildRule>of(),"TestScheme",Paths.get("_gen/Foo.xcworkspace/scshareddata/xcshemes"),SchemeActionType.DEFAULT_CONFIG_NAMES,buildRuleToTargetMapBuilder.build(),targetToProjectPathMapBuilder.build());
  Path schemePath=schemeGenerator.writeScheme();
  DocumentBuilderFactory dbFactory=DocumentBuilderFactory.newInstance();
  DocumentBuilder dBuilder=dbFactory.newDocumentBuilder();
  Document scheme=dBuilder.parse(projectFilesystem.newFileInputStream(schemePath));
  XPathFactory xpathFactory=XPathFactory.newInstance();
  XPath buildableReferenceXPath=xpathFactory.newXPath();
  XPathExpression buildableReferenceExpr=buildableReferenceXPath.compile("//BuildableReference");
  NodeList buildableReferences=(NodeList)buildableReferenceExpr.evaluate(scheme,XPathConstants.NODESET);
  assertThat(buildableReferences.getLength(),greaterThan(0));
  for (int i=0; i < buildableReferences.getLength(); i++) {
    NamedNodeMap attributes=buildableReferences.item(i).getAttributes();
    assertThat(attributes,notNullValue());
    assertThat(attributes.getNamedItem("BlueprintIdentifier"),notNullValue());
    assertThat(attributes.getNamedItem("BuildableIdentifier"),notNullValue());
    assertThat(attributes.getNamedItem("ReferencedContainer"),notNullValue());
    assertThat(attributes.getNamedItem("BlueprintName"),notNullValue());
    assertThat(attributes.getNamedItem("BuildableName"),notNullValue());
  }
}
