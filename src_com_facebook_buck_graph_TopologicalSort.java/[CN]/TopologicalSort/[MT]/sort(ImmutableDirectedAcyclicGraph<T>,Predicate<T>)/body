{
  AbstractBottomUpTraversal<T,ImmutableList<T>> traversal=new AbstractBottomUpTraversal<T,ImmutableList<T>>(graph){
    final ImmutableList.Builder<T> builder=ImmutableList.builder();
    @Override public void visit(    T node){
      if (inclusionPredicate.apply(node)) {
        builder.add(node);
      }
    }
    @Override public ImmutableList<T> getResult(){
      return builder.build();
    }
  }
;
  traversal.traverse();
  return traversal.getResult();
}
