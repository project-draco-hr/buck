{
  AppleDebugFormat flavoredDebugFormat=AppleDebugFormat.FLAVOR_DOMAIN.getValue(params.getBuildTarget()).or(defaultDebugFormat);
  if (!params.getBuildTarget().getFlavors().contains(flavoredDebugFormat.getFlavor())) {
    return (BuildRuleWithAppleBundle)resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(flavoredDebugFormat.getFlavor()).build());
  }
  if (!AppleDescriptions.INCLUDE_FRAMEWORKS.getValue(params.getBuildTarget()).isPresent()) {
    return (BuildRuleWithAppleBundle)resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleDescriptions.NO_INCLUDE_FRAMEWORKS_FLAVOR).build());
  }
  return AppleDescriptions.createAppleBundle(cxxPlatformFlavorDomain,defaultCxxPlatform,platformFlavorsToAppleCxxPlatforms,targetGraph,params,resolver,codeSignIdentityStore,provisioningProfileStore,args.binary,Optional.<Linker.LinkableDepType>absent(),args.extension,args.productName,args.infoPlist,args.infoPlistSubstitutions,args.deps.get(),args.getTests(),flavoredDebugFormat);
}
