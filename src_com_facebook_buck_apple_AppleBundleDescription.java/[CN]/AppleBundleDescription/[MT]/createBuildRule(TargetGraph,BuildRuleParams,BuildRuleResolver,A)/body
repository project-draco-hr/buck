{
  AppleDebugFormat flavoredDebugInfoFormat=AppleDebugFormat.FLAVOR_DOMAIN.getValue(params.getBuildTarget()).or(defaultDebugInfoFormat);
  Flavor debugFormatFlavor=flavoredDebugInfoFormat.getFlavor();
  if (!params.getBuildTarget().getFlavors().contains(debugFormatFlavor)) {
    return (BuildRuleWithAppleBundle)resolver.requireRule(params.getBuildTarget().withAppendedFlavor(debugFormatFlavor));
  }
  if (!AppleDescriptions.INCLUDE_FRAMEWORKS.getValue(params.getBuildTarget()).isPresent()) {
    return (BuildRuleWithAppleBundle)resolver.requireRule(params.getBuildTarget().withAppendedFlavor(AppleDescriptions.NO_INCLUDE_FRAMEWORKS_FLAVOR));
  }
  AppleBundle appleBundle=AppleDescriptions.createAppleBundle(cxxPlatformFlavorDomain,defaultCxxPlatform,platformFlavorsToAppleCxxPlatforms,targetGraph,params,resolver,codeSignIdentityStore,provisioningProfileStore,args.binary,args.extension,args.productName,args.infoPlist,args.infoPlistSubstitutions,args.deps.get(),args.getTests());
  if (flavoredDebugInfoFormat.getFlavor() == AppleDebugFormat.NONE.getFlavor() || !appleBundle.getBinary().isPresent()) {
    return appleBundle;
  }
  AppleDsym appleDsym=AppleDescriptions.createAppleDsym(cxxPlatformFlavorDomain,defaultCxxPlatform,platformFlavorsToAppleCxxPlatforms,params,resolver,appleBundle);
  return AppleDescriptions.createAppleBundleWithDsym(appleBundle,appleDsym,params,resolver);
}
