{
  AppleDebugFormat flavoredDebugInfoFormat=AppleDebugFormat.FLAVOR_DOMAIN.getValue(params.getBuildTarget()).or(defaultDebugInfoFormat);
  Flavor debugFormatFlavor=flavoredDebugInfoFormat.getFlavor();
  if (!params.getBuildTarget().getFlavors().contains(debugFormatFlavor)) {
    return (AppleBundle)resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(debugFormatFlavor).build());
  }
  if (!AppleDescriptions.INCLUDE_FRAMEWORKS.getValue(params.getBuildTarget()).isPresent()) {
    return (AppleBundle)resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleDescriptions.NO_INCLUDE_FRAMEWORKS_FLAVOR).build());
  }
  if (!AppleDescriptions.INCLUDE_RESOURCES.getValue(params.getBuildTarget()).isPresent()) {
    return (AppleBundle)resolver.requireRule(BuildTarget.builder(params.getBuildTarget()).addFlavors(AppleDescriptions.TRANSITIVE_RESOURCES_FLAVOR).build());
  }
  return AppleDescriptions.createAppleBundle(cxxPlatformFlavorDomain,defaultCxxPlatform,platformFlavorsToAppleCxxPlatforms,targetGraph,params,resolver,codeSignIdentityStore,provisioningProfileStore,args.binary,args.extension,args.productName,args.infoPlist,args.infoPlistSubstitutions,args.deps.get(),args.getTests(),flavoredDebugInfoFormat);
}
