{
  CxxPlatform cxxPlatform;
  try {
    cxxPlatform=cxxPlatformFlavorDomain.getValue(params.getBuildTarget().getFlavors()).or(defaultCxxPlatform);
  }
 catch (  FlavorDomainException e) {
    throw new HumanReadableException(e,"%s: %s",params.getBuildTarget(),e.getMessage());
  }
  AppleCxxPlatform appleCxxPlatform=platformFlavorsToAppleCxxPlatforms.get(cxxPlatform.getFlavor());
  if (appleCxxPlatform == null) {
    throw new HumanReadableException("%s: Apple bundle requires an Apple platform, found '%s'",params.getBuildTarget(),cxxPlatform.getFlavor().getName());
  }
  BuildRule flavoredBinaryRule=getFlavoredBinaryRule(params,resolver,args);
  BuildRuleParams bundleParamsWithFlavoredBinaryDep=getBundleParamsWithFlavoredBinaryDep(params,args.binary,flavoredBinaryRule);
  ImmutableMap.Builder<Path,AppleBundleDestination> bundleDirsBuilder=ImmutableMap.builder();
  ImmutableMap.Builder<SourcePath,AppleBundleDestination> bundleFilesBuilder=ImmutableMap.builder();
  collectBundleDirsAndFiles(params,args,bundleDirsBuilder,bundleFilesBuilder);
  ImmutableMap<Path,AppleBundleDestination> bundleDirs=bundleDirsBuilder.build();
  ImmutableMap<SourcePath,AppleBundleDestination> bundleFiles=bundleFilesBuilder.build();
  return new AppleBundle(bundleParamsWithFlavoredBinaryDep,new SourcePathResolver(resolver),args.extension,args.infoPlist,Optional.of(flavoredBinaryRule),IOS_APP_SUBFOLDER_SPEC_MAP,bundleDirs,bundleFiles);
}
