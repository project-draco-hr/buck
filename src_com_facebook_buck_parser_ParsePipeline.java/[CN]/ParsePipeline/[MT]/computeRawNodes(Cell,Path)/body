{
  return parserLeaseVendor.leaseParser(cell,new AsyncFunction<ProjectBuildFileParser,ImmutableList<Map<String,Object>>>(){
    @Override public ListenableFuture<ImmutableList<Map<String,Object>>> apply(    ProjectBuildFileParser parser) throws BuildFileParseException, InterruptedException {
      ImmutableList<Map<String,Object>> rawNodes=ImmutableList.copyOf(parser.getAllRulesAndMetaRules(buildFile));
      return Futures.immediateFuture(cache.putRawNodesIfNotPresent(cell,buildFile,rawNodes));
    }
  }
,executorService);
}
