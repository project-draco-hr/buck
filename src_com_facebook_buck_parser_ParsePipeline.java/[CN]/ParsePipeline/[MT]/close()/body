{
  if (shuttingDown.get()) {
    return;
  }
  ListenableFuture<List<Object>> closeFuture;
synchronized (lock) {
    shuttingDown.set(true);
    Iterable<ListenableFuture<?>> futures=Iterables.concat(rawNodeJobsCache.values(),targetNodeJobsCache.values());
    closeFuture=Futures.successfulAsList(futures);
  }
  try {
    closeFuture.get();
  }
 catch (  ExecutionException e) {
    LOG.info("Discarded exception when shutting down parse pipeline.",e);
  }
}
