{
  final String zipFile="/path/to/file.zip";
  final Set<String> paths=ImmutableSet.of("a/path","another.path");
  final int compressionLevel=7;
  final File workingDirectory=new File("/some/other/path");
  ExecutionContext context=createMock(ExecutionContext.class);
  expect(context.getVerbosity()).andReturn(Verbosity.SILENT);
  replay(context);
  List<String> expectedShellCommand=new ImmutableList.Builder<String>().add("zip").add("-u").add("-qq").add("-X").add("-r").add("-" + compressionLevel).add("-j").add(zipFile).addAll(paths).build();
  ZipCommand command=new ZipCommand(ZipCommand.Mode.UPDATE,zipFile,paths,true,compressionLevel,workingDirectory);
  MoreAsserts.assertListEquals(expectedShellCommand,command.getShellCommandInternal(context));
  assertEquals(workingDirectory,command.getWorkingDirectory());
  verify(context);
}
