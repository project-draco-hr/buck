{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  Path outputDir=getOutputDirectory();
  Path fatJarDir=outputDir.resolve("fat-jar-directory");
  steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),outputDir));
  ImmutableMap.Builder<String,String> sonameToResourceMapBuilder=ImmutableMap.builder();
  for (  Map.Entry<String,SourcePath> entry : nativeLibraries.entrySet()) {
    String resource=FAT_JAR_NATIVE_LIBRARY_RESOURCE_ROOT + "/" + entry.getKey();
    sonameToResourceMapBuilder.put(entry.getKey(),resource);
    steps.add(new MkdirStep(getProjectFilesystem(),fatJarDir.resolve(resource).getParent()));
    steps.add(new SymlinkFileStep(getProjectFilesystem(),getResolver().getPath(entry.getValue()),fatJarDir.resolve(resource),false));
  }
  ImmutableMap<String,String> sonameToResourceMap=sonameToResourceMapBuilder.build();
  Path fatJarInfo=fatJarDir.resolve(FatJar.FAT_JAR_INFO_RESOURCE);
  steps.add(writeFatJarInfo(fatJarInfo,sonameToResourceMap));
  Path fatJarSource=outputDir.resolve(Paths.get(FAT_JAR_SRC_RESOURCE).getFileName());
  steps.add(writeFromResource(fatJarSource,FAT_JAR_SRC_RESOURCE));
  Path fatJarMainSource=outputDir.resolve(Paths.get(FAT_JAR_MAIN_SRC_RESOURCE).getFileName());
  steps.add(writeFromResource(fatJarMainSource,FAT_JAR_MAIN_SRC_RESOURCE));
  steps.add(new JavacStep(fatJarDir,Optional.<Path>absent(),ImmutableSet.of(fatJarSource,fatJarMainSource),Optional.<Path>absent(),ImmutableSet.<Path>of(),javacOptions,getBuildTarget(),Optional.<JavacStep.SuggestBuildRules>absent(),getResolver(),getProjectFilesystem()));
  steps.add(new MkdirStep(getProjectFilesystem(),fatJarDir.resolve(FAT_JAR_INNER_JAR).getParent()));
  steps.add(new SymlinkFileStep(getProjectFilesystem(),getResolver().getPath(innerJar),fatJarDir.resolve(FAT_JAR_INNER_JAR),false));
  Path zipped=outputDir.resolve("contents.zip");
  steps.add(new ZipStep(getProjectFilesystem(),zipped,ImmutableSet.<Path>of(),false,0,fatJarDir));
  steps.add(new JarDirectoryStep(getProjectFilesystem(),getOutputPath(),ImmutableSet.of(zipped),FatJarMain.class.getName(),null));
  return steps.build();
}
