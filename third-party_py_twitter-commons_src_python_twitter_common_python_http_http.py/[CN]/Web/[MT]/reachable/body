def reachable(self, url, conn_timeout=None):
    "Do we think this URL is reachable?\n\n       If this isn't here, it takes 5-30s to timeout on DNS resolution for\n       certain hosts, so we prefetch DNS at a cost of 5-8ms but cap\n       resolution at something sane, e.g. 5s.\n    "
    fullurl = urlparse.urlparse(url)
    if ((not fullurl.scheme) or (not fullurl.netloc)):
        return True
    try:
        with TRACER.timed(('Resolving %s' % fullurl.hostname), V=2):
            if (not deadline(self._resolves, fullurl, timeout=self.NS_TIMEOUT_SECS)):
                TRACER.log(('Failed to resolve %s' % url))
                return False
    except Timeout:
        TRACER.log(('Timed out resolving %s' % fullurl.hostname))
        return False
    with TRACER.timed(('Connecting to %s' % fullurl.hostname), V=2):
        return self._reachable(fullurl, conn_timeout=conn_timeout)
