{
  ImmutableList.Builder<Map.Entry<ProcessExecutorParams,FakeProcess>> fakeProcessesBuilder=ImmutableList.builder();
  fakeProcessesBuilder.add(new SimpleImmutableEntry<>(SIMCTL_LIST_PARAMS,new FakeProcess(0)));
  fakeProcessesBuilder.add(new SimpleImmutableEntry<>(ProcessExecutorParams.builder().setCommand(ImmutableList.of("open","-a",IOS_SIMULATOR_PATH.toString(),"--args","-CurrentDeviceUDID","70200ED8-EEF1-4BDB-BCCF-3595B137D67D")).build(),new FakeProcess(0)));
  fakeProcessesBuilder.add(new SimpleImmutableEntry<>(SIMCTL_LIST_PARAMS,new FakeProcess(0,"    iPhone 5 (45BD7164-686C-474F-8C68-3730432BC5F2) (Shutdown)\n" + "    iPhone 5s (70200ED8-EEF1-4BDB-BCCF-3595B137D67D) (Booted)\n","")));
  FakeProcessExecutor fakeProcessExecutor=new FakeProcessExecutor(fakeProcessesBuilder.build());
  AppleSimulatorController appleSimulatorController=new AppleSimulatorController(fakeProcessExecutor,SIMCTL_PATH,IOS_SIMULATOR_PATH);
  Optional<Long> result=appleSimulatorController.startSimulator("70200ED8-EEF1-4BDB-BCCF-3595B137D67D",1000);
  assertThat(result,is(Optional.of(0L)));
}
