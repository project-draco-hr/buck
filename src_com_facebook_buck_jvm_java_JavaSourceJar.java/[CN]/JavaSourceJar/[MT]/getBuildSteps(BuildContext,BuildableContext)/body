{
  JavaPackageFinder packageFinder=context.getJavaPackageFinder();
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  steps.add(new MkdirStep(getProjectFilesystem(),output.getParent()));
  steps.add(new RmStep(getProjectFilesystem(),output,true));
  steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),temp));
  Set<Path> seenPackages=Sets.newHashSet();
  for (  Path source : getResolver().filterInputsToCompareToOutput(sources)) {
    Path packageFolder=packageFinder.findJavaPackageFolder(source);
    Path packageDir=temp.resolve(packageFolder);
    if (seenPackages.add(packageDir)) {
      steps.add(new MkdirStep(getProjectFilesystem(),packageDir));
    }
    steps.add(CopyStep.forFile(getProjectFilesystem(),source,packageDir.resolve(source.getFileName())));
  }
  steps.add(new ZipStep(getProjectFilesystem(),output,ImmutableSet.<Path>of(),false,DEFAULT_COMPRESSION_LEVEL,temp));
  buildableContext.recordArtifact(output);
  return steps.build();
}
