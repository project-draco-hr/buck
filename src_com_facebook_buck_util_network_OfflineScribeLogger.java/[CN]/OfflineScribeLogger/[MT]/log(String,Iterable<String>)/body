{
  ListenableFuture<Void> upload=scribeLogger.log(category,lines);
  Futures.addCallback(upload,new FutureCallback<Void>(){
    @Override public void onSuccess(    Void result){
    }
    @Override public void onFailure(    Throwable t){
      if (!blacklistCategories.contains(category)) {
        LOG.verbose("Storing Scribe lines from category: %s.",category);
        byte[] scribeData;
        try {
          scribeData=objectMapper.writeValueAsString(ScribeData.builder().setCategory(category).setLines(lines).build()).getBytes(Charsets.UTF_8);
        }
 catch (        Exception e) {
          LOG.error("Failed generating JSON to store for category: %s.",category);
          return;
        }
        storeOffline(category,scribeData);
      }
    }
  }
);
  return upload;
}
