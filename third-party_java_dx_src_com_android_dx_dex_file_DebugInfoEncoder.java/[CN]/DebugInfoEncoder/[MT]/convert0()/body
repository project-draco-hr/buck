{
  ArrayList<PositionList.Entry> sortedPositions=buildSortedPositions();
  ArrayList<LocalList.Entry> methodArgs=extractMethodArguments();
  emitHeader(sortedPositions,methodArgs);
  output.writeByte(DBG_SET_PROLOGUE_END);
  if (annotateTo != null || debugPrint != null) {
    annotate(1,String.format("%04x: prologue end",address));
  }
  int positionsSz=sortedPositions.size();
  int localsSz=locals.size();
  int curPositionIdx=0;
  int curLocalIdx=0;
  for (; ; ) {
    curLocalIdx=emitLocalsAtAddress(curLocalIdx);
    curPositionIdx=emitPositionsAtAddress(curPositionIdx,sortedPositions);
    int nextAddrL=Integer.MAX_VALUE;
    int nextAddrP=Integer.MAX_VALUE;
    if (curLocalIdx < localsSz) {
      nextAddrL=locals.get(curLocalIdx).getAddress();
    }
    if (curPositionIdx < positionsSz) {
      nextAddrP=sortedPositions.get(curPositionIdx).getAddress();
    }
    int next=Math.min(nextAddrP,nextAddrL);
    if (next == Integer.MAX_VALUE) {
      break;
    }
    if (next == codeSize && nextAddrL == Integer.MAX_VALUE && nextAddrP == Integer.MAX_VALUE) {
      break;
    }
    if (next == nextAddrP) {
      emitPosition(sortedPositions.get(curPositionIdx++));
    }
 else {
      emitAdvancePc(next - address);
    }
  }
  emitEndSequence();
  return output.toByteArray();
}
