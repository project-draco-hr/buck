{
  ExecutionContext context=ExecutionContext.builder().setProjectFilesystem(new ProjectFilesystem(new File(".")){
    @Override public Function<String,String> getPathRelativizer(){
      return Functions.identity();
    }
  }
).setConsole(new TestConsole()).setEventBus(BuckEventBusFactory.newInstance()).build();
  DependencyCheckingJavacStep firstOrder=createTestStep(BuildDependencies.FIRST_ORDER_ONLY);
  DependencyCheckingJavacStep warn=createTestStep(BuildDependencies.WARN_ON_TRANSITIVE);
  DependencyCheckingJavacStep transitive=createTestStep(BuildDependencies.TRANSITIVE);
  assertEquals("javac -target 6 -source 6 -g -d . -classpath foo.jar foobar.java",firstOrder.getDescription(context));
  assertEquals("javac -target 6 -source 6 -g -d . -classpath foo.jar foobar.java",warn.getDescription(context));
  assertEquals("javac -target 6 -source 6 -g -d . -classpath bar.jar" + File.pathSeparator + "foo.jar foobar.java",transitive.getDescription(context));
}
