{
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  BuildRuleResolver resolver=new BuildRuleResolver();
  CxxPreprocessorInput cxxPreprocessorInput=new CxxPreprocessorInput(ImmutableSet.<BuildTarget>of(),ImmutableList.<String>of(),ImmutableList.<String>of(),ImmutableMap.<Path,SourcePath>of(),ImmutableList.<Path>of(),ImmutableList.<Path>of());
  String name="foo/bar.cpp";
  CxxSource cxxSource=new CxxSource(name,new TestSourcePath(name));
  CxxCompile noPic=CxxCompilableEnhancer.createCompileBuildRule(params,resolver,CxxCompilables.DEFAULT_CXX_COMPILER,cxxPreprocessorInput,ImmutableList.<String>of(),false,cxxSource);
  assertFalse(noPic.getFlags().contains("-fPIC"));
  assertEquals(CxxCompilableEnhancer.createCompileBuildTarget(target,name,false),noPic.getBuildTarget());
  CxxCompile pic=CxxCompilableEnhancer.createCompileBuildRule(params,resolver,CxxCompilables.DEFAULT_CXX_COMPILER,cxxPreprocessorInput,ImmutableList.<String>of(),true,cxxSource);
  assertTrue(pic.getFlags().contains("-fPIC"));
  assertEquals(CxxCompilableEnhancer.createCompileBuildTarget(target,name,true),pic.getBuildTarget());
}
