{
  ProjectWorkspace workspace=TestDataHelper.createProjectWorkspaceForScenario(this,"compilation_database_with_deps",tmp);
  workspace.setUp();
  workspace.enableDirCache();
  addDepLibraryHeaderFiles(workspace);
  BuildTarget target=BuildTargetFactory.newInstance("//:library_with_header#default,compilation-database");
  workspace.buildAndReturnOutput(target.getFullyQualifiedName());
  Path dep1ExportedSymlinkTreeFolder=BuildTargets.getGenPath(BuildTargetFactory.newInstance("//dep1:dep1#default,headers"),"%s");
  Path dep2ExportedSymlinkTreeFolder=BuildTargets.getGenPath(BuildTargetFactory.newInstance("//dep2:dep2#default,headers"),"%s");
  verifyHeaders(workspace,dep1ExportedSymlinkTreeFolder,"dep1/dep1.h","dep1/dep1_new.h");
  verifyHeaders(workspace,dep2ExportedSymlinkTreeFolder,"dep2/dep2.h","dep2/dep2_new.h");
  Files.delete(workspace.getPath("dep1/dep1_new.h"));
  Files.delete(workspace.getPath("dep2/dep2_new.h"));
  workspace.buildAndReturnOutput(target.getFullyQualifiedName());
  verifyHeaders(workspace,dep1ExportedSymlinkTreeFolder,"dep1/dep1.h");
  verifyHeaders(workspace,dep2ExportedSymlinkTreeFolder,"dep2/dep2.h");
  addDepLibraryHeaderFiles(workspace);
  workspace.buildAndReturnOutput(target.getFullyQualifiedName());
  verifyHeaders(workspace,dep1ExportedSymlinkTreeFolder,"dep1/dep1.h","dep1/dep1_new.h");
  verifyHeaders(workspace,dep2ExportedSymlinkTreeFolder,"dep2/dep2.h","dep2/dep2_new.h");
}
