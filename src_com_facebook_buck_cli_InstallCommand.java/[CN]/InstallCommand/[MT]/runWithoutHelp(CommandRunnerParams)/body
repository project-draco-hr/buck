{
  if (getArguments().size() != 1) {
    params.getConsole().getStdErr().println("Must specify exactly one rule.");
    return 1;
  }
  int exitCode=super.runWithoutHelp(params);
  if (exitCode != 0) {
    return exitCode;
  }
  Build build=super.getBuild();
  ActionGraph graph=build.getActionGraph();
  BuildRule buildRule=Preconditions.checkNotNull(graph.findBuildRuleByTarget(getBuildTargets().get(0)));
  if (buildRule instanceof InstallableApk) {
    return installApk(params,(InstallableApk)buildRule,build.getExecutionContext());
  }
 else   if (buildRule instanceof AppleBundle) {
    AppleBundle appleBundle=(AppleBundle)buildRule;
    params.getBuckEventBus().post(InstallEvent.started(appleBundle.getBuildTarget()));
    InstallResult installResult=installAppleBundle(params,appleBundle,build.getExecutionContext().getProjectFilesystem(),build.getExecutionContext().getProcessExecutor());
    params.getBuckEventBus().post(InstallEvent.finished(appleBundle.getBuildTarget(),installResult.getExitCode() == 0,installResult.getLaunchedPid()));
    return installResult.getExitCode();
  }
 else {
    params.getConsole().printBuildFailure(String.format("Specified rule %s must be of type android_binary() or apk_genrule() or " + "apple_bundle() but was %s().\n",buildRule.getFullyQualifiedName(),buildRule.getType()));
    return 1;
  }
}
