{
  if (options.getArguments().size() != 1) {
    getStdErr().println("Must specify exactly one android_binary() or apk_genrule() rule.");
    return 1;
  }
  BuildCommand buildCommand=new BuildCommand(getCommandRunnerParams());
  int exitCode=buildCommand.runCommandWithOptions(options);
  if (exitCode != 0) {
    return exitCode;
  }
  Build build=buildCommand.getBuild();
  DependencyGraph graph=build.getDependencyGraph();
  BuildRule buildRule=graph.findBuildRuleByTarget(buildCommand.getBuildTargets().get(0));
  if (!(buildRule instanceof InstallableBuildRule)) {
    console.printBuildFailure(String.format("Specified rule %s must be of type android_binary() or apk_genrule() but was %s().\n",buildRule.getFullyQualifiedName(),buildRule.getType().getName()));
    return 1;
  }
  InstallableBuildRule installableBuildRule=(InstallableBuildRule)buildRule;
  if (options.shouldUninstallFirst()) {
    String packageName=tryToExtractPackageNameFromManifest(installableBuildRule,build.getBuildContext().getDependencyGraph());
    uninstallApk(packageName,options.adbOptions(),options.targetDeviceOptions(),options.uninstallOptions(),build.getExecutionContext());
  }
  if (!installApk(installableBuildRule,options,build.getExecutionContext())) {
    return 1;
  }
  if (options.shouldStartActivity()) {
    exitCode=startActivity(installableBuildRule,options.getActivityToStart(),options,build.getBuildContext(),build.getExecutionContext());
    if (exitCode != 0) {
      return exitCode;
    }
  }
  return exitCode;
}
