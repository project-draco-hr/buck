{
  JUnitCore testRunner=new JUnitCore();
  for (  String className : testClassNames) {
    Class<?> testClass=Class.forName(className);
    Ignore ignore=testClass.getAnnotation(Ignore.class);
    boolean isTestClassIgnored=ignore != null;
    List<TestResult> results;
    if (isTestClassIgnored) {
      results=Collections.emptyList();
    }
 else {
      results=new ArrayList<TestResult>();
      Method[] publicInstanceMethods=testClass.getMethods();
      for (      Method method : publicInstanceMethods) {
        if (isTestMethod(method)) {
          PrintStream stderr=System.err;
          if (shouldPrintOutWhenTestsStartAndStop) {
            stderr.printf("START TEST %s#%s\n",testClass.getName(),method.getName());
            stderr.flush();
          }
          TestResult result=TestResult.runTestMethod(testClass,method.getName(),testRunner);
          results.add(result);
          if (shouldPrintOutWhenTestsStartAndStop) {
            stderr.printf("STOP TEST %s#%s\n",testClass.getName(),method.getName());
            stderr.flush();
          }
        }
      }
    }
    writeResult(className,results);
  }
}
