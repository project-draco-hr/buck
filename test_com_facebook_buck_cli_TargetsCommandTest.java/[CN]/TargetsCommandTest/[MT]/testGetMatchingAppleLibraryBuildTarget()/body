{
  BuildTarget libraryTarget=BuildTarget.builder("//foo","lib").build();
  TargetNode<?> libraryNode=AppleLibraryBuilder.createBuilder(libraryTarget).setSrcs(Optional.of(ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("foo/foo.m"))))).build();
  ImmutableSet<TargetNode<?>> nodes=ImmutableSet.<TargetNode<?>>of(libraryNode);
  TargetGraph targetGraph=TargetGraphFactory.newInstance(nodes);
  ActionGraph actionGraph=targetGraph.getActionGraph();
  SortedMap<String,BuildRule> matchingBuildRules=targetsCommand.getMatchingBuildRules(actionGraph,new TargetsCommandPredicate(targetGraph,ImmutableSet.<BuildRuleType>of(),ImmutableSet.of(Paths.get("foo/bar.m")),Optional.<ImmutableSet<BuildTarget>>absent()));
  assertTrue(matchingBuildRules.isEmpty());
  matchingBuildRules=targetsCommand.getMatchingBuildRules(actionGraph,new TargetsCommandPredicate(targetGraph,ImmutableSet.<BuildRuleType>of(),ImmutableSet.of(Paths.get("foo/foo.m")),Optional.<ImmutableSet<BuildTarget>>absent()));
  assertEquals(ImmutableSet.of("//foo:lib"),matchingBuildRules.keySet());
}
