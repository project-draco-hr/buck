{
  BuildTarget libraryTarget=BuildTarget.builder("//foo","lib").build();
  TargetNode<?> libraryNode=AppleLibraryBuilder.createBuilder(libraryTarget).setSrcs(Optional.of(ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("foo/foo.m"))))).build();
  BuildTarget testTarget=BuildTarget.builder("//foo","xctest").build();
  TargetNode<?> testNode=AppleTestBuilder.createBuilder(testTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.XCTEST)).setSrcs(Optional.of(ImmutableList.of(AppleSource.ofSourcePath(new TestSourcePath("foo/testfoo.m"))))).setDeps(Optional.of(ImmutableSortedSet.of(libraryTarget))).build();
  ImmutableSet<TargetNode<?>> nodes=ImmutableSet.of(libraryNode,testNode);
  TargetGraph targetGraph=TargetGraphFactory.newInstance(nodes);
  ActionGraph actionGraph=targetGraph.getActionGraph();
  SortedMap<String,BuildRule> matchingBuildRules=targetsCommand.getMatchingBuildRules(actionGraph,new TargetsCommandPredicate(targetGraph,ImmutableSet.<BuildRuleType>of(),ImmutableSet.of(Paths.get("foo/bar.m")),Optional.<ImmutableSet<BuildTarget>>absent()));
  assertTrue(matchingBuildRules.isEmpty());
  matchingBuildRules=targetsCommand.getMatchingBuildRules(actionGraph,new TargetsCommandPredicate(targetGraph,ImmutableSet.<BuildRuleType>of(),ImmutableSet.of(Paths.get("foo/foo.m")),Optional.<ImmutableSet<BuildTarget>>absent()));
  assertEquals(ImmutableSet.of("//foo:lib#compile-pic-foo-m-o,default","//foo:lib#default,preprocess-pic-foo-m-mi","//foo:lib#default,shared","//foo:xctest#apple-test-bundle","//foo:xctest#apple-test-library,default,dynamic,shared","//foo:xctest"),matchingBuildRules.keySet());
  matchingBuildRules=targetsCommand.getMatchingBuildRules(actionGraph,new TargetsCommandPredicate(targetGraph,ImmutableSet.<BuildRuleType>of(),ImmutableSet.of(Paths.get("foo/testfoo.m")),Optional.<ImmutableSet<BuildTarget>>absent()));
  assertEquals(ImmutableSet.of("//foo:xctest#apple-test-bundle","//foo:xctest#apple-test-library,compile-pic-testfoo-m-o,default,dynamic","//foo:xctest#apple-test-library,default,dynamic,preprocess-pic-testfoo-m-mi","//foo:xctest#apple-test-library,default,dynamic,shared","//foo:xctest"),matchingBuildRules.keySet());
}
