{
  final String testBuckFile1=testDataPath(BuckConstant.BUILD_RULES_FILE_NAME);
  final String testBuckFileJson1=testDataPath("TargetsCommandTestBuckJson1.js");
  final String outputFile="buck-gen/test/outputFile";
  JsonFactory jsonFactory=new JsonFactory();
  ObjectMapper mapper=new ObjectMapper();
  SortedMap<String,BuildRule> buildRules=buildBuildTargets(testBuckFile1,outputFile,"test-library","//testdata/com/facebook/buck/cli");
  targetsCommand.printJsonForTargets(buildRules,ImmutableList.<String>of());
  String observedOutput=console.getTextWrittenToStdOut();
  JsonNode observed=mapper.readTree(jsonFactory.createJsonParser(observedOutput));
  String expectedJson=Files.toString(new File(testBuckFileJson1),Charsets.UTF_8).replace("{$OUTPUT_FILE}",outputFile);
  JsonNode expected=mapper.readTree(jsonFactory.createJsonParser(expectedJson).enable(Feature.ALLOW_COMMENTS));
  assertEquals("Output from targets command should match expected JSON.",expected,observed);
  assertEquals("Nothing should be printed to stderr.","",console.getTextWrittenToStdErr());
}
