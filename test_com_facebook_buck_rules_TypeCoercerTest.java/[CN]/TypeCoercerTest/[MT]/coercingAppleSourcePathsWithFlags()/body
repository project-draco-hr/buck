{
  Type type=TestFields.class.getField("listOfAppleSources").getGenericType();
  TypeCoercer<?> coercer=typeCoercerFactory.typeCoercerForType(type);
  ImmutableList<?> input=ImmutableList.of(ImmutableList.of("foo.m","-Wall"),ImmutableList.of("bar.m","-fobjc-arc"));
  Object result=coercer.coerce(buildRuleResolver,filesystem,Paths.get(""),input);
  ImmutableList<AppleSource> expectedResult=ImmutableList.of(AppleSource.ofSourcePathWithFlags(new Pair<SourcePath,String>(new TestSourcePath("foo.m"),"-Wall")),AppleSource.ofSourcePathWithFlags(new Pair<SourcePath,String>(new TestSourcePath("bar.m"),"-fobjc-arc")));
  assertEquals(expectedResult,result);
}
