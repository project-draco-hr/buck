{
  Type type=TestFields.class.getField("eitherStringOrStringList").getGenericType();
  TypeCoercer<?> coercer=typeCoercerFactory.typeCoercerForType(type);
  TestTraversal traversal=new TestTraversal();
  ImmutableList<String> input=ImmutableList.of("foo");
  coercer.traverse(input,traversal);
  assertThat(traversal.getObjects(),Matchers.contains(ImmutableList.<Matcher<? super Object>>of(sameInstance((Object)input),sameInstance((Object)input.get(0)))));
  traversal=new TestTraversal();
  String input2="foo";
  coercer.traverse(input2,traversal);
  assertThat(traversal.getObjects(),hasSize(1));
  assertThat(traversal.getObjects().get(0),sameInstance((Object)"foo"));
}
