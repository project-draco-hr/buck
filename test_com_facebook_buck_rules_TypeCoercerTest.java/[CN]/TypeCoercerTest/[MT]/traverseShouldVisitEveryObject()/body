{
  Type type=TestFields.class.getField("stringMapOfLists").getGenericType();
  TypeCoercer<?> coercer=typeCoercerFactory.typeCoercerForType(type);
  final ImmutableMap<String,ImmutableList<String>> input=ImmutableMap.of("foo",ImmutableList.of("//foo:bar","//foo:baz"),"bar",ImmutableList.of(":bar","//foo:foo"));
  TestTraversal traversal=new TestTraversal();
  coercer.traverse(input,traversal);
  List<Object> objects=traversal.getObjects();
  assertThat(objects,Matchers.<Object>contains((Matcher)sameInstance(input),(Matcher)is("foo"),(Matcher)sameInstance(input.get("foo")),(Matcher)is("//foo:bar"),(Matcher)is("//foo:baz"),(Matcher)is("bar"),(Matcher)sameInstance(input.get("bar")),(Matcher)is(":bar"),(Matcher)is("//foo:foo")));
}
