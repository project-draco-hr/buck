{
  Type type=TestFields.class.getField("stringMapOfLists").getGenericType();
  TypeCoercer<?> coercer=typeCoercerFactory.typeCoercerForType(type);
  final ImmutableMap<String,ImmutableList<String>> input=ImmutableMap.of("foo",ImmutableList.of("//foo:bar","//foo:baz"),"bar",ImmutableList.of(":bar","//foo:foo"));
  TestTraversal traversal=new TestTraversal();
  coercer.traverse(input,traversal);
  List<Object> objects=traversal.getObjects();
  assertThat(objects,Matchers.<Object>contains(ImmutableList.of(sameInstance((Object)input),is((Object)"foo"),sameInstance((Object)input.get("foo")),is((Object)"//foo:bar"),is((Object)"//foo:baz"),is((Object)"bar"),sameInstance((Object)input.get("bar")),is((Object)":bar"),is((Object)"//foo:foo"))));
}
