{
  FakeProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  TargetNode<?> nodeA=createJavaLibraryTargetNodeWithSrcs(projectFilesystem,BuildTarget.builder("//foo","lib").build(),ImmutableMap.of(Paths.get("foo/FooLib.java"),"Hello world"));
  TargetNode<?> nodeB=createJavaLibraryTargetNodeWithSrcs(projectFilesystem,BuildTarget.builder("//bar","lib").build(),ImmutableMap.of(Paths.get("bar/BarLib.java"),"Hello world"));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(nodeA,nodeB);
  ImmutableMap<BuildTarget,HashCode> expectedTargetHashes=ImmutableMap.of((BuildTarget)BuildTarget.builder("//foo","lib").build(),HashCode.fromString("15bcb369ef1f2c6df995f0538b7d95f4798a16e7"),BuildTarget.builder("//bar","lib").build(),HashCode.fromString("55f239830db5afd6ee64574eb974e0ec058bb8f8"));
  assertThat(TargetGraphHashing.hashTargetGraph(projectFilesystem,targetGraph,Functions.forMap(ImmutableMap.of((BuildTarget)BuildTarget.builder("//foo","lib").build(),HashCode.fromLong(64738),BuildTarget.builder("//bar","lib").build(),HashCode.fromLong(49152))),nodeA.getBuildTarget(),nodeB.getBuildTarget()),equalTo(expectedTargetHashes));
}
