{
  FakeProjectFilesystem projectFilesystem=new FakeProjectFilesystem();
  TargetNode<?> nodeA=createJavaLibraryTargetNodeWithSrcs(projectFilesystem,BuildTargetFactory.newInstance("//foo:lib"),HashCode.fromLong(64738),ImmutableMap.of(Paths.get("foo/FooLib.java"),"Hello world"));
  TargetNode<?> nodeB=createJavaLibraryTargetNodeWithSrcs(projectFilesystem,BuildTargetFactory.newInstance("//bar:lib"),HashCode.fromLong(49152),ImmutableMap.of(Paths.get("bar/BarLib.java"),"Hello world"));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(nodeA,nodeB);
  ImmutableMap<BuildTarget,HashCode> expectedTargetHashes=ImmutableMap.of(BuildTargetFactory.newInstance("//foo:lib"),HashCode.fromString("15bcb369ef1f2c6df995f0538b7d95f4798a16e7"),BuildTargetFactory.newInstance("//bar:lib"),HashCode.fromString("55f239830db5afd6ee64574eb974e0ec058bb8f8"));
  assertThat(TargetGraphHashing.hashTargetGraph(projectFilesystem,targetGraph,ImmutableList.of(nodeA.getBuildTarget(),nodeB.getBuildTarget())),equalTo(expectedTargetHashes));
}
