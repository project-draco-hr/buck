{
  ImmutableMultimap.Builder<CxxSource.Type,String> preprocessorFlags=ImmutableMultimap.builder();
  ImmutableList.Builder<CxxHeaders> headers=ImmutableList.builder();
  ImmutableSet.Builder<FrameworkPath> frameworks=ImmutableSet.builder();
  ImmutableSet.Builder<BuildTarget> rules=ImmutableSet.builder();
  ImmutableSet.Builder<Path> systemIncludeRoots=ImmutableSet.builder();
  for (  CxxPreprocessorInput input : inputs) {
    preprocessorFlags.putAll(input.getPreprocessorFlags());
    headers.addAll(input.getIncludes());
    frameworks.addAll(input.getFrameworks());
    rules.addAll(input.getRules());
    systemIncludeRoots.addAll(input.getSystemIncludeRoots());
  }
  return CxxPreprocessorInput.of(preprocessorFlags.build(),headers.build(),frameworks.build(),rules.build(),systemIncludeRoots.build());
}
