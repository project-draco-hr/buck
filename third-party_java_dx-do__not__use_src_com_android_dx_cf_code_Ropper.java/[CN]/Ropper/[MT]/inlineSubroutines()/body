{
  final IntList reachableSubroutineCallerLabels=new IntList(4);
  forEachNonSubBlockDepthFirst(0,new BasicBlock.Visitor(){
    public void visitBlock(    BasicBlock b){
      if (isSubroutineCaller(b)) {
        reachableSubroutineCallerLabels.add(b.getLabel());
      }
    }
  }
);
  int largestAllocedLabel=getAvailableLabel();
  ArrayList<IntList> labelToSubroutines=new ArrayList<IntList>(largestAllocedLabel);
  for (int i=0; i < largestAllocedLabel; i++) {
    labelToSubroutines.add(null);
  }
  for (int i=0; i < result.size(); i++) {
    BasicBlock b=result.get(i);
    if (b == null) {
      continue;
    }
    IntList subroutineList=resultSubroutines.get(i);
    labelToSubroutines.set(b.getLabel(),subroutineList);
  }
  int sz=reachableSubroutineCallerLabels.size();
  for (int i=0; i < sz; i++) {
    int label=reachableSubroutineCallerLabels.get(i);
    new SubroutineInliner(new LabelAllocator(getAvailableLabel()),labelToSubroutines).inlineSubroutineCalledFrom(labelToBlock(label));
  }
  deleteUnreachableBlocks();
}
