{
  if (object instanceof String) {
    Path path=Paths.get((String)object);
    String firstElement=Preconditions.checkNotNull(Iterables.getFirst(path,Paths.get(""))).toString();
    if (firstElement.startsWith("$")) {
      Optional<PBXReference.SourceTree> sourceTree=PBXReference.SourceTree.fromBuildSetting(firstElement);
      if (sourceTree.isPresent()) {
        int nameCount=path.getNameCount();
        if (nameCount < 2) {
          throw new HumanReadableException("Invalid source tree path: '%s'. Should have at least one path component after" + "'%s'.",path,firstElement);
        }
        return FrameworkPath.ofSourceTreePath(SourceTreePath.ofAutodetectedType(sourceTree.get(),path.subpath(1,path.getNameCount())));
      }
 else {
        throw new HumanReadableException("Unknown SourceTree: '%s'. Should be one of: %s",firstElement,Joiner.on(", ").join(Iterables.transform(ImmutableList.copyOf(PBXReference.SourceTree.values()),new Function<PBXReference.SourceTree,String>(){
          @Override public String apply(          PBXReference.SourceTree input){
            return "$" + input.toString();
          }
        }
)));
      }
    }
 else {
      return FrameworkPath.ofSourcePath(sourcePathTypeCoercer.coerce(filesystem,pathRelativeToProjectRoot,object));
    }
  }
  throw CoerceFailedException.simple(object,getOutputClass(),"input should be either a source tree path or a source path");
}
