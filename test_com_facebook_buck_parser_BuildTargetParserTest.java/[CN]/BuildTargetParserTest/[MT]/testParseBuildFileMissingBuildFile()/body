{
  ProjectFilesystem mockProjectFilesystem=createMock(ProjectFilesystem.class);
  expect(mockProjectFilesystem.exists("facebook/missing")).andReturn(true);
  expect(mockProjectFilesystem.exists("facebook/missing/" + BuckConstant.BUILD_RULES_FILE_NAME)).andReturn(false);
  replay(mockProjectFilesystem);
  BuildTargetParser parser=new BuildTargetParser(mockProjectFilesystem);
  try {
    parser.parse("//facebook/missing:assets",ParseContext.forBaseName("//facebook/orca"));
    fail("parse() should throw an exception");
  }
 catch (  NoSuchBuildTargetException e) {
    assertEquals("No " + BuckConstant.BUILD_RULES_FILE_NAME + " file facebook/missing/"+ BuckConstant.BUILD_RULES_FILE_NAME+ " when resolving target "+ "//facebook/missing:assets in context BUILD_FILE //facebook/orca/"+ BuckConstant.BUILD_RULES_FILE_NAME,e.getMessage());
  }
  verify(mockProjectFilesystem);
}
