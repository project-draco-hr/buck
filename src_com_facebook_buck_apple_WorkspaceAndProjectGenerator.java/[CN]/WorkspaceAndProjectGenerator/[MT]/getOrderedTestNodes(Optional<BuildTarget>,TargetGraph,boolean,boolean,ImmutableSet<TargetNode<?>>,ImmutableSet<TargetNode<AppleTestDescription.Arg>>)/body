{
  LOG.debug("Getting ordered test target nodes for %s",orderedTargetNodes);
  ImmutableSet.Builder<TargetNode<AppleTestDescription.Arg>> testsBuilder=ImmutableSet.builder();
  if (includeProjectTests) {
    TargetNode<?> mainTargetNode=null;
    if (mainTarget.isPresent()) {
      mainTargetNode=targetGraph.get(mainTarget.get());
    }
    for (    TargetNode<?> node : orderedTargetNodes) {
      if (includeDependenciesTests || (mainTargetNode != null && node.equals(mainTargetNode))) {
        if (!(node.getConstructorArg() instanceof HasTests)) {
          continue;
        }
        for (        BuildTarget explicitTestTarget : ((HasTests)node.getConstructorArg()).getTests()) {
          TargetNode<?> explicitTestNode=targetGraph.get(explicitTestTarget);
          if (explicitTestNode != null) {
            Optional<TargetNode<AppleTestDescription.Arg>> castedNode=explicitTestNode.castArg(AppleTestDescription.Arg.class);
            if (castedNode.isPresent()) {
              testsBuilder.add(castedNode.get());
            }
 else {
              throw new HumanReadableException("Test target specified in '%s' is not a test: '%s'",node.getBuildTarget(),explicitTestTarget);
            }
          }
 else {
            throw new HumanReadableException("Test target specified in '%s' is not in the target graph: '%s'",node.getBuildTarget(),explicitTestTarget);
          }
        }
      }
    }
  }
  for (  TargetNode<AppleTestDescription.Arg> extraTestTarget : extraTestBundleTargets) {
    testsBuilder.add(extraTestTarget);
  }
  return testsBuilder.build();
}
