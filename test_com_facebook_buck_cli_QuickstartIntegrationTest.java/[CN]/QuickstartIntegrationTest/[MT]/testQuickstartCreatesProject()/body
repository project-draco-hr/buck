{
  ProjectWorkspace quickstartWorkspace=TestDataHelper.createProjectWorkspaceForScenario(this,"empty_project",quickstartDirectory);
  quickstartWorkspace.setUp();
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(Paths.get("."));
  AndroidDirectoryResolver androidDirectoryResolver=new DefaultAndroidDirectoryResolver(projectFilesystem,Optional.<String>absent(),new DefaultPropertyFinder(projectFilesystem,ImmutableMap.copyOf(System.getenv())));
  Path androidSdk=androidDirectoryResolver.findAndroidSdkDirSafe().orNull();
  ProcessResult result=quickstartWorkspace.runBuckCommand("quickstart","--dest-dir",destDir.getRoot().getAbsolutePath(),"--android-sdk",androidSdk.toAbsolutePath().toString());
  result.assertSuccess();
  quickstartWorkspace.verify();
  File readme=new File(destDir.getRoot(),"README.md");
  assertTrue("`buck quickstart` should create a README file.",readme.isFile());
  assertEquals("`buck quickstart` should output the contents of the README file to standard output.",Files.toString(readme,StandardCharsets.UTF_8),result.getStdout());
  File localProp=new File(destDir.getRoot(),"local.properties");
  assertTrue("`buck quickstart` should create a local.properties file.",localProp.isFile());
  assertEquals("`buck quickstart` should put the Android SDK in the local.properties file.","sdk.dir=" + androidSdk + "\n",Files.toString(localProp,StandardCharsets.UTF_8));
  ProjectWorkspace targetsWorkspace=new ProjectWorkspace(destDir.getRoot(),destDir);
  targetsWorkspace.setUp();
  result=targetsWorkspace.runBuckCommand("targets");
  result.assertSuccess();
  targetsWorkspace.verify();
  assertEquals("`buck targets` should display a list of targets.",Joiner.on('\n').join("//apps/myapp:app","//apps/myapp:app#aapt_package","//apps/myapp:app#dex_merge","//apps/myapp:app#uber_r_dot_java","//apps/myapp:debug_keystore","//apps/myapp:project_config","//java/com/example/activity:activity","//java/com/example/activity:activity#dex","//java/com/example/activity:project_config","//res/com/example/activity:project_config","//res/com/example/activity:res") + "\n",result.getStdout());
  result=targetsWorkspace.runBuckCommand("build","app");
  result.assertSuccess();
  targetsWorkspace.verify();
  File buckOut=targetsWorkspace.getFile("buck-out");
  assertTrue("`buck build` should create a buck-out directory.",buckOut.isDirectory());
}
