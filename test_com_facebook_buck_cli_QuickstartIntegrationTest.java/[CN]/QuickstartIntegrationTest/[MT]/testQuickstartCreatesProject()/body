{
  AssumeAndroidPlatform.assumeSdkIsAvailable();
  ProjectWorkspace quickstartWorkspace=TestDataHelper.createProjectWorkspaceForScenario(this,"empty_project",quickstartDirectory);
  quickstartWorkspace.setUp();
  ProcessResult result=quickstartWorkspace.runBuckCommand("quickstart","--dest-dir",destDir.getRoot().toAbsolutePath().toString()).assertSuccess();
  ProjectWorkspace destinationWorkspace=TestDataHelper.createProjectWorkspaceForScenario(this,"quickstart_expected_project",destDir);
  destinationWorkspace.setUp();
  destinationWorkspace.verify();
  Path readme=destDir.getRoot().resolve("README.md");
  assertTrue("`buck quickstart` should create a README file.",Files.isRegularFile(readme));
  assertEquals("`buck quickstart` should output the contents of the README file to standard output.",new String(Files.readAllBytes(readme),StandardCharsets.UTF_8),result.getStdout());
  Path localProp=destDir.getRoot().resolve("local.properties");
  Properties prop=new Properties();
  prop.load(Files.newInputStream(localProp));
  assertTrue("`buck quickstart` should create a local.properties file.",Files.isRegularFile(localProp));
  String androidSdk=prop.getProperty("sdk.dir");
  assertTrue("`buck quickstart` should put the Android SDK in the local.properties file.",androidSdk != null && new File(androidSdk).isDirectory());
  result=destinationWorkspace.runBuckCommand("targets").assertSuccess();
  assertEquals("`buck targets` should display a list of targets.",Joiner.on('\n').join("//apps/myapp:app","//apps/myapp:debug_keystore","//apps/myapp:project_config","//java/com/example/activity:activity","//java/com/example/activity:project_config","//res/com/example/activity:project_config","//res/com/example/activity:res") + "\n",result.getStdout());
  destinationWorkspace.runBuckCommand("build","app").assertSuccess();
  Path buckOut=destinationWorkspace.getPath("buck-out");
  assertTrue("`buck build` should create a buck-out directory.",Files.isDirectory(buckOut));
}
