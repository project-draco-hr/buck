{
  Preconditions.checkState(buildFile.isAbsolute());
  invalidateIfProjectBuildFileParserStateChanged(cell);
  try {
    List<Map<String,Object>> allRawNodes=loadRawNodes(cell,buildFile,parser);
    ImmutableSet.Builder<TargetNode<?>> nodes=ImmutableSet.builder();
    for (    final Map<String,Object> rawNode : allRawNodes) {
      UnflavoredBuildTarget unflavored=parseBuildTargetFromRawRule(cell.getRoot(),rawNode);
      final BuildTarget target=BuildTarget.of(unflavored);
      TargetNode<?> node=allTargetNodes.get(target,new Callable<TargetNode<?>>(){
        @Override public TargetNode<?> call() throws Exception {
          return createTargetNode(eventBus,cell,buildFile,target,rawNode,nodeListener);
        }
      }
);
      nodes.add(node);
    }
    return nodes.build();
  }
 catch (  UncheckedExecutionException|ExecutionException e) {
    throw propagate(e);
  }
}
