{
  LOG.debug("Invalidating path %s for cell %s",path,cell);
  path=cell.getFilesystem().resolve(path);
  try (AutoCloseableLock writeLock=nodesAndTargetsLock.writeLock()){
    List<Map<String,Object>> rawNodes=allRawNodes.getIfPresent(path);
    if (rawNodes != null) {
      rulesInvalidatedByWatchEventsCounter.inc(rawNodes.size());
      for (      Map<String,Object> rawNode : rawNodes) {
        UnflavoredBuildTarget target=parseBuildTargetFromRawRule(cell.getRoot(),rawNode);
        LOG.debug("Invalidating target for path %s: %s",path,target);
        allTargetNodes.invalidateAll(targetsCornucopia.get(target));
        targetsCornucopia.removeAll(target);
      }
      allRawNodes.invalidate(path);
    }
  }
   Iterable<Path> dependents=buildFileDependents.get(path);
  LOG.debug("Invalidating dependents for path %s: %s",path,dependents);
  for (  Path dependent : dependents) {
    if (dependent.equals(path)) {
      continue;
    }
    invalidatePath(cell,dependent);
  }
  buildFileDependents.removeAll(path);
  buildFileConfigs.remove(path);
}
