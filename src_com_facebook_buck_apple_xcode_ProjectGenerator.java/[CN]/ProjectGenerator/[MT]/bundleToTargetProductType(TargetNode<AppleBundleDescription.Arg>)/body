{
  TargetNode<AppleNativeTargetDescriptionArg> binary=(TargetNode<AppleNativeTargetDescriptionArg>)Preconditions.checkNotNull(targetGraph.get(targetNode.getConstructorArg().binary));
  if (targetNode.getConstructorArg().extension.isLeft()) {
    AppleBundleExtension extension=targetNode.getConstructorArg().extension.getLeft();
    if (binary.getType().equals(AppleLibraryDescription.TYPE)) {
      if (binary.getBuildTarget().getFlavors().contains(AppleLibraryDescription.DYNAMIC_LIBRARY)) {
switch (extension) {
case FRAMEWORK:
          return PBXTarget.ProductType.FRAMEWORK;
case APPEX:
        return PBXTarget.ProductType.APP_EXTENSION;
case BUNDLE:
      return PBXTarget.ProductType.BUNDLE;
case OCTEST:
    return PBXTarget.ProductType.BUNDLE;
case XCTEST:
  return PBXTarget.ProductType.UNIT_TEST;
}
}
 else {
switch (extension) {
case FRAMEWORK:
return PBXTarget.ProductType.STATIC_FRAMEWORK;
}
}
}
 else if (binary.getType().equals(AppleBinaryDescription.TYPE)) {
switch (extension) {
case APP:
return PBXTarget.ProductType.APPLICATION;
}
}
}
return PBXTarget.ProductType.BUNDLE;
}
