{
  DocumentBuilder docBuilder;
  Transformer transformer;
  try {
    docBuilder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
    transformer=TransformerFactory.newInstance().newTransformer();
  }
 catch (  ParserConfigurationException|TransformerConfigurationException e) {
    throw new RuntimeException(e);
  }
  DOMImplementation domImplementation=docBuilder.getDOMImplementation();
  Document doc=domImplementation.createDocument(null,"Workspace",null);
  doc.setXmlVersion("1.0");
  Element rootElem=doc.getDocumentElement();
  rootElem.setAttribute("version","1.0");
  Element fileRef=doc.createElement("FileRef");
  fileRef.setAttribute("location","container:" + xcodeprojDir.getFileName().toString());
  rootElem.appendChild(fileRef);
  workspace=doc;
  Path projectWorkspaceDir=xcodeprojDir.getParent().resolve(projectName + ".xcworkspace");
  projectFilesystem.mkdirs(projectWorkspaceDir);
  Path serializedWorkspace=projectWorkspaceDir.resolve("contents.xcworkspacedata");
  try (ByteArrayOutputStream outputStream=new ByteArrayOutputStream()){
    DOMSource source=new DOMSource(doc);
    StreamResult result=new StreamResult(outputStream);
    transformer.transform(source,result);
    String contentsToWrite=outputStream.toString();
    if (MorePaths.fileContentsDiffer(new ByteArrayInputStream(contentsToWrite.getBytes(Charsets.UTF_8)),serializedWorkspace,projectFilesystem)) {
      if (shouldGenerateReadOnlyFiles()) {
        projectFilesystem.writeContentsToPath(contentsToWrite,serializedWorkspace,READ_ONLY_FILE_ATTRIBUTE);
      }
 else {
        projectFilesystem.writeContentsToPath(contentsToWrite,serializedWorkspace);
      }
    }
  }
 catch (  TransformerException e) {
    throw new RuntimeException(e);
  }
}
