{
  Preconditions.checkNotNull(targetNameToGIDMap);
  XcodeprojSerializer serializer=new XcodeprojSerializer(new GidGenerator(ImmutableSet.<String>builder().addAll(targetNameToGIDMap.values()).addAll(nativeTargetGIDs).build()),project);
  NSDictionary rootObject=serializer.toPlist();
  Path xcodeprojDir=outputDirectory.resolve(projectName + ".xcodeproj");
  projectFilesystem.mkdirs(xcodeprojDir);
  Path serializedProject=xcodeprojDir.resolve("project.pbxproj");
  String unsignedXmlProject=rootObject.toXMLPropertyList();
  Optional<String> signedXmlProject=SourceSigner.sign(unsignedXmlProject);
  String contentsToWrite;
  if (signedXmlProject.isPresent()) {
    contentsToWrite=signedXmlProject.get();
  }
 else {
    contentsToWrite=unsignedXmlProject;
  }
  if (MorePaths.fileContentsDiffer(new ByteArrayInputStream(contentsToWrite.getBytes(Charsets.UTF_8)),serializedProject,projectFilesystem)) {
    LOG.debug("Regenerating project at %s",serializedProject);
    if (shouldGenerateReadOnlyFiles()) {
      projectFilesystem.writeContentsToPath(contentsToWrite,serializedProject,READ_ONLY_FILE_ATTRIBUTE);
    }
 else {
      projectFilesystem.writeContentsToPath(contentsToWrite,serializedProject);
    }
  }
 else {
    LOG.debug("Not regenerating project at %s (contents have not changed)",serializedProject);
  }
  return xcodeprojDir;
}
