{
  PBXNativeTarget target=new PBXNativeTarget(getXcodeTargetName(rule));
  target.setProductType(PBXTarget.ProductType.MACOSX_FRAMEWORK);
  PBXGroup targetGroup=project.getMainGroup().getOrCreateChildGroupByName(target.getName());
  setTargetBuildConfigurations(rule.getBuildTarget(),target,targetGroup,buildable.getConfigurations(),ImmutableMap.<String,String>of());
  addRunScriptBuildPhasesForDependencies(rule,target);
  addSourcesAndHeadersBuildPhases(target,targetGroup,buildable.getSrcs(),buildable.getPerFileFlags());
  ImmutableSet.Builder<String> frameworksBuilder=ImmutableSet.builder();
  frameworksBuilder.addAll(buildable.getFrameworks());
  collectRecursiveFrameworkDependencies(rule,frameworksBuilder);
  addFrameworksBuildPhase(rule.getBuildTarget(),target,project.getMainGroup().getOrCreateChildGroupByName("Frameworks"),frameworksBuilder.build(),collectRecursiveLibraryDependencies(rule));
  addResourcesBuildPhase(target,targetGroup,collectRecursiveResources(rule,OsxResourceDescription.TYPE));
  addAssetCatalogBuildPhase(target,targetGroup,collectRecursiveAssetCatalogs(rule));
  addCoreDataModelBuildPhase(targetGroup,collectCoreDataModels(rule.getDeps()));
  PBXGroup productsGroup=project.getMainGroup().getOrCreateChildGroupByName("Products");
  String frameworkName=getProductName(rule.getBuildTarget()) + ".framework";
  PBXFileReference productReference=new PBXFileReference(frameworkName,frameworkName,PBXReference.SourceTree.BUILT_PRODUCTS_DIR);
  productsGroup.getChildren().add(productReference);
  target.setProductReference(productReference);
  project.getTargets().add(target);
  return target;
}
