{
  ImmutableSetMultimap.Builder<PBXCopyFilesBuildPhase.Destination,BuildRule> ruleByDestinationBuilder=ImmutableSetMultimap.builder();
  for (  BuildRule copiedRule : copiedRules) {
    Optional<PBXCopyFilesBuildPhase.Destination> optionalDestination=getDestinationForRule(copiedRule);
    if (optionalDestination.isPresent()) {
      ruleByDestinationBuilder.put(optionalDestination.get(),copiedRule);
    }
  }
  ImmutableSetMultimap<PBXCopyFilesBuildPhase.Destination,BuildRule> ruleByDestination=ruleByDestinationBuilder.build();
  for (  PBXCopyFilesBuildPhase.Destination destination : ruleByDestination.keySet()) {
    PBXCopyFilesBuildPhase copyFilesBuildPhase=new PBXCopyFilesBuildPhase(destination,"");
    target.getBuildPhases().add(copyFilesBuildPhase);
    for (    BuildRule file : ruleByDestination.get(destination)) {
      PBXFileReference fileReference=project.getMainGroup().getOrCreateChildGroupByName("Dependencies").getOrCreateFileReferenceBySourceTreePath(getProductsSourceTreePathForRule(file));
      copyFilesBuildPhase.getFiles().add(new PBXBuildFile(fileReference));
    }
  }
}
