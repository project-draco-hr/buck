{
  return FluentIterable.from(AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,Optional.of(AppleBuildRules.XCODE_TARGET_BUILD_RULE_TYPES))).filter(new Predicate<TargetNode<?>>(){
    @Override public boolean apply(    TargetNode<?> input){
      Optional<TargetNode<AppleNativeTargetDescriptionArg>> library=getLibraryNode(targetGraph,input);
      return library.isPresent() && !library.get().getConstructorArg().getUseBuckHeaderMaps();
    }
  }
).transform(new Function<TargetNode<?>,String>(){
    @Override public String apply(    TargetNode<?> input){
      return getHeaderSearchPath(input);
    }
  }
).toSet();
}
