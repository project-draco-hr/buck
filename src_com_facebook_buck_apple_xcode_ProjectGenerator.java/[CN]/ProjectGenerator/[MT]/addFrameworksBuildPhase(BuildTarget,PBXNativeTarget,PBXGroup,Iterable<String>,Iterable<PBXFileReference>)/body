{
  PBXFrameworksBuildPhase frameworksBuildPhase=new PBXFrameworksBuildPhase();
  target.getBuildPhases().add(frameworksBuildPhase);
  for (  String framework : frameworks) {
    Path path=Paths.get(framework);
    String firstElement=Preconditions.checkNotNull(Iterables.getFirst(path,Paths.get(""))).toString();
    if (firstElement.startsWith("$")) {
      Optional<PBXReference.SourceTree> sourceTree=PBXReference.SourceTree.fromBuildSetting(firstElement);
      if (sourceTree.isPresent()) {
        Path sdkRootRelativePath=path.subpath(1,path.getNameCount());
        PBXFileReference fileReference=sharedFrameworksGroup.getOrCreateFileReferenceBySourceTreePath(new SourceTreePath(sourceTree.get(),sdkRootRelativePath));
        frameworksBuildPhase.getFiles().add(new PBXBuildFile(fileReference));
      }
 else {
        throw new HumanReadableException(String.format("Unknown SourceTree: %s in build target: %s. Should be one of: %s",firstElement,buildTarget,Joiner.on(',').join(Iterables.transform(ImmutableList.copyOf(PBXReference.SourceTree.values()),new Function<PBXReference.SourceTree,String>(){
          @Override public String apply(          PBXReference.SourceTree input){
            return "$" + input.toString();
          }
        }
))));
      }
    }
 else {
      PBXFileReference fileReference=sharedFrameworksGroup.getOrCreateFileReferenceBySourceTreePath(new SourceTreePath(PBXReference.SourceTree.GROUP,pathRelativizer.outputPathToBuildTargetPath(buildTarget,path)));
      frameworksBuildPhase.getFiles().add(new PBXBuildFile(fileReference));
    }
  }
  for (  PBXFileReference archive : archives) {
    frameworksBuildPhase.getFiles().add(new PBXBuildFile(archive));
  }
}
