{
  ConfigInXcodeLayout extractedLayers=null;
  ImmutableList<XcodeRuleConfigurationLayer> layers=configuration.getLayers();
switch (layers.size()) {
case 2:
    if (layers.get(0).getLayerType() == XcodeRuleConfigurationLayer.TYPE.FILE && layers.get(1).getLayerType() == XcodeRuleConfigurationLayer.TYPE.FILE) {
      extractedLayers=new ConfigInXcodeLayout(buildTarget,layers.get(0).getSourcePath(),ImmutableMap.<String,String>of(),layers.get(1).getSourcePath(),ImmutableMap.<String,String>of());
    }
  break;
case 4:
if (layers.get(0).getLayerType() == XcodeRuleConfigurationLayer.TYPE.FILE && layers.get(1).getLayerType() == XcodeRuleConfigurationLayer.TYPE.INLINE_SETTINGS && layers.get(2).getLayerType() == XcodeRuleConfigurationLayer.TYPE.FILE && layers.get(3).getLayerType() == XcodeRuleConfigurationLayer.TYPE.INLINE_SETTINGS) {
  extractedLayers=new ConfigInXcodeLayout(buildTarget,layers.get(0).getSourcePath(),layers.get(1).getInlineSettings().or(ImmutableMap.<String,String>of()),layers.get(2).getSourcePath(),layers.get(3).getInlineSettings().or(ImmutableMap.<String,String>of()));
}
break;
default :
break;
}
if (extractedLayers == null) {
throw new HumanReadableException("Configuration layers cannot be expressed in xcode for target: " + buildTarget + "\n"+ "   expected: [File, Inline settings, File, Inline settings]");
}
return extractedLayers;
}
