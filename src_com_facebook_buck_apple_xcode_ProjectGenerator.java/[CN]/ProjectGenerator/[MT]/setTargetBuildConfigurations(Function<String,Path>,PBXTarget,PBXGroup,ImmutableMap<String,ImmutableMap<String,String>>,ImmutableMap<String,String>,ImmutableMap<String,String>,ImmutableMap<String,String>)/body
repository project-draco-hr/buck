{
  PBXGroup configurationsGroup=targetGroup.getOrCreateChildGroupByName("Configurations");
  for (  Map.Entry<String,ImmutableMap<String,String>> configurationEntry : configurations.entrySet()) {
    targetConfigNamesBuilder.add(configurationEntry.getKey());
    ImmutableMap<String,String> targetLevelInlineSettings=configurationEntry.getValue();
    XCBuildConfiguration outputConfiguration=target.getBuildConfigurationList().getBuildConfigurationsByName().getUnchecked(configurationEntry.getKey());
    HashMap<String,String> combinedOverrideConfigs=Maps.newHashMap(overrideBuildSettings);
    for (    Map.Entry<String,String> entry : defaultBuildSettings.entrySet()) {
      String existingSetting=targetLevelInlineSettings.get(entry.getKey());
      if (existingSetting == null) {
        combinedOverrideConfigs.put(entry.getKey(),entry.getValue());
      }
    }
    for (    Map.Entry<String,String> entry : appendBuildSettings.entrySet()) {
      String existingSetting=targetLevelInlineSettings.get(entry.getKey());
      String settingPrefix=existingSetting != null ? existingSetting : "$(inherited)";
      combinedOverrideConfigs.put(entry.getKey(),settingPrefix + " " + entry.getValue());
    }
    Iterable<Map.Entry<String,String>> entries=Iterables.concat(targetLevelInlineSettings.entrySet(),combinedOverrideConfigs.entrySet());
    Path xcconfigPath=configurationNameToXcconfigPath.apply(configurationEntry.getKey());
    projectFilesystem.mkdirs(xcconfigPath.getParent());
    StringBuilder stringBuilder=new StringBuilder();
    for (    Map.Entry<String,String> entry : entries) {
      stringBuilder.append(entry.getKey());
      stringBuilder.append(" = ");
      stringBuilder.append(entry.getValue());
      stringBuilder.append('\n');
    }
    String xcconfigContents=stringBuilder.toString();
    if (MorePaths.fileContentsDiffer(new ByteArrayInputStream(xcconfigContents.getBytes(Charsets.UTF_8)),xcconfigPath,projectFilesystem)) {
      if (shouldGenerateReadOnlyFiles()) {
        projectFilesystem.writeContentsToPath(xcconfigContents,xcconfigPath,READ_ONLY_FILE_ATTRIBUTE);
      }
 else {
        projectFilesystem.writeContentsToPath(xcconfigContents,xcconfigPath);
      }
    }
    PBXFileReference fileReference=configurationsGroup.getOrCreateFileReferenceBySourceTreePath(new SourceTreePath(PBXReference.SourceTree.SOURCE_ROOT,pathRelativizer.outputDirToRootRelative(xcconfigPath)));
    outputConfiguration.setBaseConfigurationReference(fileReference);
  }
}
