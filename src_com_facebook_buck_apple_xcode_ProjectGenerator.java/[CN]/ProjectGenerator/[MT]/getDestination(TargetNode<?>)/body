{
  if (targetNode.getType().equals(AppleBundleDescription.TYPE)) {
    AppleBundleDescription.Arg arg=(AppleBundleDescription.Arg)targetNode.getConstructorArg();
    AppleBundleExtension extension=arg.extension.isLeft() ? arg.extension.getLeft() : AppleBundleExtension.BUNDLE;
switch (extension) {
case FRAMEWORK:
      return Optional.of(PBXCopyFilesBuildPhase.Destination.FRAMEWORKS);
case APPEX:
case PLUGIN:
    return Optional.of(PBXCopyFilesBuildPhase.Destination.PLUGINS);
case APP:
  return Optional.of(PBXCopyFilesBuildPhase.Destination.EXECUTABLES);
default :
return Optional.of(PBXCopyFilesBuildPhase.Destination.PRODUCTS);
}
}
 else if (targetNode.getType().equals(AppleLibraryDescription.TYPE)) {
if (targetNode.getBuildTarget().getFlavors().contains(CxxDescriptionEnhancer.SHARED_FLAVOR)) {
return Optional.of(PBXCopyFilesBuildPhase.Destination.FRAMEWORKS);
}
 else {
return Optional.absent();
}
}
 else if (targetNode.getType().equals(AppleBinaryDescription.TYPE)) {
return Optional.of(PBXCopyFilesBuildPhase.Destination.EXECUTABLES);
}
 else {
throw new RuntimeException("Unexpected type: " + targetNode.getType());
}
}
