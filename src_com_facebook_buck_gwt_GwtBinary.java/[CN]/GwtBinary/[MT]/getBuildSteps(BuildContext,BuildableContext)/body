{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  Path workingDirectory=getPathToOutputFile().getParent();
  steps.add(new MakeCleanDirectoryStep(workingDirectory));
  Path tempWarFolder=workingDirectory.resolve("tmp");
  ImmutableList.Builder<String> javaArgsBuilder=ImmutableList.builder();
  javaArgsBuilder.add("java","-classpath",Joiner.on(":").join(getClasspathEntries()),GWT_COMPILER_CLASS,"-war",tempWarFolder.toString(),"-style",style.name(),"-optimize",String.valueOf(optimize),"-localWorkers",String.valueOf(localWorkers));
  if (draftCompile) {
    javaArgsBuilder.add("-draftCompile");
  }
  javaArgsBuilder.addAll(modules);
  final ImmutableList<String> javaArgs=javaArgsBuilder.build();
  Step javaStep=new ShellStep(){
    @Override public String getShortName(){
      return "gwt-compile";
    }
    @Override protected ImmutableList<String> getShellCommandInternal(    ExecutionContext context){
      return javaArgs;
    }
  }
;
  steps.add(javaStep);
  steps.add(new JarDirectoryStep(getPathToOutputFile(),ImmutableSet.of(tempWarFolder),null,null));
  buildableContext.recordArtifact(getPathToOutputFile());
  return steps.build();
}
