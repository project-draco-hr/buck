{
  if (headerOnly) {
    return PythonPackageComponents.of();
  }
  if (linkage == Linkage.STATIC) {
    return PythonPackageComponents.of();
  }
  if (!isPlatformSupported(cxxPlatform)) {
    return PythonPackageComponents.of();
  }
  ImmutableMap.Builder<Path,SourcePath> libs=ImmutableMap.builder();
  String sharedLibrarySoname=soname.or(CxxDescriptionEnhancer.getSharedLibrarySoname(getBuildTarget(),cxxPlatform));
  BuildRule sharedLibraryBuildRule=CxxDescriptionEnhancer.requireBuildRule(params,ruleResolver,cxxPlatform.getFlavor(),CxxDescriptionEnhancer.SHARED_FLAVOR);
  libs.put(Paths.get(sharedLibrarySoname),new BuildTargetSourcePath(sharedLibraryBuildRule.getProjectFilesystem(),sharedLibraryBuildRule.getBuildTarget()));
  return PythonPackageComponents.of(ImmutableMap.<Path,SourcePath>of(),ImmutableMap.<Path,SourcePath>of(),libs.build(),ImmutableSet.<SourcePath>of(),Optional.<Boolean>absent());
}
