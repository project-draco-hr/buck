{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  ImmutableList<String> flags=ImmutableList.of("-Dtest=blah");
  Path output=Paths.get("test.ii");
  Path input=Paths.get("test.cpp");
  CxxPreprocessAndCompile buildRule=new CxxPreprocessAndCompile(params,pathResolver,DEFAULT_COMPILER,CxxPreprocessAndCompileStep.Operation.PREPROCESS,flags,output,new TestSourcePath(input.toString()),ImmutableList.<Path>of(),ImmutableList.<Path>of(),DEFAULT_FRAMEWORK_ROOTS,ImmutableCxxHeaders.builder().build(),DEFAULT_SANITIZER);
  ImmutableList<String> expectedPreprocessCommand=ImmutableList.<String>builder().add("compiler").add("-E").add("-Dtest=blah").add(input.toString()).build();
  ImmutableList<String> actualPreprocessCommand=buildRule.getCommand();
  assertEquals(expectedPreprocessCommand,actualPreprocessCommand);
}
