def _warn_legacy_version(self):
    LV = packaging.version.LegacyVersion
    is_legacy = isinstance(self._parsed_version, LV)
    if (not is_legacy):
        return
    if (not self.version):
        return
    tmpl = textwrap.dedent("\n            '{project_name} ({version})' is being parsed as a legacy,\n            non PEP 440,\n            version. You may find odd behavior and sort order.\n            In particular it will be sorted as less than 0.0. It\n            is recommended to migrate to PEP 440 compatible\n            versions.\n            ").strip().replace('\n', ' ')
    warnings.warn(tmpl.format(**vars(self)), PEP440Warning)
