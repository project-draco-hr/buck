@property
def _dep_map(self):
    try:
        return self.__dep_map
    except AttributeError:
        dm = self.__dep_map = {None: [], }
        for name in ('requires.txt', 'depends.txt'):
            for (extra, reqs) in split_sections(self._get_metadata(name)):
                if extra:
                    if (':' in extra):
                        (extra, marker) = extra.split(':', 1)
                        if invalid_marker(marker):
                            reqs = []
                        elif (not evaluate_marker(marker)):
                            reqs = []
                    extra = (safe_extra(extra) or None)
                dm.setdefault(extra, []).extend(parse_requirements(reqs))
        return dm
