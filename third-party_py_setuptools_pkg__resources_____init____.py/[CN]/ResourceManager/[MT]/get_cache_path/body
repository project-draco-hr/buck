def get_cache_path(self, archive_name, names=()):
    'Return absolute location in cache for `archive_name` and `names`\n\n        The parent directory of the resulting path will be created if it does\n        not already exist.  `archive_name` should be the base filename of the\n        enclosing egg (which may not be the name of the enclosing zipfile!),\n        including its ".egg" extension.  `names`, if provided, should be a\n        sequence of path name parts "under" the egg\'s extraction location.\n\n        This method should only be called by resource providers that need to\n        obtain an extraction location, and only for names they intend to\n        extract, as it tracks the generated names for possible cleanup later.\n        '
    extract_path = (self.extraction_path or get_default_cache())
    target_path = os.path.join(extract_path, (archive_name + '-tmp'), *names)
    try:
        _bypass_ensure_directory(target_path)
    except:
        self.extraction_error()
    self._warn_unsafe_extraction_path(extract_path)
    self.cached_files[target_path] = 1
    return target_path
