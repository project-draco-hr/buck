def translate(self, package, into=None):
    'From a binary package, translate to a local binary distribution.'
    if (not package.local):
        raise ValueError('BinaryTranslator cannot translate remote packages.')
    if (not isinstance(package, self._package_type)):
        return None
    if (not package.compatible(identity=self._identity, platform=self._platform)):
        TRACER.log(('Target package %s is not compatible with %s / %s' % (package, self._identity, self._platform)))
        return None
    into = (into or safe_mkdtemp())
    target_path = os.path.join(into, package.filename)
    safe_copy(package.path, target_path)
    return DistributionHelper.distribution_from_path(target_path)
