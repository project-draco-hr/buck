{
  final Path path=resolvePath(rawPath);
  HashCodeAndFileType value;
  if (projectFilesystem.isDirectory(path)) {
    value=HashCodeAndFileType.ofDirectory(hashCode,ImmutableSet.copyOf(FluentIterable.from(projectFilesystem.getFilesUnderPath(path)).transform(new Function<Path,Path>(){
      @Override public Path apply(      Path input){
        return path.relativize(input);
      }
    }
)));
  }
 else   if (rawPath.toString().endsWith(".jar")) {
    value=HashCodeAndFileType.ofArchive(hashCode,projectFilesystem,projectFilesystem.getPathRelativeToProjectRoot(path).get());
  }
 else {
    value=HashCodeAndFileType.ofFile(hashCode);
  }
  loadingCache.put(path,value);
}
