{
  final Path path=resolvePath(rawPath);
  HashCodeAndFileType.Builder builder=HashCodeAndFileType.builder();
  builder.setGetHashCode(hashCode);
  if (projectFilesystem.isDirectory(path)) {
    builder.setType(HashCodeAndFileType.Type.DIRECTORY);
    builder.addAllChildren(FluentIterable.from(projectFilesystem.getFilesUnderPath(path)).transform(new Function<Path,Path>(){
      @Override public Path apply(      Path input){
        return path.relativize(input);
      }
    }
));
  }
 else {
    builder.setType(HashCodeAndFileType.Type.FILE);
  }
  loadingCache.put(path,builder.build());
}
