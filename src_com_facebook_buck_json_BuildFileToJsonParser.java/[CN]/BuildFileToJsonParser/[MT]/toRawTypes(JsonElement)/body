{
  if (json.isJsonPrimitive()) {
    JsonPrimitive primitive=json.getAsJsonPrimitive();
    if (primitive.isString()) {
      return primitive.getAsString();
    }
 else     if (primitive.isBoolean()) {
      return primitive.getAsBoolean();
    }
 else     if (primitive.isNumber()) {
      Number number=primitive.getAsNumber();
      if (number.longValue() == number.doubleValue()) {
        return number.longValue();
      }
 else {
        return number;
      }
    }
 else {
      throw new IllegalStateException("Unknown primitive type: " + primitive);
    }
  }
 else   if (json.isJsonArray()) {
    JsonArray array=json.getAsJsonArray();
    List<Object> out=Lists.newArrayListWithCapacity(array.size());
    for (    JsonElement item : array) {
      out.add(toRawTypes(item));
    }
    return out;
  }
 else   if (json.isJsonObject()) {
    Map<String,Object> out=Maps.newHashMap();
    for (    Map.Entry<String,JsonElement> entry : json.getAsJsonObject().entrySet()) {
      out.put(entry.getKey(),toRawTypes(entry.getValue()));
    }
    return out;
  }
 else   if (json.isJsonNull()) {
    return null;
  }
 else {
    throw new IllegalStateException("Unknown type: " + json);
  }
}
