{
  SwiftCompile rule=requireSwiftCompileRule(cxxPlatform.getFlavor());
  NativeLinkableInput.Builder inputBuilder=NativeLinkableInput.builder();
  inputBuilder.addAllArgs(rule.getLinkArgs()).addAllFrameworks(frameworks).addAllLibraries(libraries);
  boolean isDynamic;
switch (linkage) {
case STATIC:
    isDynamic=false;
  break;
case SHARED:
isDynamic=true;
break;
case ANY:
isDynamic=type == Linker.LinkableDepType.SHARED;
break;
default :
throw new IllegalStateException("unhandled linkage type: " + linkage);
}
if (isDynamic) {
inputBuilder.addArgs(new SourcePathArg(getResolver(),new BuildTargetSourcePath(requireSwiftLinkRule(cxxPlatform.getFlavor()).getBuildTarget())));
}
return inputBuilder.build();
}
