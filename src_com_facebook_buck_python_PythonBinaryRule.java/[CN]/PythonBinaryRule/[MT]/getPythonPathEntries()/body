{
  final ImmutableSet.Builder<String> entries=ImmutableSet.builder();
  final PythonBinaryRule pythonBinaryRule=this;
  new AbstractDependencyVisitor(this){
    @Override public boolean visit(    BuildRule rule){
      Buildable buildable=rule.getBuildable();
      if (buildable instanceof PythonLibrary) {
        PythonLibrary pythonLibrary=(PythonLibrary)buildable;
        Optional<String> pythonPathEntry=pythonLibrary.getPythonPathDirectory();
        if (pythonPathEntry.isPresent()) {
          entries.add(pythonPathEntry.get());
        }
        return true;
      }
      return rule == pythonBinaryRule;
    }
  }
.start();
  return entries.build();
}
