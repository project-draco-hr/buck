{
  if (!BINARY_OPERATORS.contains(token.kind)) {
    return lhs;
  }
  List<QueryExpression> operands=new ArrayList<>();
  operands.add(lhs);
  TokenKind lastOperator=token.kind;
  while (BINARY_OPERATORS.contains(token.kind)) {
    TokenKind operator=token.kind;
    consume(operator);
    if (operator != lastOperator) {
      lhs=new BinaryOperatorExpression(lastOperator,operands);
      operands.clear();
      operands.add(lhs);
      lastOperator=operator;
    }
    QueryExpression rhs=parsePrimary();
    operands.add(rhs);
  }
  return new BinaryOperatorExpression(lastOperator,operands);
}
