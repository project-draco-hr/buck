{
  return cache.getJobWithCacheLookup(cell,buildTarget,new JobSupplier<T>(){
    @Override public ListenableFuture<T> get() throws BuildTargetException {
      return Futures.transformAsync(getItemToConvert(cell,buildTarget),new AsyncFunction<F,T>(){
        @Override public ListenableFuture<T> apply(        F from) throws BuildTargetException {
          return dispatchComputeNode(cell,buildTarget,from);
        }
      }
);
    }
  }
);
}
