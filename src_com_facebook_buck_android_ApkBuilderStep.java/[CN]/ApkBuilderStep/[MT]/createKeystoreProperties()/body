{
  KeystoreProperties keystoreProperties=KeystoreProperties.createFromPropertiesFile(pathToKeystore,pathToKeystorePropertiesFile,filesystem);
  KeyStore keystore=KeyStore.getInstance(JARSIGNER_KEY_STORE_TYPE);
  InputStream inputStream=filesystem.getInputStreamForRelativePath(pathToKeystore);
  char[] keystorePassword=keystoreProperties.getStorepass().toCharArray();
  try {
    keystore.load(inputStream,keystorePassword);
  }
 catch (  IOException|NoSuchAlgorithmException|CertificateException e) {
    throw new HumanReadableException(e,"%s is an invalid keystore.",pathToKeystore);
  }
  String alias=keystoreProperties.getAlias();
  char[] keyPassword=keystoreProperties.getKeypass().toCharArray();
  Key key=keystore.getKey(alias,keyPassword);
  Certificate certificate=keystore.getCertificate(alias);
  return new PrivateKeyAndCertificate((PrivateKey)key,(X509Certificate)certificate);
}
