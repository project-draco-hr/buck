{
  BuildId pretendBuildId=new BuildId("pretend-build-id");
  Path modulePath=Paths.get("module/submodule");
  Path directoryForTestResults=Paths.get("buck-out/gen/theresults/");
  Path testRunnerClasspath=Paths.get("build/classes/junit");
  ProjectFilesystem filesystem=FakeProjectFilesystem.createJavaOnlyFilesystem();
  Path classpathFile=filesystem.resolve("foo");
  JUnitJvmArgs args=JUnitJvmArgs.builder().setBuildId(pretendBuildId).setBuckModuleBaseSourceCodePath(modulePath).setClasspathFile(classpathFile).setTestRunnerClasspath(testRunnerClasspath).setExtraJvmArgs(ImmutableList.<String>of()).setTestType(TestType.JUNIT).setDirectoryForTestResults(directoryForTestResults).addAllTestClasses(ImmutableList.<String>of()).build();
  JUnitStep junit=new JUnitStep(filesystem,ImmutableMap.<String,String>of(),Optional.<Long>absent(),ImmutableMap.<String,String>of("FOO","BAR"),new ExternalJavaRuntimeLauncher("/foo/bar/custom/java"),args);
  ImmutableMap<String,String> observedEnvironment=junit.getEnvironmentVariables(TestExecutionContext.newInstance());
  assertThat(observedEnvironment,hasEntry("FOO","BAR"));
}
