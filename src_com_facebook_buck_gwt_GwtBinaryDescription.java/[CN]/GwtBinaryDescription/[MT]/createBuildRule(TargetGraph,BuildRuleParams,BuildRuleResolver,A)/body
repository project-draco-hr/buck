{
  final ImmutableSortedSet.Builder<BuildRule> extraDeps=ImmutableSortedSet.naturalOrder();
  final ImmutableSortedSet.Builder<Path> gwtModuleJarsBuilder=ImmutableSortedSet.naturalOrder();
  ImmutableSortedSet<BuildRule> moduleDependencies=resolver.getAllRules(args.moduleDeps.get());
  new AbstractBreadthFirstTraversal<BuildRule>(moduleDependencies){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule rule){
      if (!(rule instanceof JavaLibrary)) {
        return ImmutableSet.of();
      }
      JavaLibrary javaLibrary=(JavaLibrary)rule;
      if (javaLibrary.getPathToOutput() == null) {
        return rule.getDeps();
      }
      BuildTarget gwtModuleTarget=BuildTargets.createFlavoredBuildTarget(javaLibrary.getBuildTarget().checkUnflavored(),JavaLibrary.GWT_MODULE_FLAVOR);
      Optional<BuildRule> gwtModule=resolver.getRuleOptional(gwtModuleTarget);
      if (!gwtModule.isPresent() && javaLibrary.getPathToOutput() != null) {
        ImmutableSortedSet<SourcePath> filesForGwtModule=ImmutableSortedSet.<SourcePath>naturalOrder().addAll(javaLibrary.getSources()).addAll(javaLibrary.getResources()).build();
        ImmutableSortedSet<BuildRule> deps=ImmutableSortedSet.copyOf(new SourcePathResolver(resolver).filterBuildRuleInputs(filesForGwtModule));
        BuildRule module=resolver.addToIndex(new GwtModule(params.copyWithChanges(gwtModuleTarget,Suppliers.ofInstance(deps),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of())),new SourcePathResolver(resolver),filesForGwtModule));
        gwtModule=Optional.of(module);
      }
      if (gwtModule.isPresent()) {
        extraDeps.add(gwtModule.get());
        gwtModuleJarsBuilder.add(Preconditions.checkNotNull(gwtModule.get().getPathToOutput()));
      }
      return rule.getDeps();
    }
  }
.start();
  return new GwtBinary(params.copyWithExtraDeps(Suppliers.ofInstance(extraDeps.build())),new SourcePathResolver(resolver),args.modules.get(),javaOptions.getJavaRuntimeLauncher(),args.vmArgs.get(),args.style.or(DEFAULT_STYLE),args.draftCompile.or(DEFAULT_DRAFT_COMPILE),args.optimize.or(DEFAULT_OPTIMIZE),args.localWorkers.or(DEFAULT_NUM_LOCAL_WORKERS),args.strict.or(DEFAULT_STRICT),args.experimentalArgs.get(),gwtModuleJarsBuilder.build());
}
