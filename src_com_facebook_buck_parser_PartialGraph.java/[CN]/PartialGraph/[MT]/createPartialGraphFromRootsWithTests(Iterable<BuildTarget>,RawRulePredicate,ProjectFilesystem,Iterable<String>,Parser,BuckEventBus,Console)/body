{
  Preconditions.checkNotNull(predicate);
  Iterable<BuildTarget> buildTargets=parser.filterTargetsInProjectFromRoots(roots,includes,eventBus,RawRulePredicates.alwaysTrue(),console);
  Preconditions.checkNotNull(buildTargets);
  ActionGraph buildGraph=parseAndCreateGraphFromTargets(buildTargets,includes,parser,eventBus,console).getActionGraph();
  ImmutableList.Builder<BuildTarget> buildAndTestTargetsBuilder=ImmutableList.<BuildTarget>builder().addAll(roots);
  PartialGraph testGraph=PartialGraph.createPartialGraph(RawRulePredicates.isTestRule(),filesystem,includes,parser,eventBus,console);
  ActionGraph testActionGraph=testGraph.getActionGraph();
  for (  BuildTarget buildTarget : testGraph.getTargets()) {
    TestRule testRule=(TestRule)testActionGraph.findBuildRuleByTarget(buildTarget);
    for (    BuildRule buildRuleUnderTest : testRule.getSourceUnderTest()) {
      if (buildGraph.findBuildRuleByTarget(buildRuleUnderTest.getBuildTarget()) != null) {
        buildAndTestTargetsBuilder.add(testRule.getBuildTarget());
        break;
      }
    }
  }
  Iterable<BuildTarget> allTargets=parser.filterTargetsInProjectFromRoots(buildAndTestTargetsBuilder.build(),includes,eventBus,predicate,console);
  Preconditions.checkNotNull(allTargets);
  return parseAndCreateGraphFromTargets(allTargets,includes,parser,eventBus,console);
}
