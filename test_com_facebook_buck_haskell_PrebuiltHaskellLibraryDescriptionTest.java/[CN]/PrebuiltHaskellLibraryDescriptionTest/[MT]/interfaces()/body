{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePath interfaces=new FakeSourcePath("interfaces");
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  PrebuiltHaskellLibrary library=(PrebuiltHaskellLibrary)new PrebuiltHaskellLibraryBuilder(target).setVersion("1.0.0").setDb(new FakeSourcePath("package.conf.d")).setImportDirs(ImmutableList.of(interfaces)).build(resolver);
  HaskellCompileInput input=library.getCompileInput(CxxPlatformUtils.DEFAULT_PLATFORM,Linker.LinkableDepType.STATIC);
  assertThat(input.getPackages().get(0).getInterfaces(),Matchers.contains(interfaces));
}
