{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePath lib=new FakeSourcePath("libfoo.a");
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  PrebuiltHaskellLibrary library=(PrebuiltHaskellLibrary)new PrebuiltHaskellLibraryBuilder(target).setVersion("1.0.0").setDb(new FakeSourcePath("package.conf.d")).setStaticLibs(ImmutableList.of(lib)).build(resolver);
  NativeLinkableInput input=library.getNativeLinkableInput(CxxPlatformUtils.DEFAULT_PLATFORM,Linker.LinkableDepType.STATIC);
  assertThat(FluentIterable.from(input.getArgs()).transformAndConcat(Arg.getInputsFunction()).toSet(),Matchers.contains(lib));
}
