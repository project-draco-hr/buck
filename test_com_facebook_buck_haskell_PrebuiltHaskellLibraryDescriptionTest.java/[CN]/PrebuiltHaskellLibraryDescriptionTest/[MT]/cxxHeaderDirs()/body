{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePath interfaces=new FakeSourcePath("interfaces");
  BuildTarget target=BuildTargetFactory.newInstance("//:rule");
  PathSourcePath path=new FakeSourcePath("include_dir");
  PrebuiltHaskellLibrary library=(PrebuiltHaskellLibrary)new PrebuiltHaskellLibraryBuilder(target).setVersion("1.0.0").setDb(new FakeSourcePath("package.conf.d")).setImportDirs(ImmutableList.of(interfaces)).setCxxHeaderDirs(ImmutableSortedSet.<SourcePath>of(path)).build(resolver);
  assertThat(library.getCxxPreprocessorInput(CxxPlatformUtils.DEFAULT_PLATFORM,HeaderVisibility.PUBLIC),Matchers.equalTo(CxxPreprocessorInput.builder().addIncludes(CxxHeadersDir.of(CxxPreprocessables.IncludeType.SYSTEM,path)).build()));
}
