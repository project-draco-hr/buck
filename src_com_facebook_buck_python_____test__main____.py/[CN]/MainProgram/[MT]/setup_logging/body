def setup_logging(self):
    fmt = logging.Formatter('%(pathname)s:%(lineno)s: %(message)s')
    log_handler = StderrLogHandler()
    log_handler.setFormatter(fmt)
    root_logger = logging.getLogger()
    root_logger.addHandler(log_handler)
    root_logger.setLevel(logging.INFO)
    level_names = {'debug': logging.DEBUG, 'info': logging.INFO, 'warn': logging.WARNING, 'warning': logging.WARNING, 'error': logging.ERROR, 'critical': logging.CRITICAL, 'fatal': logging.FATAL, }
    for value in self.options.logger:
        parts = value.rsplit('=', 1)
        if (len(parts) != 2):
            self.option_parser.error(('--logger argument must be of the form <name>=<level>: %s' % value))
        name = parts[0]
        level_name = parts[1].lower()
        level = level_names.get(level_name)
        if (level is None):
            self.option_parser.error(('invalid log level %r for log category %s' % (parts[1], name)))
        logging.getLogger(name).setLevel(level)
