{
  List<Object> list=new ArrayList<Object>();
  boolean present_type=true && (isSetType());
  list.add(present_type);
  if (present_type)   list.add(type.getValue());
  boolean present_startBuildRequest=true && (isSetStartBuildRequest());
  list.add(present_startBuildRequest);
  if (present_startBuildRequest)   list.add(startBuildRequest);
  boolean present_buildStatusRequest=true && (isSetBuildStatusRequest());
  list.add(present_buildStatusRequest);
  if (present_buildStatusRequest)   list.add(buildStatusRequest);
  boolean present_logRequest=true && (isSetLogRequest());
  list.add(present_logRequest);
  if (present_logRequest)   list.add(logRequest);
  boolean present_casContainsRequest=true && (isSetCasContainsRequest());
  list.add(present_casContainsRequest);
  if (present_casContainsRequest)   list.add(casContainsRequest);
  boolean present_createBuildRequest=true && (isSetCreateBuildRequest());
  list.add(present_createBuildRequest);
  if (present_createBuildRequest)   list.add(createBuildRequest);
  boolean present_storeLocalChangesRequest=true && (isSetStoreLocalChangesRequest());
  list.add(present_storeLocalChangesRequest);
  if (present_storeLocalChangesRequest)   list.add(storeLocalChangesRequest);
  boolean present_fetchSourceFilesRequest=true && (isSetFetchSourceFilesRequest());
  list.add(present_fetchSourceFilesRequest);
  if (present_fetchSourceFilesRequest)   list.add(fetchSourceFilesRequest);
  boolean present_storeBuildGraphRequest=true && (isSetStoreBuildGraphRequest());
  list.add(present_storeBuildGraphRequest);
  if (present_storeBuildGraphRequest)   list.add(storeBuildGraphRequest);
  boolean present_fetchBuildGraphRequest=true && (isSetFetchBuildGraphRequest());
  list.add(present_fetchBuildGraphRequest);
  if (present_fetchBuildGraphRequest)   list.add(fetchBuildGraphRequest);
  boolean present_setBuckVersionRequest=true && (isSetSetBuckVersionRequest());
  list.add(present_setBuckVersionRequest);
  if (present_setBuckVersionRequest)   list.add(setBuckVersionRequest);
  return list.hashCode();
}
