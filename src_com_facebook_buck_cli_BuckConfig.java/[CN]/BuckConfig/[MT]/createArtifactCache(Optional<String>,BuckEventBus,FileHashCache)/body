{
  ImmutableList<String> modes=getArtifactCacheModes();
  if (modes.isEmpty()) {
    return new NoopArtifactCache();
  }
  ImmutableList.Builder<ArtifactCache> builder=ImmutableList.builder();
  try {
    for (    String mode : modes) {
switch (ArtifactCacheNames.valueOf(mode)) {
case dir:
        ArtifactCache dirArtifactCache=createDirArtifactCache();
      buckEventBus.register(dirArtifactCache);
    builder.add(dirArtifactCache);
  break;
case cassandra:
ArtifactCache cassandraArtifactCache=createCassandraArtifactCache(currentWifiSsid,buckEventBus,fileHashCache);
if (cassandraArtifactCache != null) {
builder.add(cassandraArtifactCache);
}
break;
case http:
ArtifactCache httpArtifactCache=createHttpArtifactCache();
builder.add(httpArtifactCache);
break;
}
}
}
 catch (IllegalArgumentException e) {
throw new HumanReadableException("Unusable cache.mode: '%s'",modes.toString());
}
ImmutableList<ArtifactCache> artifactCaches=builder.build();
if (artifactCaches.size() == 1) {
return artifactCaches.get(0);
}
 else {
return new MultiArtifactCache(artifactCaches);
}
}
