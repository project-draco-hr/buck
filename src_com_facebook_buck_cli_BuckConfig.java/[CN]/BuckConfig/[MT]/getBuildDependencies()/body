{
  Optional<String> buildDependenciesOptional=getValue("build","build_dependencies");
  if (buildDependenciesOptional.isPresent()) {
    try {
      return Optional.of(BuildDependencies.valueOf(buildDependenciesOptional.get()));
    }
 catch (    IllegalArgumentException e) {
      throw new HumanReadableException("%s is not a valid value for build_dependencies.  Must be one of: %s",buildDependenciesOptional.get(),Joiner.on(", ").join(BuildDependencies.values()));
    }
  }
 else {
    return Optional.absent();
  }
}
