{
  ImmutableSet<String> blacklistedWifi=ImmutableSet.copyOf(Splitter.on(",").trimResults().omitEmptyStrings().split(getValue("cache","blacklisted_wifi_ssids").or("")));
  if (currentWifiSsid.isPresent() && blacklistedWifi.contains(currentWifiSsid.get())) {
    return null;
  }
  final boolean doStore=readCacheMode("cassandra_mode",DEFAULT_CASSANDRA_MODE);
  String cacheHosts=getValue("cache","hosts").or("");
  int port=Integer.parseInt(getValue("cache","port").or(DEFAULT_CASSANDRA_PORT));
  int timeoutSeconds=Integer.parseInt(getValue("cache","connection_timeout_seconds").or(DEFAULT_CASSANDRA_TIMEOUT_SECONDS));
  try {
    return new CassandraArtifactCache(cacheHosts,port,timeoutSeconds,doStore,buckEventBus);
  }
 catch (  ConnectionException e) {
    buckEventBus.post(ThrowableLogEvent.create(e,"Cassandra cache connection failure."));
    return null;
  }
}
