{
  File androidSdkDir=tempDir.newFolder();
  Path pathToAndroidSdkDir=androidSdkDir.toPath();
  AndroidDirectoryResolver androidDirectoryResolver=new FakeAndroidDirectoryResolver(Optional.of(androidSdkDir.toPath()),Optional.<Path>absent(),Optional.<String>absent());
  File buildToolsDir=new File(androidSdkDir,"build-tools");
  buildToolsDir.mkdir();
  File buildToolsDirFromOldUpgradePath=new File(buildToolsDir,"17.0.0");
  buildToolsDirFromOldUpgradePath.mkdir();
  File addOnsLibsDir=new File(androidSdkDir,"add-ons/addon-google_apis-google-17/libs");
  addOnsLibsDir.mkdirs();
  Files.touch(new File(addOnsLibsDir,"effects.jar"));
  Files.touch(new File(addOnsLibsDir,"maps.jar"));
  Files.touch(new File(addOnsLibsDir,"usb.jar"));
  String platformId="Google Inc.:Google APIs:17";
  Optional<AndroidPlatformTarget> androidPlatformTargetOption=AndroidPlatformTarget.getTargetForId(platformId,androidDirectoryResolver,Optional.<Path>absent());
  assertTrue(androidPlatformTargetOption.isPresent());
  AndroidPlatformTarget androidPlatformTarget=androidPlatformTargetOption.get();
  assertEquals(platformId,androidPlatformTarget.getName());
  assertEquals(ImmutableList.of(pathToAndroidSdkDir.resolve("platforms/android-17/android.jar"),pathToAndroidSdkDir.resolve("add-ons/addon-google_apis-google-17/libs/effects.jar"),pathToAndroidSdkDir.resolve("add-ons/addon-google_apis-google-17/libs/maps.jar"),pathToAndroidSdkDir.resolve("add-ons/addon-google_apis-google-17/libs/usb.jar")),androidPlatformTarget.getBootclasspathEntries());
  assertEquals(pathToAndroidSdkDir.resolve("platforms/android-17/android.jar"),androidPlatformTarget.getAndroidJar());
  assertEquals(pathToAndroidSdkDir.resolve("build-tools/17.0.0/aapt"),androidPlatformTarget.getAaptExecutable());
  assertEquals(pathToAndroidSdkDir.resolve("platform-tools/adb"),androidPlatformTarget.getAdbExecutable());
  assertEquals(pathToAndroidSdkDir.resolve("build-tools/17.0.0/aidl"),androidPlatformTarget.getAidlExecutable());
  assertEquals(pathToAndroidSdkDir.resolve(Platform.detect() == Platform.WINDOWS ? "build-tools/17.0.0/dx.bat" : "build-tools/17.0.0/dx"),androidPlatformTarget.getDxExecutable());
}
