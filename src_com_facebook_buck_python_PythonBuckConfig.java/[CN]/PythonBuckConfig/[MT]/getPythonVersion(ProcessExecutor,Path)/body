{
  try {
    String versionId="import sys\n" + "\n" + "if hasattr(sys, 'pypy_version_info'):\n"+ "  subversion = 'PyPy'\n"+ "elif sys.platform.startswith('java'):\n"+ "  subversion = 'Jython'\n"+ "else:\n"+ "  subversion = 'CPython'\n"+ "\n"+ "print('%s %s %s %s' % (subversion, sys.version_info[0], "+ "sys.version_info[1], sys.version_info[2]))\n";
    ProcessExecutor.Result versionResult=processExecutor.launchAndExecute(ProcessExecutorParams.builder().addCommand(pythonPath.toString(),"-").build(),EnumSet.of(ProcessExecutor.Option.EXPECTING_STD_OUT,ProcessExecutor.Option.EXPECTING_STD_ERR),Optional.of(versionId),Optional.<Long>absent(),Optional.<Function<Process,Void>>absent());
    return extractPythonVersion(pythonPath,versionResult);
  }
 catch (  IOException e) {
    throw new HumanReadableException(e,"Could not run \"%s - < [code]\": %s",pythonPath,e.getMessage());
  }
}
