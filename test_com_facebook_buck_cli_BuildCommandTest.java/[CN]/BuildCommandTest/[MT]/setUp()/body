{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  SourcePathResolver resolver=new SourcePathResolver(ruleResolver);
  ruleToResult=new LinkedHashMap<>();
  BuildRule rule1=new FakeBuildRule(BuildTargetFactory.newInstance("//fake:rule1"),resolver){
    @Override @Nullable public Path getPathToOutputFile(){
      return Paths.get("buck-out/gen/fake/rule1.txt");
    }
  }
;
  ruleToResult.put(rule1,Optional.of(new BuildRuleSuccess(rule1,Type.BUILT_LOCALLY)));
  BuildRule rule2=new FakeBuildRule(BuildTargetFactory.newInstance("//fake:rule2"),resolver);
  ruleToResult.put(rule2,Optional.<BuildRuleSuccess>absent());
  BuildRule rule3=new FakeBuildRule(BuildTargetFactory.newInstance("//fake:rule3"),resolver);
  ruleToResult.put(rule3,Optional.of(new BuildRuleSuccess(rule3,Type.FETCHED_FROM_CACHE)));
}
