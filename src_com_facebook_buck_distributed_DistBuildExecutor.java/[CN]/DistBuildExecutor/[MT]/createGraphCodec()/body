{
  DistributedBuildTypeCoercerFactory typeCoercerFactory=new DistributedBuildTypeCoercerFactory(args.getObjectMapper());
  ParserTargetNodeFactory<TargetNode<?>> parserTargetNodeFactory=DefaultParserTargetNodeFactory.createForDistributedBuild(new ConstructorArgMarshaller(typeCoercerFactory),new TargetNodeFactory(typeCoercerFactory));
  DistributedBuildTargetGraphCodec targetGraphCodec=new DistributedBuildTargetGraphCodec(args.getObjectMapper(),parserTargetNodeFactory,new Function<TargetNode<?>,Map<String,Object>>(){
    @Nullable @Override public Map<String,Object> apply(    TargetNode<?> input){
      try {
        return args.getParser().getRawTargetNode(args.getBuckEventBus(),args.getRootCell().getCell(input.getBuildTarget()),false,args.getExecutorService(),input);
      }
 catch (      BuildFileParseException|InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  return targetGraphCodec;
}
