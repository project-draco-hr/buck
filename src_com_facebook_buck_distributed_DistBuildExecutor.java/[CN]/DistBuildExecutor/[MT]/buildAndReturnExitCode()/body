{
  createBuildEngineDelegate();
  BuckConfig config=args.getRemoteRootCellConfig();
  BuildEngine buildEngine=new CachingBuildEngine(Preconditions.checkNotNull(cachingBuildEngineDelegate),args.getExecutorService(),config.getBuildEngineMode(),config.getBuildDepFiles(),config.getBuildMaxDepFileCacheEntries(),config.getBuildArtifactCacheSizeLimit(),config.getBuildInputRuleKeyFileSizeLimit(),args.getObjectMapper(),Preconditions.checkNotNull(actionGraphAndResolver).getResolver(),config.getKeySeed());
  try (Build build=new Build(Preconditions.checkNotNull(actionGraphAndResolver).getActionGraph(),Preconditions.checkNotNull(actionGraphAndResolver).getResolver(),args.getRootCell(),Optional.<TargetDevice>absent(),getExplodingAndroidSupplier(),buildEngine,args.getArtifactCache(),config.createDefaultJavaPackageFinder(),args.getConsole(),1000,false,false,false,args.getBuckEventBus(),args.getPlatform(),ImmutableMap.<String,String>of(),args.getObjectMapper(),args.getClock(),new ConcurrencyLimit(4,1),Optional.<AdbOptions>absent(),Optional.<TargetDeviceOptions>absent(),args.getExecutors())){
    FluentIterable<BuildTarget> allTargets=FluentIterable.from(Preconditions.checkNotNull(targetGraph).getNodes()).transform(new Function<TargetNode<?>,BuildTarget>(){
      @Override public BuildTarget apply(      TargetNode<?> input){
        return input.getBuildTarget();
      }
    }
);
    return build.executeAndPrintFailuresToEventBus(allTargets,true,args.getBuckEventBus(),args.getConsole(),Optional.<Path>absent());
  }
 }
