{
  expect(watchService.poll()).andReturn(key).andReturn(null);
  expect(key.pollEvents()).andReturn(Lists.<WatchEvent<?>>newArrayList(event));
  expect(event.kind()).andReturn(StandardWatchEventKinds.ENTRY_CREATE).anyTimes();
  expect(event.context()).andReturn(path);
  expect(path.resolve(anyObject(Path.class))).andReturn(path);
  expect(path.normalize()).andReturn(path);
  expect(path.startsWith(anyObject(String.class))).andReturn(false).andReturn(true);
  expect(key.reset()).andReturn(false);
  replay(filesystem,eventBus,watchService,path,key,event);
  watcher=new ProjectFilesystemWatcher(filesystem,eventBus,ImmutableSet.<String>of("/"),watchService);
  visitor.getValue().preVisitDirectory(path,null);
  watcher.postEvents();
  verify(filesystem,eventBus,watchService,path,key,event);
}
