{
  Step mkdirStep=new MkdirStep(getProjectFilesystem(),getPathToOutput().getParent());
  Step extractSymbolsStep=new AbstractExecutionStep("java-symbols"){
    @Override public StepExecutionResult execute(    ExecutionContext context) throws IOException {
      Symbols symbols=symbolsFinder.extractSymbols();
      Symbols symbolsToSerialize;
      if (generatedSymbols.isEmpty()) {
        symbolsToSerialize=symbols;
      }
 else {
        symbolsToSerialize=new Symbols(Iterables.concat(symbols.provided,generatedSymbols),symbols.required,symbols.exported);
      }
      try (OutputStream output=getProjectFilesystem().newFileOutputStream(getPathToOutput())){
        context.getObjectMapper().writeValue(output,symbolsToSerialize);
      }
       return StepExecutionResult.SUCCESS;
    }
  }
;
  return ImmutableList.of(mkdirStep,extractSymbolsStep);
}
