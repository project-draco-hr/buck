{
  if (sourceA.getType() != Type.INT) {
    return false;
  }
  if (!(sourceB.getTypeBearer() instanceof CstInteger)) {
    if (sourceA.getTypeBearer() instanceof CstInteger && opcode.getOpcode() == RegOps.SUB) {
      CstInteger cst=(CstInteger)sourceA.getTypeBearer();
      return cst.fitsIn16Bits();
    }
 else {
      return false;
    }
  }
  CstInteger cst=(CstInteger)sourceB.getTypeBearer();
switch (opcode.getOpcode()) {
case RegOps.REM:
case RegOps.ADD:
case RegOps.MUL:
case RegOps.DIV:
case RegOps.AND:
case RegOps.OR:
case RegOps.XOR:
    return cst.fitsIn16Bits();
case RegOps.SHL:
case RegOps.SHR:
case RegOps.USHR:
  return cst.fitsIn8Bits();
case RegOps.SUB:
CstInteger cst2=CstInteger.make(-cst.getValue());
return cst2.fitsIn16Bits();
default :
return false;
}
}
