{
  final ImmutableSet.Builder<Path> entries=ImmutableSet.builder();
  new AbstractDependencyVisitor(deps){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule rule){
      Buildable buildable=rule.getBuildable();
      if (buildable instanceof PythonLibrary) {
        PythonLibrary pythonLibrary=(PythonLibrary)buildable;
        Path pythonPathEntry=pythonLibrary.getPythonPathDirectory();
        entries.add(pythonPathEntry);
        return rule.getDeps();
      }
      return ImmutableSet.of();
    }
  }
.start();
  return entries.build();
}
