{
  final PythonPackageComponents.Builder components=new PythonPackageComponents.Builder(getBuildTarget().toString());
  components.addModule(main,main,getBuildTarget().toString());
  new AbstractDependencyVisitor(getDeclaredDeps()){
    @Override public ImmutableSet<BuildRule> visit(    BuildRule rule){
      if (rule instanceof PythonPackagable) {
        PythonPackagable lib=(PythonPackagable)rule;
        components.addComponent(lib.getPythonPackageComponents(),rule.getBuildTarget().toString());
        return rule.getDeps();
      }
      return ImmutableSet.of();
    }
  }
.start();
  return components.build();
}
