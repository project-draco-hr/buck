{
  assertEquals(Optional.of(Command.BUILD),Command.parseCommandName("buil").getCommand());
  assertEquals(Optional.of(Command.BUILD),Command.parseCommandName("biuld").getCommand());
  assertEquals(Optional.of(Command.AUDIT),Command.parseCommandName("audir").getCommand());
  assertEquals(Optional.of(Command.AUDIT),Command.parseCommandName("auditt").getCommand());
  assertEquals(Optional.of(Command.TEST),Command.parseCommandName("test").getCommand());
  assertEquals(Optional.of(Command.TEST),Command.parseCommandName("twst").getCommand());
  assertEquals(Optional.of(Command.TEST),Command.parseCommandName("tset").getCommand());
  assertEquals(Optional.of(Command.INSTALL),Command.parseCommandName("imstall").getCommand());
  assertEquals(Optional.of(Command.INSTALL),Command.parseCommandName("sintall").getCommand());
  assertEquals(Optional.of(Command.INSTALL),Command.parseCommandName("sintalle").getCommand());
  assertEquals(Optional.of(Command.TARGETS),Command.parseCommandName("tragets").getCommand());
  assertEquals(Optional.of(Command.TARGETS),Command.parseCommandName("taegers").getCommand());
  assertEquals("'yyyyyyy' shouldn't match any current command.",Optional.absent(),Command.parseCommandName("yyyyyyy").getCommand());
  assertEquals("'unsintakk' is of distance 4 to the closest command 'uninstall' since\n" + "4 / length('uninstall') = 4 / 9 is smaller than Command.MAX_ERROR_RATIO (0.5),\n" + "we expect it matches uninstall.\n",Optional.of(Command.UNINSTALL),Command.parseCommandName("unsintakk").getCommand());
  assertEquals("'insatkk' is of distance 4 to the closest command 'install' since\n" + "4 / length('install') = 4 / 7 is larger than Command.MAX_ERROR_RATIO (0.5),\n" + "we expect Optional.absent() gets returned.\n",Optional.absent(),Command.parseCommandName("insatkk").getCommand());
  assertEquals("'atrgest' is of distance 4 to the closest command 'targets' since\n" + "4 / length('targets') = 4 / 7 is larger than Command.MAX_ERROR_RATIO (0.5),\n" + "we expect Optional.absent() gets returned.\n",Optional.absent(),Command.parseCommandName("atrgest").getCommand());
  assertEquals("'unsintskk' is of distance 5 to the closest command 'uninstall' since\n" + "5 / length('uninstall') = 5 / 9 is larger than Command.MAX_ERROR_RATIO (0.5),\n" + "we expect Optional.absent() gets returned.\n",Optional.absent(),Command.parseCommandName("unsintskk").getCommand());
}
