{
  ProjectFilesystem projectFilesystem=new ProjectFilesystem(tmpDir.getRoot());
  ChromeTraceBuildListener listener=new ChromeTraceBuildListener(projectFilesystem);
  BuildTarget target=BuildTargetFactory.newInstance("//fake:rule");
  BuildRule rule=new FakeBuildRule(new BuildRuleType("fakeRule"),target,ImmutableSortedSet.<BuildRule>of(),ImmutableSet.<BuildTargetPattern>of());
  FakeStep step=new FakeStep("fakeStep","I'm a Fake Step!",0);
  ExecutionContext context=createMock(ExecutionContext.class);
  replay(context);
  ImmutableList<BuildTarget> buildTargets=ImmutableList.of(target);
  listener.buildStarted(BuildEvent.started(buildTargets));
  listener.ruleStarted(BuildRuleEvent.started(rule));
  listener.stepStarted(StepEvent.started(step,"fakeStep","I'm a Fake Step!"));
  listener.stepFinished(StepEvent.finished(step,"fakeStep","I'm a Fake Step!",0));
  listener.ruleFinished(BuildRuleEvent.finished(rule,BuildRuleStatus.SUCCESS,CacheResult.MISS));
  listener.buildFinished(BuildEvent.finished(buildTargets,0));
  listener.outputTrace();
  File resultFile=new File(tmpDir.getRoot(),BuckConstant.BIN_DIR + "/build.trace");
  ObjectMapper mapper=new ObjectMapper();
  List<ChromeTraceEvent> resultMap=mapper.readValue(resultFile,new TypeReference<List<ChromeTraceEvent>>(){
  }
);
  assertEquals(6,resultMap.size());
  assertEquals("build",resultMap.get(0).getName());
  assertEquals(ChromeTraceEvent.Phase.BEGIN,resultMap.get(0).getPhase());
  assertEquals("//fake:rule",resultMap.get(1).getName());
  assertEquals(ChromeTraceEvent.Phase.BEGIN,resultMap.get(1).getPhase());
  assertEquals("fakeStep",resultMap.get(2).getName());
  assertEquals(ChromeTraceEvent.Phase.BEGIN,resultMap.get(2).getPhase());
  assertEquals("fakeStep",resultMap.get(3).getName());
  assertEquals(ChromeTraceEvent.Phase.END,resultMap.get(3).getPhase());
  assertEquals("//fake:rule",resultMap.get(4).getName());
  assertEquals(ChromeTraceEvent.Phase.END,resultMap.get(4).getPhase());
  assertEquals("build",resultMap.get(5).getName());
  assertEquals(ChromeTraceEvent.Phase.END,resultMap.get(5).getPhase());
  verify(context);
}
