{
  String data="test";
  HashCode hashCode=HashCode.fromString("deadbeef");
  expect(connection.getResponseCode()).andReturn(HttpURLConnection.HTTP_OK);
  InputStream is=new ByteArrayInputStream(createFileContentsWithHashCode(hashCode,data));
  expect(connection.getInputStream()).andReturn(is);
  File file=File.createTempFile("000","");
  Path path=file.toPath();
  Path temp=File.createTempFile("000","").toPath();
  projectFilesystem.createParentDirs(path);
  expect(projectFilesystem.createTempFile(path.getParent(),path.getFileName().toString(),".tmp")).andReturn(temp);
  projectFilesystem.copyToPath(is,temp,StandardCopyOption.REPLACE_EXISTING);
  expect(fileHashCache.get(temp)).andReturn(hashCode);
  projectFilesystem.move(temp,path,StandardCopyOption.REPLACE_EXISTING);
  replay(fileHashCache);
  replay(connection);
  replay(projectFilesystem);
  assertEquals(cache.fetch(new RuleKey("00000000000000000000000000000000"),file),CacheResult.HTTP_HIT);
  verify(fileHashCache);
  verify(connection);
  verify(projectFilesystem);
}
