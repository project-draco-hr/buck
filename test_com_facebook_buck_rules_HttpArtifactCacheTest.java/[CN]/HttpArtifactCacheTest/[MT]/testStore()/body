{
  final String data="data";
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  File output=new File("output/file");
  filesystem.writeContentsToPath(data,output.toPath());
  final AtomicBoolean hasCalled=new AtomicBoolean(false);
  HttpArtifactCache cache=new HttpArtifactCache("http",null,null,new URL("http://localhost:8080"),true,filesystem,BUCK_EVENT_BUS,HASH_FUNCTION){
    @Override protected Response storeCall(    Request request) throws IOException {
      hasCalled.set(true);
      Buffer buf=new Buffer();
      request.body().writeTo(buf);
      assertArrayEquals(createArtifact(data),buf.readByteArray());
      return new Response.Builder().code(HttpURLConnection.HTTP_ACCEPTED).protocol(Protocol.HTTP_1_1).request(request).build();
    }
  }
;
  cache.store(new RuleKey("00000000000000000000000000000000"),output);
  assertTrue(hasCalled.get());
  cache.close();
}
