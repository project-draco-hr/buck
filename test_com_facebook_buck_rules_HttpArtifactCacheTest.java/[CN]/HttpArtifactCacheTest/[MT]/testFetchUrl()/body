{
  final URL url=new URL("http://localhost:8080");
  final RuleKey ruleKey=new RuleKey("00000000000000000000000000000000");
  HttpArtifactCache cache=new HttpArtifactCache("http",null,null,new URL("http://localhost:8080"),true,new FakeProjectFilesystem(),BUCK_EVENT_BUS,HASH_FUNCTION){
    @Override protected Response fetchCall(    Request request) throws IOException {
      assertEquals(new URL(url,"artifacts/key/" + ruleKey.toString()),request.url());
      return new Response.Builder().request(request).protocol(Protocol.HTTP_1_1).code(HttpURLConnection.HTTP_OK).body(createResponseBody(ImmutableSet.of(ruleKey),ImmutableMap.<String,String>of(),ByteSource.wrap(new byte[0]),"data")).build();
    }
  }
;
  cache.fetch(ruleKey,new File("output/file"));
  cache.close();
}
