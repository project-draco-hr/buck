{
  FakeProjectFilesystem filesystem=new FakeProjectFilesystem();
  final RuleKey ruleKey=new RuleKey("00000000000000000000000000000000");
  final RuleKey otherRuleKey=new RuleKey("11111111111111111111111111111111");
  HttpArtifactCache cache=new HttpArtifactCache("http",null,null,new URL("http://localhost:8080"),true,filesystem,BUCK_EVENT_BUS,HASH_FUNCTION){
    @Override protected Response fetchCall(    Request request) throws IOException {
      return new Response.Builder().code(HttpURLConnection.HTTP_OK).protocol(Protocol.HTTP_1_1).request(request).body(createBody(otherRuleKey.toString(),"test")).build();
    }
  }
;
  File output=new File("output/file");
  CacheResult result=cache.fetch(ruleKey,output);
  assertEquals(CacheResult.Type.ERROR,result.getType());
  assertEquals(Optional.<String>absent(),filesystem.readFileIfItExists(output.toPath()));
  cache.close();
}
