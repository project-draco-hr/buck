{
  if (!(object instanceof List)) {
    throw CoerceFailedException.simple(object,getOutputClass());
  }
  List<?> list=(List<?>)object;
  List<String> values=FluentIterable.from(list).transform(new Function<Object,String>(){
    @Override public String apply(    Object input){
      if (input instanceof String) {
        return (String)input;
      }
 else {
        throw new HumanReadableException("Expected string for build config values but was: %s",input);
      }
    }
  }
).toList();
  return BuildConfigFields.fromFieldDeclarations(values);
}
