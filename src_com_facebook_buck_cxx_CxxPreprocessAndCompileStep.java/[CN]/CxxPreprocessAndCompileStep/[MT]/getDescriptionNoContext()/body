{
switch (operation) {
case PIPED_PREPROCESS_AND_COMPILE:
{
      return Joiner.on(' ').join(FluentIterable.from(makePreprocessCommand()).transform(Escaper.SHELL_ESCAPER)) + " | " + Joiner.on(' ').join(FluentIterable.from(makeCompileCommand("-",inputType.getPreprocessedLanguage())).transform(Escaper.SHELL_ESCAPER));
    }
default :
{
    return Joiner.on(' ').join(FluentIterable.from(getCommand()).transform(Escaper.SHELL_ESCAPER));
  }
}
}
