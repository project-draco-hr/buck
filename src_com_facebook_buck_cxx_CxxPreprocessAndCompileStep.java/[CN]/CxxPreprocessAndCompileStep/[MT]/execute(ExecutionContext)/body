{
  try {
    LOG.debug("%s %s -> %s",operation.toString().toLowerCase(),input,output);
    int exitCode;
    if (operation == Operation.PIPED_PREPROCESS_AND_COMPILE) {
      exitCode=executePiped(context);
    }
 else {
      exitCode=executeOther(context);
    }
    if (operation.isPreprocess() && exitCode == 0) {
      ImmutableSet<Path> values=ImmutableSet.copyOf(replacementPaths.values());
      LOG.debug("Processing dependency file %s as Makefile",getDepTemp());
      ImmutableMap<String,Object> params=ImmutableMap.<String,Object>of("input",this.input,"output",this.output);
      try (InputStream input=filesystem.newFileInputStream(getDepTemp());BufferedReader reader=new BufferedReader(new InputStreamReader(input));OutputStream output=filesystem.newFileOutputStream(depFile);BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output));SimplePerfEvent.Scope perfEvent=SimplePerfEvent.scope(context.getBuckEventBus(),PerfEventId.of("depfile-parse"),params)){
        for (        String prereq : Depfiles.parseDepfile(reader).getPrereqs()) {
          if (values.contains(Paths.get(prereq))) {
            writer.write(prereq);
            writer.newLine();
            continue;
          }
          Path replacement=replacementPaths.get(Paths.get(prereq));
          if (replacement != null) {
            writer.write(replacement.toString());
            writer.newLine();
          }
        }
      }
     }
    if (exitCode == 0 && operation == Operation.COMPILE_MUNGE_DEBUGINFO) {
      try {
        sanitizer.restoreCompilationDirectory(filesystem.getRootPath().toAbsolutePath().resolve(output),filesystem.getRootPath().toAbsolutePath());
      }
 catch (      IOException e) {
        context.logError(e,"error updating compilation directory");
        return 1;
      }
    }
    if (exitCode != 0) {
      LOG.warn("error %d %s %s",exitCode,operation.toString().toLowerCase(),input);
    }
    return exitCode;
  }
 catch (  Exception e) {
    MoreThrowables.propagateIfInterrupt(e);
    context.logError(e,"Build error caused by exception");
    return 1;
  }
}
