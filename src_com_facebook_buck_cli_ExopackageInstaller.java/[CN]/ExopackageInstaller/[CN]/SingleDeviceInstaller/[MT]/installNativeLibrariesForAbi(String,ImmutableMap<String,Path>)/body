{
  if (libraries.isEmpty()) {
    return;
  }
  ImmutableSet<String> requiredHashes=libraries.keySet();
  ImmutableSet<String> presentHashes=prepareNativeLibsDir(abi,requiredHashes);
  Map<String,Path> filesToInstallByHash=Maps.filterKeys(libraries,Predicates.not(Predicates.in(presentHashes)));
  ImmutableList.Builder<String> metadataLines=ImmutableList.builder();
  for (  Map.Entry<String,Path> entry : libraries.entrySet()) {
    String filename=entry.getValue().getFileName().toString();
    Preconditions.checkState(filename.startsWith("lib") && filename.endsWith(".so"));
    String libname=filename.substring(3,filename.length() - 3);
    metadataLines.add(String.format("%s native-%s.so",libname,entry.getKey()));
  }
  installFiles("native_library",ImmutableMap.copyOf(filesToInstallByHash),Joiner.on('\n').join(metadataLines.build()),"native-%s.so",NATIVE_LIBS_DIR.resolve(abi));
}
