{
  ByteArrayOutputStream rawOut=new ByteArrayOutputStream();
  Hasher hasher=HASH_FUNCTION.newHasher();
  try (DataOutputStream out=new DataOutputStream(new HasherOutputStream(hasher,rawOut))){
    out.writeInt(ruleKeys.size());
    for (    RuleKey ruleKey : ruleKeys) {
      out.writeUTF(ruleKey.toString());
    }
    out.writeInt(metadata.size());
    for (    Map.Entry<String,String> ent : metadata.entrySet()) {
      out.writeUTF(ent.getKey());
      byte[] val=ent.getValue().getBytes(Charsets.UTF_8);
      out.writeInt(val.length);
      out.write(val);
      if (out.size() > MAX_METADATA_HEADER_SIZE) {
        throw new IOException("Metadata header too big.");
      }
    }
  }
   data.copyTo(new HasherOutputStream(hasher,ByteStreams.nullOutputStream()));
  rawOut.write(hasher.hash().asBytes());
  byte[] bytes=rawOut.toByteArray();
  if (bytes.length > MAX_METADATA_HEADER_SIZE) {
    throw new IOException("Metadata header too big.");
  }
  return bytes;
}
