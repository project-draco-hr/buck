def main():
    parser = optparse.OptionParser(usage='usage: %prog [options] output')
    parser.add_option('--entry-point', default='__main__')
    parser.add_option('--python', default=sys.executable)
    (options, args) = parser.parse_args()
    if (len(args) == 1):
        output = args[0]
    else:
        parser.error("'output' positional argument is required")
        return 1
    manifest = json.load(sys.stdin)
    tmp_dir = tempfile.mkdtemp()
    try:
        interpreter = PythonInterpreter(options.python, PythonInterpreter.from_binary(options.python).identity, extras={})
        pex_builder = PEXBuilder(path=tmp_dir, interpreter=interpreter)
        pex_builder.info.zip_safe = True
        pex_builder.info.entry_point = options.entry_point
        pex_builder.add_source(dereference_symlinks(pkg_resources_py), os.path.join(pex_builder.BOOTSTRAP_DIR, 'pkg_resources.py'))
        for (dst, src) in manifest['modules'].iteritems():
            try:
                pex_builder.add_source(dereference_symlinks(src), dst)
            except OSError as e:
                raise Exception('Failed to add {}: {}'.format(src, e))
        for (dst, src) in manifest['resources'].iteritems():
            pex_builder.add_resource(dereference_symlinks(src), dst)
        pex_builder.build(output)
    finally:
        shutil.rmtree(tmp_dir, True)
