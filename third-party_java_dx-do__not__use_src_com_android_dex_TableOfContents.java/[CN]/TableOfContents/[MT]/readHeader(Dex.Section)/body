{
  byte[] magic=headerIn.readByteArray(8);
  int apiTarget=DexFormat.magicToApi(magic);
  if (apiTarget != DexFormat.API_NO_EXTENDED_OPCODES) {
    throw new DexException("Unexpected magic: " + Arrays.toString(magic));
  }
  checksum=headerIn.readInt();
  signature=headerIn.readByteArray(20);
  fileSize=headerIn.readInt();
  int headerSize=headerIn.readInt();
  if (headerSize != SizeOf.HEADER_ITEM) {
    throw new DexException("Unexpected header: 0x" + Integer.toHexString(headerSize));
  }
  int endianTag=headerIn.readInt();
  if (endianTag != DexFormat.ENDIAN_TAG) {
    throw new DexException("Unexpected endian tag: 0x" + Integer.toHexString(endianTag));
  }
  linkSize=headerIn.readInt();
  linkOff=headerIn.readInt();
  mapList.off=headerIn.readInt();
  if (mapList.off == 0) {
    throw new DexException("Cannot merge dex files that do not contain a map");
  }
  stringIds.size=headerIn.readInt();
  stringIds.off=headerIn.readInt();
  typeIds.size=headerIn.readInt();
  typeIds.off=headerIn.readInt();
  protoIds.size=headerIn.readInt();
  protoIds.off=headerIn.readInt();
  fieldIds.size=headerIn.readInt();
  fieldIds.off=headerIn.readInt();
  methodIds.size=headerIn.readInt();
  methodIds.off=headerIn.readInt();
  classDefs.size=headerIn.readInt();
  classDefs.off=headerIn.readInt();
  dataSize=headerIn.readInt();
  dataOff=headerIn.readInt();
}
