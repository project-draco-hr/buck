{
  Optional<GoPlatform> platform=goBuckConfig.getPlatformFlavorDomain().getValue(params.getBuildTarget());
  if (platform.isPresent()) {
    return GoDescriptors.createGoCompileRule(params,resolver,goBuckConfig,args.packageName.transform(MorePaths.TO_PATH).or(goBuckConfig.getDefaultPackageName(params.getBuildTarget())),args.srcs.or(ImmutableSortedSet.<SourcePath>of()),args.compilerFlags.or(ImmutableList.<String>of()),args.assemblerFlags.get(),platform.get(),FluentIterable.from(params.getDeclaredDeps().get()).transform(HasBuildTarget.TO_TARGET).append(args.exportedDeps.or(ImmutableSortedSet.<BuildTarget>of())));
  }
  return new NoopBuildRuleWithTests(params,new SourcePathResolver(resolver),args.tests.get());
}
