{
  BuildTarget libraryTarget=javaLibraryParams.getBuildTarget();
  if (arg.srcs.get().isEmpty() && arg.resources.get().isEmpty() && !libraryTarget.isFlavored()) {
    return Optional.absent();
  }
  BuildTarget gwtModuleBuildTarget=BuildTarget.of(libraryTarget.getUnflavoredBuildTarget(),ImmutableSet.of(JavaLibrary.GWT_MODULE_FLAVOR));
  ImmutableSortedSet<SourcePath> filesForGwtModule=ImmutableSortedSet.<SourcePath>naturalOrder().addAll(arg.srcs.get()).addAll(arg.resources.get()).build();
  ImmutableSortedSet<BuildRule> deps=ImmutableSortedSet.copyOf(pathResolver.filterBuildRuleInputs(filesForGwtModule));
  GwtModule gwtModule=new GwtModule(javaLibraryParams.copyWithChanges(gwtModuleBuildTarget,Suppliers.ofInstance(deps),Suppliers.ofInstance(ImmutableSortedSet.<BuildRule>of())),pathResolver,filesForGwtModule);
  resolver.addToIndex(gwtModule);
  return Optional.of(gwtModule);
}
