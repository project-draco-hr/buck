{
  final RuleKey ruleKey=new RuleKey("00000000000000000000000000000000");
  final String expectedUri="/artifacts/key/00000000000000000000000000000000";
  HttpArtifactCache cache=new HttpArtifactCache(argsBuilder.build()){
    @Override protected HttpResponse fetchCall(    String path,    Request.Builder requestBuilder) throws IOException {
      Request request=requestBuilder.url(SERVER + path).build();
      assertEquals(expectedUri,request.url().encodedPath());
      return new OkHttpResponseWrapper(new Response.Builder().request(request).protocol(Protocol.HTTP_1_1).code(HttpURLConnection.HTTP_OK).body(createResponseBody(ImmutableSet.of(ruleKey),ImmutableMap.<String,String>of(),ByteSource.wrap(new byte[0]),"data")).build());
    }
  }
;
  cache.fetch(ruleKey,LazyPath.ofInstance(Paths.get("output/file")));
  cache.close();
}
