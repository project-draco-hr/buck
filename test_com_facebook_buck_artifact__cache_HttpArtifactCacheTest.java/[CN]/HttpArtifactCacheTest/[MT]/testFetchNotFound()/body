{
  final List<Response> responseList=Lists.newArrayList();
  HttpArtifactCache cache=new HttpArtifactCache("http",fetchService,storeService,true,new FakeProjectFilesystem(),BUCK_EVENT_BUS,DIRECT_EXECUTOR_SERVICE,ERROR_TEXT_TEMPLATE,Optional.<Long>absent()){
    @Override protected HttpResponse fetchCall(    String path,    Request.Builder requestBuilder) throws IOException {
      Response response=new Response.Builder().code(HttpURLConnection.HTTP_NOT_FOUND).body(ResponseBody.create(MediaType.parse("application/octet-stream"),"extraneous")).protocol(Protocol.HTTP_1_1).request(requestBuilder.url(SERVER + path).build()).build();
      responseList.add(response);
      return new OkHttpResponseWrapper(response);
    }
  }
;
  CacheResult result=cache.fetch(new RuleKey("00000000000000000000000000000000"),LazyPath.ofInstance(Paths.get("output/file")));
  assertEquals(result.getType(),CacheResultType.MISS);
  assertTrue("response wasn't fully read!",responseList.get(0).body().source().exhausted());
  cache.close();
}
