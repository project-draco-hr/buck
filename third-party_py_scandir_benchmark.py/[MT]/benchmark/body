def benchmark(path, get_size=False):
    sizes = {}
    if get_size:

        def do_os_walk():
            size = 0
            for (root, dirs, files) in os.walk(path):
                for filename in files:
                    fullname = os.path.join(root, filename)
                    st = os.lstat(fullname)
                    if (not stat.S_ISLNK(st.st_mode)):
                        size += st.st_size
            sizes['os_walk'] = size

        def do_scandir_walk():
            sizes['scandir_walk'] = get_tree_size(path)
    else:

        def do_os_walk():
            for (root, dirs, files) in os.walk(path):
                pass

        def do_scandir_walk():
            for (root, dirs, files) in scandir.walk(path):
                pass
    print "Priming the system's cache..."
    do_scandir_walk()
    os_walk_time = 1000000
    scandir_walk_time = 1000000
    N = 3
    for i in range(N):
        print 'Benchmarking walks on {0}, repeat {1}/{2}...'.format(path, (i + 1), N)
        os_walk_time = min(os_walk_time, timeit.timeit(do_os_walk, number=1))
        scandir_walk_time = min(scandir_walk_time, timeit.timeit(do_scandir_walk, number=1))
    if get_size:
        if (sizes['os_walk'] == sizes['scandir_walk']):
            equality = 'equal'
        else:
            equality = 'NOT EQUAL!'
        print 'os.walk size {0}, scandir.walk size {1} -- {2}'.format(sizes['os_walk'], sizes['scandir_walk'], equality)
    print 'os.walk took {0:.3f}s, scandir.walk took {1:.3f}s -- {2:.1f}x as fast'.format(os_walk_time, scandir_walk_time, (os_walk_time / scandir_walk_time))
