{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  BuildRuleResolver resolver=new BuildRuleResolver();
  Set<TargetNode<?>> targetNodes=Sets.newTreeSet();
  BuildRule leafCxxBinary=new CxxBinaryBuilder(BuildTargetFactory.newInstance("//:dep")).build(resolver,filesystem,targetNodes);
  BuildRule cxxLibrary=new CxxLibraryBuilder(BuildTargetFactory.newInstance("//:lib")).setDeps(ImmutableSortedSet.of(leafCxxBinary.getBuildTarget())).build(resolver,filesystem,targetNodes);
  CxxBinary topLevelCxxBinary=(CxxBinary)new CxxBinaryBuilder(BuildTargetFactory.newInstance("//:bin")).setDeps(ImmutableSortedSet.of(cxxLibrary.getBuildTarget())).build(resolver,filesystem,targetNodes);
  assertThat(BuildRules.getTransitiveRuntimeDeps(topLevelCxxBinary),Matchers.hasItem(leafCxxBinary));
}
