{
  BuildRuleResolver resolver=new BuildRuleResolver();
  Genrule dep=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:dep")).setOut("out").build(resolver);
  CxxBinaryBuilder builder=(CxxBinaryBuilder)new CxxBinaryBuilder(BuildTargetFactory.newInstance("//:rule")).setPlatformLinkerFlags(new PatternMatchedCollection.Builder<ImmutableList<String>>().add(Pattern.compile(Pattern.quote(CxxPlatformUtils.DEFAULT_PLATFORM.getFlavor().toString())),ImmutableList.of("--linker-script=$(location //:dep)")).build());
  assertThat(builder.findImplicitDeps(),Matchers.hasItem(dep.getBuildTarget()));
  CxxLink binary=((CxxBinary)builder.build(resolver)).getRule();
  assertThat(binary.getArgs(),Matchers.hasItem(String.format("--linker-script=%s",dep.getAbsoluteOutputFilePath())));
  assertThat(binary.getDeps(),Matchers.hasItem(dep));
}
