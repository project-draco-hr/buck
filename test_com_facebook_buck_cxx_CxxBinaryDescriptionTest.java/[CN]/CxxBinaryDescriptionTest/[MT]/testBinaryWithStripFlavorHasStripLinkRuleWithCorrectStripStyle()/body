{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  CxxPlatform platform=CxxLibraryBuilder.createDefaultPlatform();
  CxxBinaryBuilder binaryBuilder=new CxxBinaryBuilder(BuildTargetFactory.newInstance("//:foo").withFlavors(platform.getFlavor(),ImmutableFlavor.of("shared"),CxxStrip.StripStyle.ALL_SYMBOLS.getFlavor()));
  binaryBuilder.setSrcs(ImmutableSortedSet.of(SourceWithFlags.of(new FakeSourcePath("foo.c"))));
  TargetGraph targetGraph=TargetGraphFactory.newInstance(binaryBuilder.build());
  BuildRuleResolver resolver=new BuildRuleResolver(targetGraph,new BuildTargetNodeToBuildRuleTransformer());
  BuildRule resultRule=binaryBuilder.build(resolver,filesystem,targetGraph);
  assertThat(resultRule,Matchers.instanceOf(CxxBinary.class));
  assertThat(((CxxBinary)resultRule).getLinkRule(),Matchers.instanceOf(CxxStrip.class));
  CxxStrip strip=(CxxStrip)((CxxBinary)resultRule).getLinkRule();
  assertThat(strip.getStripStyle(),Matchers.equalTo(CxxStrip.StripStyle.ALL_SYMBOLS));
}
