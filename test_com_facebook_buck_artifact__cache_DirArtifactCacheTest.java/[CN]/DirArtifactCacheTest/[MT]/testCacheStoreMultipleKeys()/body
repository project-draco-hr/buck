{
  Path cacheDir=tmpDir.newFolder();
  Path fileX=tmpDir.newFile("x");
  fileHashCache=new FakeFileHashCache(ImmutableMap.of(fileX,HashCode.fromInt(0)));
  dirArtifactCache=new DirArtifactCache("dir",new ProjectFilesystem(cacheDir),Paths.get("."),true,Optional.<Long>absent());
  Files.write(fileX,"x".getBytes(UTF_8));
  RuleKey ruleKey1=new RuleKey("aaaa");
  RuleKey ruleKey2=new RuleKey("bbbb");
  dirArtifactCache.store(ImmutableSet.of(ruleKey1,ruleKey2),ImmutableMap.<String,String>of(),BorrowablePath.notBorrowablePath(fileX));
  assertEquals(CacheResultType.HIT,dirArtifactCache.fetch(ruleKey1,LazyPath.ofInstance(fileX)).getType());
  assertEquals(CacheResultType.HIT,dirArtifactCache.fetch(ruleKey2,LazyPath.ofInstance(fileX)).getType());
}
