{
  Path cacheDir=tmpDir.newFolder();
  Path fileX=tmpDir.newFile("x");
  fileHashCache=new FakeFileHashCache(ImmutableMap.of(fileX,HashCode.fromInt(0)));
  dirArtifactCache=new DirArtifactCache("dir",new ProjectFilesystem(cacheDir),Paths.get("."),true,Optional.of(0L));
  Files.write(fileX,"x".getBytes(UTF_8));
  BuildRule inputRuleX=new BuildRuleForTest(fileX);
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  ruleResolver.addToIndex(inputRuleX);
  SourcePathResolver resolver=new SourcePathResolver(ruleResolver);
  RuleKey ruleKeyX=new DefaultRuleKeyBuilderFactory(0,fileHashCache,resolver).build(inputRuleX);
  assertEquals(CacheResultType.MISS,dirArtifactCache.fetch(ruleKeyX,LazyPath.ofInstance(fileX)).getType());
}
