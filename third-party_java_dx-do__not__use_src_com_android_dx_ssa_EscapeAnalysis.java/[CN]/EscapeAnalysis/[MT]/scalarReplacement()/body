{
  for (  EscapeSet escSet : latticeValues) {
    if (!escSet.replaceableArray || escSet.escape != EscapeState.NONE) {
      continue;
    }
    int e=escSet.regSet.nextSetBit(0);
    SsaInsn def=ssaMeth.getDefinitionForRegister(e);
    SsaInsn prev=getInsnForMove(def);
    TypeBearer lengthReg=prev.getSources().get(0).getTypeBearer();
    int length=((CstLiteralBits)lengthReg).getIntBits();
    ArrayList<RegisterSpec> newRegs=new ArrayList<RegisterSpec>(length);
    HashSet<SsaInsn> deletedInsns=new HashSet<SsaInsn>();
    replaceDef(def,prev,length,newRegs);
    deletedInsns.add(prev);
    deletedInsns.add(def);
    List<SsaInsn> useList=ssaMeth.getUseListForRegister(e);
    for (    SsaInsn use : useList) {
      replaceUse(use,prev,newRegs,deletedInsns);
      deletedInsns.add(use);
    }
    ssaMeth.deleteInsns(deletedInsns);
    ssaMeth.onInsnsChanged();
    SsaConverter.updateSsaMethod(ssaMeth,regCount);
    movePropagate();
  }
}
