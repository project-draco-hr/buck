{
  return FluentIterable.from(graph.getNodes()).filter(type).firstMatch(new Predicate<IjProjectElement>(){
    @Override public boolean apply(    IjProjectElement input){
      return FluentIterable.from(input.getTargets()).anyMatch(new Predicate<TargetNode<?>>(){
        @Override public boolean apply(        TargetNode<?> input){
          return input.getBuildTarget().equals(target.getBuildTarget());
        }
      }
);
    }
  }
).get();
}
