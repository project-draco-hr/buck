{
  IjModuleGraph.AggregationMode testAggregationMode=new IjModuleGraph.AggregationMode(2);
  ImmutableList<Path> originalPaths=ImmutableList.of(Paths.get("a","b","c"),Paths.get("a","b"),Paths.get("a"),Paths.get(""));
  ImmutableList<Path> expectedPaths=ImmutableList.of(Paths.get("a","b"),Paths.get("a","b"),Paths.get("a"),Paths.get(""));
  IjModuleGraph.BlockedPathNode dummyAggregationStops=new IjModuleGraph.BlockedPathNode();
  int minimumDepth=testAggregationMode.getGraphMinimumDepth(originalPaths.size());
  ImmutableList.Builder<Path> transformedPaths=ImmutableList.builder();
  for (  Path path : originalPaths) {
    transformedPaths.add(IjModuleGraph.simplifyPath(path,minimumDepth,dummyAggregationStops));
  }
  assertThat(transformedPaths.build(),Matchers.equalTo(expectedPaths));
}
