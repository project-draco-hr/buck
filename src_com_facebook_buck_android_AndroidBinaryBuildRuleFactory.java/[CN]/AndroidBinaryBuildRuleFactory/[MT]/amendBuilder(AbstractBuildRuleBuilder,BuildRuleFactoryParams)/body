{
  AndroidBinaryRule.Builder builder=((AndroidBinaryRule.Builder)abstractBuilder);
  String manifestAttribute=params.getRequiredStringAttribute("manifest");
  String manifestPath=params.resolveFilePathRelativeToBuildFileDirectory(manifestAttribute);
  builder.setManifest(manifestPath);
  String target=params.getRequiredStringAttribute("target");
  builder.setTarget(target);
  String keystoreProperties=params.getRequiredStringAttribute("keystore_properties");
  String keystorePropertiesPath=params.resolveFilePathRelativeToBuildFileDirectory(keystoreProperties);
  builder.setKeystorePropertiesPath(keystorePropertiesPath);
  String packageType=params.getRequiredStringAttribute("package_type");
  builder.setPackageType(packageType);
  ParseContext buildFileParseContext=ParseContext.forBaseName(params.target.getBaseName());
  for (  String noDx : params.getOptionalListAttribute("no_dx")) {
    BuildTarget buildTarget=params.buildTargetParser.parse(noDx,buildFileParseContext);
    builder.addBuildRuleToExcludeFromDex(buildTarget.getFullyQualifiedName());
  }
  boolean useSplitDex=params.getBooleanAttribute("use_split_dex");
  ZipSplitter.DexSplitStrategy dexSplitStrategy=params.getBooleanAttribute("minimize_primary_dex_size") ? ZipSplitter.DexSplitStrategy.MINIMIZE_PRIMARY_DEX_SIZE : ZipSplitter.DexSplitStrategy.MAXIMIZE_PRIMARY_DEX_SIZE;
  builder.setDexSplitMode(new AndroidBinaryRule.DexSplitMode(useSplitDex,dexSplitStrategy));
  boolean useAndroidProguardConfigWithOptimizations=params.getBooleanAttribute("use_android_proguard_config_with_optimizations");
  builder.setUseAndroidProguardConfigWithOptimizations(useAndroidProguardConfigWithOptimizations);
  Optional<String> proguardConfig=params.getOptionalStringAttribute("proguard_config");
  if (proguardConfig.isPresent()) {
    String proguardConfigPath=params.resolveFilePathRelativeToBuildFileDirectory(proguardConfig.get());
    builder.setProguardConfig(proguardConfigPath);
  }
  boolean compressResources=params.getBooleanAttribute("compress_resources");
  builder.setCompressResources(compressResources);
  List<String> primaryDexSubstrings=params.getOptionalListAttribute("primary_dex_substrings");
  builder.addPrimaryDexSubstrings(primaryDexSubstrings);
  Optional<String> resourceFilter=params.getOptionalStringAttribute("resource_filter");
  if (resourceFilter.isPresent()) {
    builder.setResourceFilter(Strings.emptyToNull(resourceFilter.get().trim()));
  }
}
