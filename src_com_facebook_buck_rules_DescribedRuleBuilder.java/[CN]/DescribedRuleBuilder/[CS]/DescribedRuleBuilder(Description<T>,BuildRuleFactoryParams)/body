{
  this.description=Preconditions.checkNotNull(description);
  this.ruleFactoryParams=Preconditions.checkNotNull(params);
  this.target=params.target;
  ImmutableSortedSet.Builder<BuildTarget> allDeps=ImmutableSortedSet.naturalOrder();
  for (  String rawDep : params.getOptionalListAttribute("deps")) {
    allDeps.add(params.resolveBuildTarget(rawDep));
  }
  T arg=description.createUnpopulatedConstructorArg();
  for (  Field field : arg.getClass().getFields()) {
    ParamInfo info=new ParamInfo(Paths.get(target.getBasePath()),field);
    if (BuildRule.class.isAssignableFrom(info.getType()) || SourcePath.class.isAssignableFrom(info.getType())) {
      detectBuildTargetsForParameter(allDeps,info,params);
    }
  }
  this.deps=allDeps.build();
  ImmutableSet.Builder<BuildTargetPattern> allVisibilities=ImmutableSet.builder();
  for (  String rawVis : params.getOptionalListAttribute("visibility")) {
    allVisibilities.add(params.buildTargetPatternParser.parse(rawVis,ParseContext.forVisibilityArgument()));
  }
  this.visibilities=allVisibilities.build();
}
