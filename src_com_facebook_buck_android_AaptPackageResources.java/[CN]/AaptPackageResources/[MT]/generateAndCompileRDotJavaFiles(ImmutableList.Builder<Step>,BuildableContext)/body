{
  Path rDotJavaSrc=getPathToGeneratedRDotJavaSrcFiles();
  steps.add(new MakeCleanDirectoryStep(rDotJavaSrc));
  Path rDotTxtDir=getPathToRDotTxtDir();
  MergeAndroidResourcesStep mergeStep=MergeAndroidResourcesStep.createStepForUberRDotJava(resourceDeps,rDotTxtDir.resolve("R.txt"),shouldWarnIfMissingResource,rDotJavaSrc);
  steps.add(mergeStep);
  if (shouldBuildStringSourceMap) {
    Path outputDirPath=getPathForNativeStringInfoDirectory();
    steps.add(new MakeCleanDirectoryStep(outputDirPath));
    GenStringSourceMapStep genNativeStringInfo=new GenStringSourceMapStep(rDotTxtDir,getResolver().getAllPaths(filteredResourcesProvider.getResDirectories()),outputDirPath);
    steps.add(genNativeStringInfo);
    buildableContext.recordArtifact(outputDirPath);
  }
  Path rDotJavaBin=getPathToCompiledRDotJavaFiles();
  steps.add(new MakeCleanDirectoryStep(rDotJavaBin));
  JavacStep javacStep=RDotJava.createJavacStepForUberRDotJavaFiles(ImmutableSet.copyOf(mergeStep.getRDotJavaFiles()),rDotJavaBin,javacOptions,getBuildTarget(),getResolver());
  steps.add(javacStep);
  Path rDotJavaClassesTxt=getPathToRDotJavaClassesTxt();
  steps.add(new MakeCleanDirectoryStep(rDotJavaClassesTxt.getParent()));
  steps.add(new AccumulateClassNamesStep(Optional.of(rDotJavaBin),rDotJavaClassesTxt));
  buildableContext.recordArtifact(rDotTxtDir);
  buildableContext.recordArtifact(rDotJavaSrc);
  buildableContext.recordArtifact(rDotJavaBin);
  buildableContext.recordArtifact(rDotJavaClassesTxt);
}
