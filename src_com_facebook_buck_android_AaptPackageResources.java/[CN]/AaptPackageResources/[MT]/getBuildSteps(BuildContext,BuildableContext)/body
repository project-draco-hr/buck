{
  ImmutableList.Builder<Step> steps=ImmutableList.builder();
  steps.add(new MkdirAndSymlinkFileStep(getProjectFilesystem(),getResolver().deprecatedGetPath(manifest),getAndroidManifestXml()));
  steps.add(new MkdirStep(getProjectFilesystem(),getResourceApkPath().getParent()));
  Path rDotTxtDir=getPathToRDotTxtDir();
  steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),rDotTxtDir));
  Optional<Path> pathToGeneratedProguardConfig=Optional.absent();
  if (packageType.isBuildWithObfuscation()) {
    Path proguardConfigDir=getPathToGeneratedProguardConfigDir();
    steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),proguardConfigDir));
    pathToGeneratedProguardConfig=Optional.of(proguardConfigDir.resolve("proguard.txt"));
    buildableContext.recordArtifact(proguardConfigDir);
  }
  steps.add(new AaptStep(getProjectFilesystem().getRootPath(),getAndroidManifestXml(),filteredResourcesProvider.getResDirectories(),FluentIterable.from(getResolver().getAllAbsolutePaths(assetsDirectories)).toSortedSet(Ordering.<Path>natural()),getResourceApkPath(),rDotTxtDir,pathToGeneratedProguardConfig,!skipCrunchPngs));
  steps.add(new TouchStep(getProjectFilesystem(),getPathToRDotTxtFile()));
  if (!filteredResourcesProvider.getResDirectories().isEmpty()) {
    generateAndCompileRDotJavaFiles(steps,buildableContext);
    if (rDotJavaNeedsDexing) {
      Path rDotJavaDexDir=getPathToRDotJavaDexFiles();
      steps.add(new MakeCleanDirectoryStep(getProjectFilesystem(),rDotJavaDexDir));
      steps.add(new DxStep(getProjectFilesystem(),getPathToRDotJavaDex(),Collections.singleton(getPathToCompiledRDotJavaFiles()),DX_OPTIONS));
      steps.add(new ZipScrubberStep(getProjectFilesystem(),getPathToRDotJavaDex()));
      final EstimateLinearAllocStep estimateLinearAllocStep=new EstimateLinearAllocStep(getProjectFilesystem(),getPathToCompiledRDotJavaFiles());
      steps.add(estimateLinearAllocStep);
      buildableContext.recordArtifact(getPathToRDotJavaDex());
      steps.add(new AbstractExecutionStep("record_build_output"){
        @Override public int execute(        ExecutionContext context){
          buildableContext.addMetadata(R_DOT_JAVA_LINEAR_ALLOC_SIZE,estimateLinearAllocStep.get().toString());
          return 0;
        }
      }
);
    }
  }
  buildableContext.addMetadata(FILTERED_RESOURCE_DIRS_KEY,FluentIterable.from(filteredResourcesProvider.getResDirectories()).transform(Functions.toStringFunction()).toSortedList(Ordering.natural()));
  buildableContext.recordArtifact(getAndroidManifestXml());
  buildableContext.recordArtifact(getResourceApkPath());
  steps.add(new RecordFileSha1Step(getProjectFilesystem(),getResourceApkPath(),RESOURCE_PACKAGE_HASH_KEY,buildableContext));
  return steps.build();
}
