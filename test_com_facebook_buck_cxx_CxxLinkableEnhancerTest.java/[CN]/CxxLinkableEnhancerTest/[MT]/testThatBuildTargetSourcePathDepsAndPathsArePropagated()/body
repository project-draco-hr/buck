{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  Genrule genrule1=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:genrule")).setOut("foo/bar.o").build(resolver);
  Genrule genrule2=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:genrule2")).setOut("foo/test.o").build(resolver);
  CxxLink cxxLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(TargetGraph.EMPTY,CXX_PLATFORM,params,new SourcePathResolver(resolver),target,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,SourcePathArg.from(new SourcePathResolver(resolver),new TestSourcePath("simple.o"),new BuildTargetSourcePath(genrule1.getBuildTarget()),new BuildTargetSourcePath(genrule2.getBuildTarget())),Linker.LinkableDepType.STATIC,EMPTY_DEPS,Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of(),ImmutableSet.<FrameworkPath>of());
  assertEquals(ImmutableSortedSet.<BuildRule>of(genrule1,genrule2),cxxLink.getDeps());
}
