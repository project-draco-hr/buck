{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  ProjectFilesystem filesystem=params.getProjectFilesystem();
  CxxLink cxxLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(TargetGraph.EMPTY,CXX_PLATFORM,params,new SourcePathResolver(resolver),target,Linker.LinkType.MACH_O_BUNDLE,Optional.<String>absent(),DEFAULT_OUTPUT,SourcePathArg.from(new SourcePathResolver(resolver),new FakeSourcePath("simple.o")),Linker.LinkableDepType.STATIC,EMPTY_DEPS,Optional.<SourcePath>of(new FakeSourcePath(filesystem,"path/to/MyBundleLoader")),ImmutableSet.<BuildTarget>of(),ImmutableSet.<FrameworkPath>of());
  assertThat(cxxLink.getArgs(),hasItem("-bundle"));
  assertThat(cxxLink.getArgs(),hasConsecutiveItems("-bundle_loader",filesystem.resolve("path/to/MyBundleLoader").toString()));
}
