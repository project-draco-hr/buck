{
  BuildRuleResolver ruleResolver=new BuildRuleResolver(TargetGraph.EMPTY,new DefaultTargetNodeToBuildRuleTransformer());
  SourcePathResolver pathResolver=new SourcePathResolver(ruleResolver);
  BuildRule dep=new FakeBuildRule(new FakeBuildRuleParamsBuilder("//:fake").build(),pathResolver);
  BuildTarget target=BuildTargetFactory.newInstance("//:archive");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(BuildTargetFactory.newInstance("//:dummy")).setDeclaredDeps(ImmutableSortedSet.of(dep)).build();
  CxxLink cxxLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(CXX_PLATFORM,params,ruleResolver,pathResolver,target,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,Linker.LinkableDepType.STATIC,EMPTY_DEPS,Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of(),NativeLinkableInput.builder().setArgs(DEFAULT_INPUTS).build());
  assertEquals(cxxLink.getDeps(),ImmutableSortedSet.<BuildRule>of());
}
