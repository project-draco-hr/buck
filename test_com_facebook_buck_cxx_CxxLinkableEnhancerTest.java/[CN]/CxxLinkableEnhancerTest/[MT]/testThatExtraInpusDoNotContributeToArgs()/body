{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  Genrule genrule=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:genrule")).setOut("foo/bar.o").build(resolver);
  CxxLink cxxLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(TargetGraph.EMPTY,CXX_PLATFORM,params,new SourcePathResolver(resolver),ImmutableList.<String>of(),target,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,ImmutableList.<SourcePath>of(),ImmutableList.<SourcePath>of(new TestSourcePath("something"),new BuildTargetSourcePath(genrule.getBuildTarget())),Linker.LinkableDepType.STATIC,EMPTY_DEPS,Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of());
  assertThat(cxxLink.getArgs(),Matchers.not(hasItem("something")));
  assertThat(cxxLink.getDeps(),hasItem(genrule));
  assertThat(cxxLink.getInputs(),hasItem(new BuildTargetSourcePath(genrule.getBuildTarget())));
}
