{
  SourcePathResolver pathResolver=new SourcePathResolver(new BuildRuleResolver());
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=new FakeBuildRuleParamsBuilder(target).build();
  String staticArg="static";
  NativeLinkableInput staticInput=NativeLinkableInput.of(ImmutableList.<SourcePath>of(),ImmutableList.of(staticArg),ImmutableSet.<FrameworkPath>of(),ImmutableSet.<FrameworkPath>of());
  String sharedArg="shared";
  NativeLinkableInput sharedInput=NativeLinkableInput.of(ImmutableList.<SourcePath>of(),ImmutableList.of(sharedArg),ImmutableSet.<FrameworkPath>of(),ImmutableSet.<FrameworkPath>of());
  FakeNativeLinkable nativeLinkable=createNativeLinkable("//:dep",pathResolver,staticInput,sharedInput);
  CxxLink staticLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(TargetGraph.EMPTY,CXX_PLATFORM,params,pathResolver,ImmutableList.<String>of(),target,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,DEFAULT_INPUTS,ImmutableList.<SourcePath>of(),Linker.LinkableDepType.STATIC,ImmutableSortedSet.<BuildRule>of(nativeLinkable),Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of());
  assertTrue(staticLink.getArgs().contains(staticArg) || staticLink.getArgs().contains("-Wl," + staticArg));
  assertFalse(staticLink.getArgs().contains(sharedArg));
  assertFalse(staticLink.getArgs().contains("-Wl," + sharedArg));
  CxxLink sharedLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(TargetGraph.EMPTY,CXX_PLATFORM,params,pathResolver,ImmutableList.<String>of(),target,Linker.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,DEFAULT_INPUTS,ImmutableList.<SourcePath>of(),Linker.LinkableDepType.SHARED,ImmutableSortedSet.<BuildRule>of(nativeLinkable),Optional.<Linker.CxxRuntimeType>absent(),Optional.<SourcePath>absent(),ImmutableSet.<BuildTarget>of());
  assertFalse(sharedLink.getArgs().contains(staticArg));
  assertFalse(sharedLink.getArgs().contains("-Wl," + staticArg));
  assertTrue(sharedLink.getArgs().contains(sharedArg) || sharedLink.getArgs().contains("-Wl," + sharedArg));
}
