{
  BuildRuleResolver resolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//foo:bar");
  BuildRuleParams params=BuildRuleParamsFactory.createTrivialBuildRuleParams(target);
  BuildTarget fakeBuildTarget=BuildTargetFactory.newInstance("//:fake");
  FakeBuildRule fakeBuildRule=new FakeBuildRule(new FakeBuildRuleParamsBuilder(fakeBuildTarget).build());
  resolver.addToIndex(fakeBuildRule);
  NativeLinkableInput nativeLinkableInput=new NativeLinkableInput(ImmutableSet.of(fakeBuildTarget),ImmutableList.<Path>of(),ImmutableList.<String>of());
  FakeNativeLinkable nativeLinkable=createNativeLinkable("//:dep",nativeLinkableInput,nativeLinkableInput);
  CxxLink cxxLink=CxxLinkableEnhancer.createCxxLinkableBuildRule(params,resolver,DEFAULT_LINKER,ImmutableList.<String>of(),ImmutableList.<String>of(),target,CxxLinkableEnhancer.LinkType.EXECUTABLE,Optional.<String>absent(),DEFAULT_OUTPUT,DEFAULT_INPUTS,NativeLinkable.Type.STATIC,ImmutableSortedSet.<BuildRule>of(nativeLinkable));
  assertTrue(cxxLink.getDeps().contains(fakeBuildRule));
}
