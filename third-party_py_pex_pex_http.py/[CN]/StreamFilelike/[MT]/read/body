def read(self, length=None):
    while ((length is None) or (len(self._bytes) < length)):
        try:
            next_chunk = next(self._iterator)
            if self._hasher:
                self._hasher.update(next_chunk)
            self._bytes += next_chunk
        except StopIteration:
            self._validate()
            break
    if (length is None):
        length = len(self._bytes)
    (chunk, self._bytes) = (self._bytes[:length], self._bytes[length:])
    return chunk
