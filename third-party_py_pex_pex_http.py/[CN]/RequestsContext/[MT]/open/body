def open(self, link):
    if link.local:
        return open(link.path, 'rb')
    for attempt in range((self._max_retries + 1)):
        try:
            return StreamFilelike(self._session.get(link.url, verify=self._verify, stream=True, headers={'User-Agent': self.USER_AGENT, }), link)
        except requests.exceptions.ReadTimeout:
            TRACER.log(('Read timeout trying to fetch %s, retrying. %d retries remain.' % (link.url, (self._max_retries - attempt))))
        except requests.exceptions.RequestException as e:
            raise self.Error(e)
    raise self.Error(requests.packages.urllib3.exceptions.MaxRetryError(None, link, ('Exceeded max retries of %d' % self._max_retries)))
