{
  try (AutoCloseableLock writeLock=rawAndComputedNodesLock.writeLock()){
    int invalidatedRawNodes=0;
    ImmutableSet<Map<String,Object>> rawNodes=allRawNodes.getIfPresent(path);
    if (rawNodes != null) {
      invalidatedRawNodes=rawNodes.size();
      for (      Map<String,Object> rawNode : rawNodes) {
        UnflavoredBuildTarget target=RawNodeParsePipeline.parseBuildTargetFromRawRule(cell.getRoot(),rawNode,path);
        LOG.debug("Invalidating target for path %s: %s",path,target);
        for (        CacheImpl<?> cache : typedNodeCaches.values()) {
          cache.allComputedNodes.invalidateAll(targetsCornucopia.get(target));
        }
        targetsCornucopia.removeAll(target);
      }
      allRawNodes.invalidate(path);
    }
    Iterable<Path> dependents=buildFileDependents.get(path);
    LOG.debug("Invalidating dependents for path %s: %s",path,dependents);
    for (    Path dependent : dependents) {
      if (dependent.equals(path)) {
        continue;
      }
      invalidatedRawNodes+=invalidatePath(dependent);
    }
    buildFileDependents.removeAll(path);
    buildFileConfigs.remove(path);
    return invalidatedRawNodes;
  }
 }
