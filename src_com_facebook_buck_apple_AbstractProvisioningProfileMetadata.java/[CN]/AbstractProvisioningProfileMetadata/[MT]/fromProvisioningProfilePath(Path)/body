{
  CapturingPrintStream stdout=new CapturingPrintStream();
  CapturingPrintStream stderr=new CapturingPrintStream();
  Console console=new Console(Verbosity.SILENT,stdout,stderr,Ansi.withoutTty());
  ProcessExecutor processExecutor=new ProcessExecutor(console);
  Set<ProcessExecutor.Option> options=EnumSet.of(ProcessExecutor.Option.EXPECTING_STD_OUT);
  ProcessExecutorParams processExecutorParams=ProcessExecutorParams.builder().setCommand(ImmutableList.of("/usr/bin/security","cms","-D","-i",profilePath.toString())).build();
  ProcessExecutor.Result result;
  result=processExecutor.launchAndExecute(processExecutorParams,options,Optional.<String>absent(),Optional.<Long>absent(),Optional.<Function<Process,Void>>absent());
  if (result.getExitCode() != 0) {
    throw new HumanReadableException("Invalid provisioning profile: " + profilePath + ": "+ result.getStderr());
  }
  try {
    NSDictionary plist=(NSDictionary)PropertyListParser.parse(result.getStdout().get().getBytes());
    Date expirationDate=((NSDate)plist.get("ExpirationDate")).getDate();
    String uuid=((NSString)plist.get("UUID")).getContent();
    ImmutableMap.Builder<String,NSObject> builder=ImmutableMap.<String,NSObject>builder();
    NSDictionary entitlements=((NSDictionary)plist.get("Entitlements"));
    for (    String key : entitlements.keySet()) {
      builder=builder.put(key,entitlements.objectForKey(key));
    }
    String appID=entitlements.get("application-identifier").toString();
    return ProvisioningProfileMetadata.builder().setAppID(ProvisioningProfileMetadata.splitAppID(appID)).setExpirationDate(expirationDate).setUUID(uuid).setProfilePath(Optional.<Path>of(profilePath)).setEntitlements(builder.build()).build();
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Malformed embedded plist: " + e);
  }
}
