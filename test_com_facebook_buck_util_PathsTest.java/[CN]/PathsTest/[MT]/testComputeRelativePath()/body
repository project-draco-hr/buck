{
  assertEquals("foo/bar",Paths.computeRelativePath("","foo/bar"));
  assertEquals("foo/bar/",Paths.computeRelativePath("","foo/bar/"));
  assertEquals("../baz/",Paths.computeRelativePath("foo/bar/","foo/baz/"));
  assertEquals("../../../",Paths.computeRelativePath("a/b/c/d/e/","a/b/"));
  assertEquals("c/d/e/",Paths.computeRelativePath("a/b/","a/b/c/d/e/"));
  assertEquals("../../../1/2/3/",Paths.computeRelativePath("a/b/c/d/e/f/","a/b/c/1/2/3/"));
  assertEquals("foo/bar",Paths.computeRelativePath("/prefix/who/cares/","/prefix/who/cares/foo/bar"));
}
