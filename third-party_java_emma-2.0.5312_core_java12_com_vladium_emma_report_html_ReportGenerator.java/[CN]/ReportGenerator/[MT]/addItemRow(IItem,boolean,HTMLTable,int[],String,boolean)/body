{
  if ($assert.ENABLED) {
    $assert.ASSERT(item != null,"null input: item");
    $assert.ASSERT(table != null,"null input: table");
    $assert.ASSERT(columns != null,"null input: columns");
  }
  final HTMLTable.IRow row=table.newRow();
  if (odd)   row.setClass(CSS_ODDROW);
  final StringBuffer buf=new StringBuffer(11);
  for (int c=0; c < columns.length; ++c) {
    final int attrID=columns[c];
    final IItemAttribute attr=item.getAttribute(attrID,m_settings.getUnitsType());
    if (attr != null) {
      final HTMLTable.ICell cell=row.newCell();
      if ((nameHREF != null) && (attrID == IItemAttribute.ATTRIBUTE_NAME_ID)) {
        buf.setLength(0);
        attr.format(item,buf);
        trimForDisplay(buf);
        final String fullHREFName=anchor ? "#".concat(nameHREF) : nameHREF;
        cell.add(new HyperRef(fullHREFName,buf.toString(),true));
      }
 else {
        final boolean fail=(m_metrics[attrID] > 0) && !attr.passes(item,m_metrics[attrID]);
        buf.setLength(0);
        attr.format(item,buf);
        trimForDisplay(buf);
        cell.setText(buf.toString(),true);
        if (fail)         cell.setClass(CSS_DATA_HIGHLIGHT);
      }
    }
 else {
      final HTMLTable.ICell cell=row.newCell();
      cell.setText(" ",true);
    }
  }
}
