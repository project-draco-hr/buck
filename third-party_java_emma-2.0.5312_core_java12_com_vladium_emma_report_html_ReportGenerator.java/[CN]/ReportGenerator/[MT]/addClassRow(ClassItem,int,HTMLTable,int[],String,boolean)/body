{
  if ($assert.ENABLED) {
    $assert.ASSERT(item != null,"null input: item");
    $assert.ASSERT(table != null,"null input: table");
    $assert.ASSERT(columns != null,"null input: columns");
  }
  final HTMLTable.IRow blank=table.newRow();
  final HTMLTable.IRow row=table.newRow();
  row.setClass(CSS_CLASS_ITEM_SPECIAL);
  final StringBuffer buf=new StringBuffer(11);
  for (int c=0; c < columns.length; ++c) {
    final int attrID=columns[c];
    final IItemAttribute attr=item.getAttribute(attrID,m_settings.getUnitsType());
    if (attr != null) {
      buf.setLength(0);
      attr.format(item,buf);
      final HTMLTable.ICell blankcell=blank.newCell();
      blankcell.setClass(clsIndex == 0 ? CSS_BLANK : CSS_BOTTOM);
      blankcell.setText(" ",true);
      final HTMLTable.ICell cell=row.newCell();
      boolean fail=false;
      if (attrID == IItemAttribute.ATTRIBUTE_NAME_ID) {
        if (itemHREF != null) {
          final String fullItemHREF=isAnchor ? "#".concat(itemHREF) : itemHREF;
          cell.add(new Text("class ",true));
          cell.add(new HyperRef(fullItemHREF,buf.toString(),true));
        }
 else {
          cell.setText("class " + buf.toString(),true);
        }
      }
 else {
        fail=(m_metrics[attrID] > 0) && !attr.passes(item,m_metrics[attrID]);
        cell.setText(buf.toString(),true);
      }
      cell.setClass(dataCellStyle(c,fail));
    }
 else {
      final HTMLTable.ICell cell=row.newCell();
      cell.setText(" ",true);
      cell.setClass(dataCellStyle(c,false));
    }
  }
}
