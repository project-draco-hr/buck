{
  Capture<String> logLineCapture=Capture.newInstance();
  EasyMock.expect(logger.log(EasyMock.capture(logLineCapture))).andReturn(Optional.<ListenableFuture<Void>>absent()).once();
  EasyMock.expect(logger.close()).andReturn(null).once();
  EasyMock.replay(logger);
  String errorMsg="My super cool error message!!!";
  HttpArtifactCacheEvent.Started startedEvent=HttpArtifactCacheEvent.newFetchStartedEvent();
  startedEvent.configure(-1,-1,-1,null);
  Finished event=HttpArtifactCacheEvent.newFinishedEventBuilder(startedEvent).setErrorMessage(errorMsg).build();
  event.configure(-1,-1,-1,BUILD_ID);
  listener.onHttpArtifactCacheEvent(event);
  listener.outputTrace(BUILD_ID);
  EasyMock.verify(logger);
  String actualLogLine=logLineCapture.getValue();
  assertFalse(Strings.isNullOrEmpty(actualLogLine));
  assertTrue(actualLogLine.contains(errorMsg));
  assertTrue(actualLogLine.contains(BUILD_ID.toString()));
}
