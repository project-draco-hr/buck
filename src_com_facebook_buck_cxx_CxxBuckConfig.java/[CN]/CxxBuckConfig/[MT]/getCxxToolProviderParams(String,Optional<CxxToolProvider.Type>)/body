{
  Optional<String> value=delegate.getValue(cxxSection,field);
  if (!value.isPresent()) {
    return Optional.absent();
  }
  String source=String.format("[%s] %s",cxxSection,field);
  Optional<BuildTarget> target=delegate.getMaybeBuildTarget(cxxSection,field);
  Optional<CxxToolProvider.Type> type=delegate.getEnum(cxxSection,field + "_type",CxxToolProvider.Type.class).or(defaultType);
  if (type.isPresent() && type.get() == CxxToolProvider.Type.DEFAULT) {
    type=Optional.of(CxxToolProvider.Type.GCC);
  }
  if (target.isPresent()) {
    return Optional.of(CxxToolProviderParams.builder().setSource(source).setBuildTarget(target.get()).setType(type.or(CxxToolProvider.Type.GCC)).build());
  }
 else {
    return Optional.of(CxxToolProviderParams.builder().setSource(source).setPath(delegate.getRequiredPath(cxxSection,field)).setType(type).build());
  }
}
