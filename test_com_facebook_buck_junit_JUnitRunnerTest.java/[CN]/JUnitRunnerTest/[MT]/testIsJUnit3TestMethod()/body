{
  Method testGetterMethod=FakeJUnit3Test.class.getMethod("testGetter");
  assertTrue("Extends TestCase, so 'public void testXXX' methods are test methods.",JUnitRunner.isTestMethod(testGetterMethod));
  Method testSetterMethod=FakeJUnit3Test.class.getMethod("testSetter");
  assertTrue("Extends TestCase, so 'public void testXXX' methods are test methods.",JUnitRunner.isTestMethod(testSetterMethod));
  Method testSetterWithParamMethod=FakeJUnit3Test.class.getMethod("testSetter",String.class);
  assertFalse("Takes a parameter, so should not be considered a test method.",JUnitRunner.isTestMethod(testSetterWithParamMethod));
  Method testStringGetterMethod=FakeJUnit3Test.class.getMethod("testStringGetter");
  assertFalse("Has a return value, so should not be considered a test method.",JUnitRunner.isTestMethod(testStringGetterMethod));
  Method getMethod=FakeJUnit3Test.class.getMethod("get");
  assertFalse("Does not start with 'test', so should not be considered a test method.",JUnitRunner.isTestMethod(getMethod));
  Method ignoreableTestGetterMethod=FakeJUnit3Test.class.getMethod("testBehavior");
  assertFalse("Has @Ignore annotation, so should not be considered a test method.",JUnitRunner.isTestMethod(ignoreableTestGetterMethod));
}
