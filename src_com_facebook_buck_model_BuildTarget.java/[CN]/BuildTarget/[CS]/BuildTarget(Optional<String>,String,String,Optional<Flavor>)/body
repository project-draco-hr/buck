{
  Preconditions.checkNotNull(repository);
  Preconditions.checkNotNull(baseName);
  Preconditions.checkNotNull(shortName);
  Preconditions.checkNotNull(flavor);
  Preconditions.checkArgument(baseName.startsWith(BUILD_TARGET_PREFIX),"baseName must start with %s but was %s",BUILD_TARGET_PREFIX,baseName);
  int hashIndex=shortName.lastIndexOf("#");
  if (hashIndex != -1 && !flavor.isPresent()) {
    flavor=Optional.of(new Flavor(shortName.substring(hashIndex + 1)));
    shortName=shortName.substring(0,hashIndex);
  }
  Preconditions.checkArgument(!shortName.contains("#"),"Build target name cannot contain '#' but was: %s.",shortName);
  if (flavor.isPresent()) {
    Flavor flavorName=flavor.get();
    if (!VALID_FLAVOR_PATTERN.matcher(flavorName.toString()).matches()) {
      throw new IllegalArgumentException("Invalid flavor: " + flavorName);
    }
  }
  this.repository=repository;
  this.baseName=baseName.replace("\\","/");
  this.shortName=shortName;
  this.flavor=flavor;
  this.fullyQualifiedName=(repository.isPresent() ? "@" + repository.get() : "") + baseName + ":"+ shortName+ (flavor.isPresent() ? "#" + flavor.get() : "");
}
