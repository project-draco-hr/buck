{
  Preconditions.checkArgument(baseName.startsWith(BUILD_TARGET_PREFIX),"baseName must start with %s but was %s",BUILD_TARGET_PREFIX,baseName);
  Preconditions.checkArgument(shortName.lastIndexOf("#") == -1,"Build target name cannot contain '#' but was: %s.",shortName);
  Preconditions.checkArgument(!shortName.contains("#"),"Build target name cannot contain '#' but was: %s.",shortName);
  for (  Flavor flavor : flavors) {
    if (!Flavor.DEFAULT.equals(flavor) && !VALID_FLAVOR_PATTERN.matcher(flavor.toString()).matches()) {
      throw new IllegalArgumentException("Invalid flavor: " + flavor);
    }
  }
  this.repository=repository;
  this.baseName=baseName.replace("\\","/");
  this.shortName=shortName;
  this.flavors=flavors;
  this.fullyQualifiedName=(repository.isPresent() ? "@" + repository.get() : "") + baseName + ":"+ shortName+ getFlavorPostfix();
}
