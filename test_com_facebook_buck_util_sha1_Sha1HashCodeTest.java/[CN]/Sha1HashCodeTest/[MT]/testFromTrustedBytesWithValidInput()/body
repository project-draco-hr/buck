{
  byte[] bytes=new byte[]{(byte)0xfa,(byte)0xce,(byte)0xb0,(byte)0x0c,(byte)0xfa,(byte)0xce,(byte)0xb0,(byte)0x0c,(byte)0xfa,(byte)0xce,(byte)0xb0,(byte)0x0c,(byte)0xfa,(byte)0xce,(byte)0xb0,(byte)0x0c,(byte)0xfa,(byte)0xce,(byte)0xb0,(byte)0x0c};
  Sha1HashCode hashCodeFromRawBytes=Sha1HashCode.fromBytes(bytes);
  assertEquals("firstFourBytes should be in reverse order. See Sha1HashCode.BYTE_ORDER_FOR_FIELDS.",0x0cb0cefa,hashCodeFromRawBytes.firstFourBytes);
  assertEquals("nextEightBytes should be in reverse order. See Sha1HashCode.BYTE_ORDER_FOR_FIELDS.",0x0cb0cefa0cb0cefaL,hashCodeFromRawBytes.nextEightBytes);
  assertEquals("lastEightBytes should be in reverse order. See Sha1HashCode.BYTE_ORDER_FOR_FIELDS.",0x0cb0cefa0cb0cefaL,hashCodeFromRawBytes.lastEightBytes);
  Sha1HashCode hashCodeFromString=Sha1HashCode.of(Strings.repeat("faceb00c",5));
  assertEquals(hashCodeFromString,hashCodeFromRawBytes);
  assertEquals(0x0cb0cefa,hashCodeFromRawBytes.hashCode());
}
