{
  BuildRuleResolver resolver=new BuildRuleResolver();
  AndroidPlatformTarget android=EasyMock.createNiceMock(AndroidPlatformTarget.class);
  EasyMock.expect(android.getDxExecutable()).andStubReturn(Paths.get("."));
  EasyMock.expect(android.getZipalignExecutable()).andStubReturn(Paths.get("zipalign"));
  EasyMock.replay(android);
  BuildTarget target=BuildTargetFactory.newInstance("//example:genrule");
  Genrule genrule=(Genrule)GenruleBuilder.newGenruleBuilder(target).setBash("true").setOut("/dev/null").build(resolver);
  ExecutionContext context=TestExecutionContext.newBuilder().setAndroidPlatformTargetSupplier(Suppliers.ofInstance(Optional.of(android))).build();
  ImmutableMap.Builder<String,String> builder=ImmutableMap.builder();
  genrule.addEnvironmentVariables(context,builder);
  ImmutableMap<String,String> env=builder.build();
  assertEquals(Paths.get(".").toString(),env.get("DX"));
  assertEquals(Paths.get("zipalign").toString(),env.get("ZIPALIGN"));
  EasyMock.verify(android);
}
