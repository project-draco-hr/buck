{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildTarget target=BuildTargetFactory.newInstance("//:example");
  Genrule rule=ruleResolver.buildAndAddToIndex(Genrule.newGenruleBuilder(new FakeAbstractBuildRuleBuilderParams()).setRelativeToAbsolutePathFunctionForTesting(ABSOLUTIFIER).setBuildTarget(target).setBash(Optional.of("ignored")).addSrc(Paths.get("in-dir.txt")).addSrc(Paths.get("foo/bar.html")).addSrc(Paths.get("other/place.txt")).setOut("example-file"));
  ImmutableList.Builder<Step> builder=ImmutableList.builder();
  rule.addSymlinkCommands(builder);
  ImmutableList<Step> commands=builder.build();
  String baseTmpPath=GEN_DIR + "/example__srcs/";
  assertEquals(3,commands.size());
  MkdirAndSymlinkFileStep linkCmd=(MkdirAndSymlinkFileStep)commands.get(0);
  assertEquals(Paths.get("in-dir.txt"),linkCmd.getSource());
  assertEquals(Paths.get(baseTmpPath + "in-dir.txt"),linkCmd.getTarget());
  linkCmd=(MkdirAndSymlinkFileStep)commands.get(1);
  assertEquals(Paths.get("foo/bar.html"),linkCmd.getSource());
  assertEquals(Paths.get(baseTmpPath + "foo/bar.html"),linkCmd.getTarget());
  linkCmd=(MkdirAndSymlinkFileStep)commands.get(2);
  assertEquals(Paths.get("other/place.txt"),linkCmd.getSource());
  assertEquals(Paths.get(baseTmpPath + "other/place.txt"),linkCmd.getTarget());
}
