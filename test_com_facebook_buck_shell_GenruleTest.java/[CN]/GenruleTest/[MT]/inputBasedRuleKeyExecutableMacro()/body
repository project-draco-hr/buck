{
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  GenruleBuilder ruleBuilder=GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:rule")).setCmd("run $(exe //:dep)").setOut("output");
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  BuildRule dep=new ShBinaryBuilder(BuildTargetFactory.newInstance("//:dep")).setMain(new PathSourcePath(filesystem,Paths.get("dep.exe"))).build(resolver,filesystem);
  filesystem.writeContentsToPath("something",Paths.get("dep.exe"));
  filesystem.writeContentsToPath("something",dep.getPathToOutput());
  BuildRule rule=ruleBuilder.build(resolver);
  DefaultRuleKeyBuilderFactory defaultRuleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver));
  InputBasedRuleKeyBuilderFactory inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver),defaultRuleKeyBuilderFactory);
  RuleKey originalRuleKey=defaultRuleKeyBuilderFactory.build(rule);
  RuleKey originalInputRuleKey=inputBasedRuleKeyBuilderFactory.build(rule);
  resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  Genrule extra=(Genrule)GenruleBuilder.newGenruleBuilder(BuildTargetFactory.newInstance("//:extra")).setOut("something").build(resolver);
  new ShBinaryBuilder(BuildTargetFactory.newInstance("//:dep")).setMain(new PathSourcePath(filesystem,Paths.get("dep.exe"))).setDeps(ImmutableSortedSet.of(extra.getBuildTarget())).build(resolver,filesystem);
  rule=ruleBuilder.build(resolver);
  defaultRuleKeyBuilderFactory=new DefaultRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver));
  inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver),defaultRuleKeyBuilderFactory);
  RuleKey unchangedRuleKey=defaultRuleKeyBuilderFactory.build(rule);
  RuleKey unchangedInputBasedRuleKey=inputBasedRuleKeyBuilderFactory.build(rule);
  assertThat(unchangedRuleKey,Matchers.not(Matchers.equalTo(originalRuleKey)));
  assertThat(unchangedInputBasedRuleKey,Matchers.equalTo(originalInputRuleKey));
  resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  dep=new ShBinaryBuilder(BuildTargetFactory.newInstance("//:dep")).setMain(new PathSourcePath(filesystem,Paths.get("dep.exe"))).build(resolver,filesystem);
  filesystem.writeContentsToPath("something else",dep.getPathToOutput());
  rule=ruleBuilder.build(resolver);
  inputBasedRuleKeyBuilderFactory=new InputBasedRuleKeyBuilderFactory(new DefaultFileHashCache(filesystem),new SourcePathResolver(resolver),defaultRuleKeyBuilderFactory);
  RuleKey changedInputBasedRuleKey=inputBasedRuleKeyBuilderFactory.build(rule);
  assertThat(changedInputBasedRuleKey,Matchers.not(Matchers.equalTo(originalInputRuleKey)));
}
