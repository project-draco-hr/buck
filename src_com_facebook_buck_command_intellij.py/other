import errno
import json
import os
import subprocess
import sys
from collections import defaultdict
MISC_XML = '<?xml version="1.0" encoding="UTF-8"?>\n<project version="4">\n  <component\n    name="ProjectRootManager"\n    version="2"\n    languageLevel="%(java_language_level)s"\n    assert-keyword="true"\n    jdk-15="true"\n    project-jdk-name="%(project_jdk_name)s"\n    project-jdk-type="%(project_jdk_type)s">\n    %(project_output_url)s\n  </component>\n</project>'
MODULE_XML_START = '<?xml version="1.0" encoding="UTF-8"?>\n<module type="%(type)s" version="4">'
MODULE_XML_END = '\n</module>\n'
ANDROID_FACET = '\n  <component name="FacetManager">\n    <facet type="android" name="Android">\n      <configuration>\n        <option name="ENABLE_SOURCES_AUTOGENERATION" value="%(enable_sources_autogeneration)s" />\n        <option name="GEN_FOLDER_RELATIVE_PATH_APT" value="%(module_gen_path)s" />\n        <option name="GEN_FOLDER_RELATIVE_PATH_AIDL" value="%(module_gen_path)s" />\n        <option name="MANIFEST_FILE_RELATIVE_PATH" value="%(android_manifest)s" />\n        <option name="RES_FOLDER_RELATIVE_PATH" value="%(res)s" />\n        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="%(asset_folder)s" />\n        <option name="LIBS_FOLDER_RELATIVE_PATH" value="%(libs_path)s" />\n        <option name="USE_CUSTOM_APK_RESOURCE_FOLDER" value="false" />\n        <option name="CUSTOM_APK_RESOURCE_FOLDER" value="" />\n        <option name="USE_CUSTOM_COMPILER_MANIFEST" value="false" />\n        <option name="CUSTOM_COMPILER_MANIFEST" value="" />\n        <option name="APK_PATH" value="%(apk_path)s" />\n        <option name="LIBRARY_PROJECT" value="%(is_android_library_project)s" />\n        <option name="RUN_PROCESS_RESOURCES_MAVEN_TASK" value="true" />\n        <option name="GENERATE_UNSIGNED_APK" value="false" />\n        <option name="CUSTOM_DEBUG_KEYSTORE_PATH" value="%(keystore)s" />\n        <option name="PACK_TEST_CODE" value="false" />\n        <option name="RUN_PROGUARD" value="%(run_proguard)s" />\n        <option name="PROGUARD_CFG_PATH" value="%(proguard_config)s" />\n        <resOverlayFolders />\n        <includeSystemProguardFile>false</includeSystemProguardFile>\n        <includeAssetsFromLibraries>true</includeAssetsFromLibraries>\n        <additionalNativeLibs />\n      </configuration>\n    </facet>\n  </component>'
ALL_MODULES_XML_START = '<?xml version="1.0" encoding="UTF-8"?>\n<project version="4">\n  <component name="ProjectModuleManager">\n    <modules>'
ALL_MODULES_XML_END = '\n    </modules>\n  </component>\n</project>\n'
AAR_XML_START = '<component name="libraryTable">\n  <library name="%(name)s">\n    <CLASSES>\n      <root url="jar://$PROJECT_DIR$/%(binary_jar)s!/" />'
AAR_XML_RESOURCE = '\n      <root url="file://$PROJECT_DIR$/%(resource_path)s/" />'
AAR_XML_END = '\n    </CLASSES>\n  </library>\n</component>\n'
LIBRARY_XML_START = '<component name="libraryTable">\n  <library name="%(name)s">\n    <CLASSES>\n      <root url="jar://$PROJECT_DIR$/%(binary_jar)s!/" />\n    </CLASSES>'
LIBRARY_XML_WITH_JAVADOC = '\n    <JAVADOC>\n      <root url="%(javadoc_url)s" />\n    </JAVADOC>'
LIBRARY_XML_NO_JAVADOC = '\n    <JAVADOC />'
LIBRARY_XML_WITH_SOURCES = '\n    <SOURCES>\n      <root url="jar://$PROJECT_DIR$/%(source_jar)s!/" />\n    </SOURCES>'
LIBRARY_XML_NO_SOURCES = '\n    <SOURCES />'
LIBRARY_XML_END = '\n  </library>\n</component>\n'
RUN_CONFIG_XML_START = '<component name="ProjectRunConfigurationManager">'
RUN_CONFIG_XML_END = '</component>'
REMOTE_RUN_CONFIG_XML = '\n  <configuration default="false" name="%(name)s" type="Remote" factoryName="Remote">\n    <option name="USE_SOCKET_TRANSPORT" value="true" />\n    <option name="SERVER_MODE" value="false" />\n    <option name="SHMEM_ADDRESS" value="javadebug" />\n    <option name="HOST" value="localhost" />\n    <option name="PORT" value="5005" />\n    <RunnerSettings RunnerId="Debug">\n      <option name="DEBUG_PORT" value="5005" />\n      <option name="TRANSPORT" value="0" />\n      <option name="LOCAL" value="false" />\n    </RunnerSettings>\n    <ConfigurationWrapper RunnerId="Debug" />\n    <method />\n  </configuration>\n'
MODIFIED_FILES = []
PROJECT_FILES = set()
CONTAINS_IML_MARKER = '/*contains_iml*/'
if (__name__ == '__main__'):
    json_file = sys.argv[1]
    generate_minimum_project = False
    android_auto_generation_disabled = False
    for key in sys.argv[2:]:
        if (key == '--generate_minimum_project'):
            generate_minimum_project = True
        if (key == '--disable_android_auto_generation_setting'):
            android_auto_generation_disabled = True
    parsed_json = json.load(open(json_file, 'r'))
    libraries = parsed_json['libraries']
    write_libraries(libraries)
    aars = parsed_json['aars']
    write_aars(aars)
    modules = parsed_json['modules']
    write_modules(modules, generate_minimum_project, android_auto_generation_disabled)
    write_all_modules(modules)
    write_run_configs()
    java_settings = parsed_json['java']
    write_misc_file(java_settings)
    for path in MODIFIED_FILES:
        print path
    print  >> sys.stderr, ('  ::  Please resynchronize IntelliJ via File->Synchronize ' + 'or Cmd-Opt-Y (Mac) or Ctrl-Alt-Y (PC/Linux)')
