{
  PythonPlatform platform1=PythonPlatform.of(ImmutableFlavor.of("pyPlat1"),new PythonEnvironment(Paths.get("python2.6"),PythonVersion.of("2.6")),Optional.<BuildTarget>absent());
  PythonPlatform platform2=PythonPlatform.of(ImmutableFlavor.of("pyPlat2"),new PythonEnvironment(Paths.get("python2.7"),PythonVersion.of("2.7")),Optional.<BuildTarget>absent());
  PythonTestBuilder builder=PythonTestBuilder.create(BuildTargetFactory.newInstance("//:bin"),new FlavorDomain<>("Python Platform",ImmutableMap.of(platform1.getFlavor(),platform1,platform2.getFlavor(),platform2)));
  PythonTest test1=(PythonTest)builder.setPlatform(platform1.getFlavor().toString()).build(new BuildRuleResolver());
  assertThat(test1.getBinary().getPythonPlatform(),Matchers.equalTo(platform1));
  PythonTest test2=(PythonTest)builder.setPlatform(platform2.getFlavor().toString()).build(new BuildRuleResolver());
  assertThat(test2.getBinary().getPythonPlatform(),Matchers.equalTo(platform2));
}
