{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  BuildTarget libraryOneTarget=BuildTargetFactory.newInstance("//:libone");
  DefaultJavaLibraryRule rule=ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new FakeAbstractBuildRuleBuilderParams()).setBuildTarget(libraryOneTarget).addSrc(Paths.get("java/src/com/libone/Bar.java")));
  ImmutableList.Builder<Step> stepsBuilder=ImmutableList.builder();
  rule.createCommandsForJavac(rule.getPathToOutputFile(),ImmutableSet.<String>copyOf(rule.getTransitiveClasspathEntries().values()),ImmutableSet.<String>copyOf(rule.getDeclaredClasspathEntries().values()),JavacOptions.DEFAULTS,BuildDependencies.FIRST_ORDER_ONLY,Optional.<JavacStep.SuggestBuildRules>absent(),stepsBuilder,Optional.<Path>of(new File("javac").toPath()),libraryOneTarget);
  List<Step> steps=stepsBuilder.build();
  assertEquals(steps.size(),3);
  assertTrue(steps.get(2) instanceof ExternalJavacStep);
}
