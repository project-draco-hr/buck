{
  String rDotJavaSrcFolder=getRDotJavaSrcFolder(buildTarget);
  commands.add(new MakeCleanDirectoryStep(rDotJavaSrcFolder));
  Set<String> javaSourceFilePaths=Sets.newHashSet();
  if (androidResourceDeps.isEmpty()) {
    String rDotJavaPackage="com.facebook";
    String javaCode=MergeAndroidResourcesStep.generateJavaCodeForPackageWithoutResources(rDotJavaPackage);
    commands.add(new MakeCleanDirectoryStep(rDotJavaSrcFolder + "/com/facebook"));
    String rDotJavaFile=rDotJavaSrcFolder + "/com/facebook/R.java";
    commands.add(new WriteFileStep(javaCode,rDotJavaFile));
    javaSourceFilePaths.add(rDotJavaFile);
  }
 else {
    Map<String,String> symbolsFileToRDotJavaPackage=Maps.newHashMap();
    for (    HasAndroidResourceDeps res : androidResourceDeps) {
      String rDotJavaPackage=res.getRDotJavaPackage();
      symbolsFileToRDotJavaPackage.put(res.getPathToTextSymbolsFile(),rDotJavaPackage);
      String rDotJavaFilePath=MergeAndroidResourcesStep.getOutputFilePath(rDotJavaSrcFolder,rDotJavaPackage);
      javaSourceFilePaths.add(rDotJavaFilePath);
    }
    commands.add(new MergeAndroidResourcesStep(symbolsFileToRDotJavaPackage,rDotJavaSrcFolder));
  }
  String rDotJavaClassesDirectory=getRDotJavaBinFolder(buildTarget);
  commands.add(new MakeCleanDirectoryStep(rDotJavaClassesDirectory));
  JavacInMemoryStep javac=createJavacInMemoryCommandForRDotJavaFiles(javaSourceFilePaths,rDotJavaClassesDirectory);
  commands.add(javac);
}
