{
  BuildTarget bazTestTarget=BuildTargetFactory.newInstance("//baz:xctest");
  BuildTarget fooBinTestTarget=BuildTargetFactory.newInstance("//foo:bin-xctest");
  BuildTarget barLibTarget=BuildTargetFactory.newInstance("//bar:lib");
  barLibNode=AppleLibraryBuilder.createBuilder(barLibTarget).build();
  BuildTarget bazLibTarget=BuildTargetFactory.newInstance("//baz:lib");
  bazLibNode=AppleLibraryBuilder.createBuilder(bazLibTarget).setTests(Optional.of(ImmutableSortedSet.of(bazTestTarget))).build();
  BuildTarget fooTestTarget=BuildTargetFactory.newInstance("//foo:lib-xctest");
  fooTestNode=AppleTestBuilder.createBuilder(fooTestTarget).setExtension(Optional.of(AppleBundleExtension.XCTEST)).setDeps(Optional.of(ImmutableSortedSet.of(bazLibTarget))).setInfoPlist(new FakeSourcePath("Info.plist")).build();
  BuildTarget fooLibTarget=BuildTargetFactory.newInstance("//foo:lib");
  fooLibNode=AppleLibraryBuilder.createBuilder(fooLibTarget).setDeps(Optional.of(ImmutableSortedSet.of(barLibTarget))).setTests(Optional.of(ImmutableSortedSet.of(fooTestTarget))).build();
  BuildTarget fooBinBinaryTarget=BuildTargetFactory.newInstance("//foo:binbinary");
  fooBinBinaryNode=AppleBinaryBuilder.createBuilder(fooBinBinaryTarget).setDeps(Optional.of(ImmutableSortedSet.of(fooLibTarget))).build();
  BuildTarget fooBinTarget=BuildTargetFactory.newInstance("//foo:bin");
  fooBinNode=AppleBundleBuilder.createBuilder(fooBinTarget).setExtension(Either.<AppleBundleExtension,String>ofLeft(AppleBundleExtension.APP)).setBinary(fooBinBinaryTarget).setTests(Optional.of(ImmutableSortedSet.of(fooBinTestTarget))).setInfoPlist(new FakeSourcePath("Info.plist")).build();
  bazTestNode=AppleTestBuilder.createBuilder(bazTestTarget).setDeps(Optional.of(ImmutableSortedSet.of(bazLibTarget))).setExtension(Optional.of(AppleBundleExtension.XCTEST)).setInfoPlist(new FakeSourcePath("Info.plist")).build();
  fooBinTestNode=AppleTestBuilder.createBuilder(fooBinTestTarget).setDeps(Optional.of(ImmutableSortedSet.of(fooBinTarget))).setExtension(Optional.of(AppleBundleExtension.XCTEST)).setInfoPlist(new FakeSourcePath("Info.plist")).build();
  BuildTarget quxBinTarget=BuildTargetFactory.newInstance("//qux:bin");
  quxBinNode=AppleBinaryBuilder.createBuilder(quxBinTarget).setDeps(Optional.of(ImmutableSortedSet.of(barLibTarget))).build();
  BuildTarget workspaceExtraTestTarget=BuildTargetFactory.newInstance("//foo:extra-xctest");
  workspaceExtraTestNode=AppleTestBuilder.createBuilder(workspaceExtraTestTarget).setExtension(Optional.of(AppleBundleExtension.XCTEST)).setInfoPlist(new FakeSourcePath("Info.plist")).build();
  BuildTarget workspaceTarget=BuildTargetFactory.newInstance("//foo:workspace");
  workspaceNode=XcodeWorkspaceConfigBuilder.createBuilder(workspaceTarget).setWorkspaceName(Optional.of("workspace")).setSrcTarget(Optional.of(fooBinTarget)).setExtraTests(Optional.of(ImmutableSortedSet.of(workspaceExtraTestTarget))).build();
  BuildTarget smallWorkspaceTarget=BuildTargetFactory.newInstance("//baz:small-workspace");
  smallWorkspaceNode=XcodeWorkspaceConfigBuilder.createBuilder(smallWorkspaceTarget).setWorkspaceName(Optional.of("small-workspace")).setSrcTarget(Optional.of(bazLibTarget)).build();
  targetGraph=TargetGraphFactory.newInstance(barLibNode,fooLibNode,fooBinBinaryNode,fooBinNode,bazLibNode,bazTestNode,fooTestNode,fooBinTestNode,quxBinNode,workspaceExtraTestNode,workspaceNode,smallWorkspaceNode);
}
