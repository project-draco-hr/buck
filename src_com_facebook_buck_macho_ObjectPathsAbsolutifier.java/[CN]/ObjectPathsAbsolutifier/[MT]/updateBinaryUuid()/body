{
  final AtomicInteger stringTableSizeIncrease=new AtomicInteger();
  buffer.position(0);
  LoadCommandUtils.enumerateLoadCommandsInFile(buffer,new Function<LoadCommand,Boolean>(){
    @Override public Boolean apply(    LoadCommand input){
      boolean isUuidCommand=input instanceof UUIDCommand;
      if (isUuidCommand) {
        try {
          UUIDCommand uuidCommand=(UUIDCommand)input;
          UUIDCommand updatedCommand=uuidCommand.withUuid(UUID.randomUUID());
          UUIDCommandUtils.updateUuidCommand(buffer,uuidCommand,updatedCommand);
        }
 catch (        IOException e) {
          LOG.error(e,"Unable to update UUID");
        }
      }
      return !isUuidCommand;
    }
  }
);
  return stringTableSizeIncrease.intValue();
}
