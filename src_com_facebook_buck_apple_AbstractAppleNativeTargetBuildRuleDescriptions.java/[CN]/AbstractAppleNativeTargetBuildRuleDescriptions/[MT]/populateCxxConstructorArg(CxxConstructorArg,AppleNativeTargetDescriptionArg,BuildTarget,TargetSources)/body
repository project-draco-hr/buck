{
  output.srcs=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofLeft(ImmutableList.copyOf(targetSources.getSrcPaths())));
  output.headers=Optional.of(Either.<ImmutableList<SourcePath>,ImmutableMap<String,SourcePath>>ofLeft(ImmutableList.copyOf(targetSources.getHeaderPaths())));
  output.compilerFlags=Optional.of(ImmutableList.<String>of());
  output.linkerFlags=Optional.of(ImmutableList.<String>of());
  output.platformLinkerFlags=Optional.of(ImmutableList.<Pair<String,ImmutableList<String>>>of());
  output.preprocessorFlags=Optional.of(ImmutableList.<String>of());
  output.langPreprocessorFlags=Optional.of(ImmutableMap.<CxxSource.Type,ImmutableList<String>>of());
  output.frameworkSearchPaths=Optional.of(ImmutableList.<Path>of());
  output.lexSrcs=Optional.of(ImmutableList.<SourcePath>of());
  output.yaccSrcs=Optional.of(ImmutableList.<SourcePath>of());
  output.deps=arg.deps;
  output.headerNamespace=arg.headerPathPrefix.or(Optional.of(buildTarget.getShortName()));
}
