{
  BuildRuleResolver ruleResolver=new BuildRuleResolver();
  Function<String,Path> pathRelativizer=new Function<String,Path>(){
    @Override public Path apply(    String input){
      return Paths.get(input);
    }
  }
;
  RuleKeyBuilderFactory ruleKeyBuilderFactory=new FakeRuleKeyBuilderFactory();
  BuildTarget javaDep1BuildTarget=new BuildTarget("//java/com/example","dep1");
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new DefaultBuildRuleBuilderParams(pathRelativizer,ruleKeyBuilderFactory)).setBuildTarget(javaDep1BuildTarget).addSrc("java/com/example/Dep1.java"));
  BuildTarget javaDep2BuildTarget=new BuildTarget("//java/com/example","dep2");
  ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new DefaultBuildRuleBuilderParams(pathRelativizer,ruleKeyBuilderFactory)).setBuildTarget(javaDep2BuildTarget).addSrc("java/com/example/Dep2.java"));
  BuildTarget javaLibBuildTarget=new BuildTarget("//java/com/example","lib");
  DefaultJavaLibraryRule javaLib=ruleResolver.buildAndAddToIndex(DefaultJavaLibraryRule.newJavaLibraryRuleBuilder(new DefaultBuildRuleBuilderParams(pathRelativizer,ruleKeyBuilderFactory)).setBuildTarget(javaLibBuildTarget).addSrc("java/com/example/Lib.java").addDep(javaDep1BuildTarget).addDep(javaDep2BuildTarget));
  ImmutableSortedSet<BuildRule> originalDeps=ImmutableSortedSet.<BuildRule>of(javaLib);
  ImmutableSet<BuildTarget> buildRulesToExcludeFromDex=ImmutableSet.of(javaDep2BuildTarget);
  AndroidBinaryGraphEnhancer graphEnhancer=new AndroidBinaryGraphEnhancer(originalDeps,buildRulesToExcludeFromDex,pathRelativizer,ruleKeyBuilderFactory);
  ImmutableSet<IntermediateDexRule> depsForPreDexing=graphEnhancer.createDepsForPreDexing(ruleResolver);
  assertEquals("There should be a #dex rule for dep1 and lib, but not dep2 because it is in the no_dx " + "list.",2,depsForPreDexing.size());
  Iterator<IntermediateDexRule> depsForPreDexingIter=depsForPreDexing.iterator();
  BuildRule preDexRule1=depsForPreDexingIter.next();
  assertEquals("//java/com/example:dep1#dex",preDexRule1.getBuildTarget().toString());
  assertNotNull(ruleResolver.get(preDexRule1.getBuildTarget()));
  BuildRule preDexRule2=depsForPreDexingIter.next();
  assertEquals("//java/com/example:lib#dex",preDexRule2.getBuildTarget().toString());
  assertNotNull(ruleResolver.get(preDexRule2.getBuildTarget()));
}
