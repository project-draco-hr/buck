{
  super(buildRuleParams);
  this.manifest=Preconditions.checkNotNull(manifest);
  this.target=Preconditions.checkNotNull(target);
  this.classpathDeps=ImmutableSortedSet.copyOf(classpathDeps);
  this.keystore=Preconditions.checkNotNull(keystore);
  this.packageType=Preconditions.checkNotNull(packageType);
  this.buildRulesToExcludeFromDex=ImmutableSortedSet.copyOf(buildRulesToExcludeFromDex);
  this.dexSplitMode=Preconditions.checkNotNull(dexSplitMode);
  this.useAndroidProguardConfigWithOptimizations=useAndroidProguardConfigWithOptimizations;
  this.optimizationPasses=Preconditions.checkNotNull(proguardOptimizationPasses);
  this.proguardConfig=Preconditions.checkNotNull(proguardConfig);
  this.resourceCompressionMode=Preconditions.checkNotNull(resourceCompressionMode);
  this.cpuFilters=ImmutableSet.copyOf(cpuFilters);
  this.primaryDexPath=Preconditions.checkNotNull(primaryDexPath);
  this.filteredResourcesProvider=Preconditions.checkNotNull(filteredResourcesProvider);
  this.uberRDotJava=Preconditions.checkNotNull(uberRDotJava);
  this.packageStringAssets=Preconditions.checkNotNull(packageStringAssets);
  this.aaptPackageResources=Preconditions.checkNotNull(aaptPackageResources);
  this.preDexMerge=Preconditions.checkNotNull(preDexMerge);
  this.computeExopackageDepsAbi=Preconditions.checkNotNull(computeExopackageDepsAbi);
  this.exopackage=exopackage;
  this.preprocessJavaClassesDeps=ImmutableSortedSet.copyOf(preprocessJavaClassesDeps);
  this.preprocessJavaClassesBash=Preconditions.checkNotNull(preprocessJavaClassesBash);
  this.androidResourceDepsFinder=Preconditions.checkNotNull(androidResourceDepsFinder);
  this.proguardJarOverride=Preconditions.checkNotNull(proguardJarOverride);
  if (exopackage && !preDexMerge.isPresent()) {
    throw new IllegalArgumentException(getBuildTarget() + " specified exopackage without pre-dexing, which is invalid.");
  }
  if (exopackage) {
    Preconditions.checkArgument(computeExopackageDepsAbi.isPresent(),"computeExopackageDepsAbi must be set if exopackage is true.");
  }
}
