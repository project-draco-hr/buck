{
  final Set<String> primaryInputsToDex;
  final Optional<String> secondaryDexDir;
  final Optional<String> secondaryInputsDir;
  if (shouldSplitDex()) {
    String magicSecondaryDexSubdir="assets/secondary-program-dex-jars";
    String splitZipDir=getBinPath("__%s_split_zip__");
    commands.add(new MakeCleanDirectoryStep(splitZipDir));
    String primaryJarPath=splitZipDir + "/primary.jar";
    String secondaryJarMetaDirParent=splitZipDir + "/secondary_meta/";
    String secondaryJarMetaDir=secondaryJarMetaDirParent + magicSecondaryDexSubdir;
    commands.add(new MakeCleanDirectoryStep(secondaryJarMetaDir));
    String secondaryJarMeta=secondaryJarMetaDir + "/metadata.txt";
    String secondaryZipDir=getBinPath("__%s_secondary_zip__");
    commands.add(new MakeCleanDirectoryStep(secondaryZipDir));
    String zipSplitReportDir=getBinPath("__%s_split_zip_report__");
    commands.add(new MakeCleanDirectoryStep(zipSplitReportDir));
    SplitZipStep splitZipCommand=new SplitZipStep(classpathEntriesToDex,secondaryJarMeta,primaryJarPath,secondaryZipDir,"secondary-%d.jar",primaryDexSubstrings,primaryDexClassesFile.transform(sourcePathResolver),dexSplitMode.getDexSplitStrategy(),dexSplitMode.getDexStore(),zipSplitReportDir,dexSplitMode.useLinearAllocSplitDex(),linearAllocHardLimit);
    commands.add(splitZipCommand);
    String secondaryDexParentDir=getBinPath("__%s_secondary_dex__/");
    secondaryDexDir=Optional.of(secondaryDexParentDir + magicSecondaryDexSubdir);
    commands.add(new MkdirStep(secondaryDexDir.get()));
    secondaryDexDirectories.add(secondaryJarMetaDirParent);
    secondaryDexDirectories.add(secondaryDexParentDir);
    primaryInputsToDex=ImmutableSet.of(primaryJarPath);
    secondaryInputsDir=Optional.of(secondaryZipDir);
  }
 else {
    primaryInputsToDex=classpathEntriesToDex;
    secondaryDexDir=Optional.absent();
    secondaryInputsDir=Optional.absent();
  }
  Path successDir=Paths.get(getBinPath("__%s_smart_dex__/.success"));
  commands.add(new MkdirStep(successDir));
  SmartDexingStep smartDexingCommand=new SmartDexingStep(primaryDexPath,primaryInputsToDex,secondaryDexDir,secondaryInputsDir,successDir,Optional.<Integer>absent(),dexSplitMode.getDexStore());
  commands.add(smartDexingCommand);
}
