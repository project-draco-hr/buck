{
  Path rDotJavaScratchDir=Paths.get(getBinPath("__%s_r_dot_java_scratch__"));
  Optional<DexWithClasses> dexWithClassesForRDotJava=createDexWithClassesForRDotJava(pathToCompiledRDotJavaFiles,rDotJavaScratchDir,steps);
  ImmutableList<DexWithClasses> dexFilesToMerge=FluentIterable.from(preDexDeps).transform(DexWithClasses.TO_DEX_WITH_CLASSES).filter(Predicates.notNull()).toList();
  String secondaryDexScratchDir=getBinPath("__%s_secondary_dex__/");
  String secondaryDexMetadataScratchDir=secondaryDexScratchDir + "metadata/";
  String secondaryDexJarFilesScratchDir=secondaryDexScratchDir + "jarfiles/";
  secondaryDexDirectoriesBuilder.add(secondaryDexMetadataScratchDir);
  secondaryDexDirectoriesBuilder.add(secondaryDexJarFilesScratchDir);
  String secondaryDexMetadataDir=secondaryDexMetadataScratchDir + SECONDARY_DEX_SUBDIR;
  String secondaryDexJarFilesDir=secondaryDexJarFilesScratchDir + SECONDARY_DEX_SUBDIR;
  steps.add(new MakeCleanDirectoryStep(secondaryDexMetadataDir));
  steps.add(new MakeCleanDirectoryStep(secondaryDexJarFilesDir));
  Path preDexScratchDir=Paths.get(secondaryDexScratchDir,"__pre_dex_tmp__");
  steps.add(new MakeCleanDirectoryStep(preDexScratchDir));
  steps.add(new PreDexMergeStep(dexFilesToMerge,dexWithClassesForRDotJava,primaryDexPath,primaryDexPatterns,Paths.get(secondaryDexMetadataDir,"metadata.txt"),secondaryDexJarFilesDir,dexSplitMode.getDexStore(),linearAllocHardLimit,preDexScratchDir));
}
