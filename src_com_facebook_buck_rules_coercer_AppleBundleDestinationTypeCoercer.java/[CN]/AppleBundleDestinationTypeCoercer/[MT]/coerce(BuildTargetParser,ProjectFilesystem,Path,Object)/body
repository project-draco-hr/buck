{
  if (object instanceof AppleBundleDestination) {
    return (AppleBundleDestination)object;
  }
  if (object instanceof String) {
    AppleBundleDestination.SubfolderSpec subfolderSpec=enumTypeCoercer.coerce(buildTargetParser,filesystem,pathRelativeToProjectRoot,object);
    return AppleBundleDestination.of(subfolderSpec,Optional.<String>absent());
  }
  if (object instanceof List<?>) {
    List<?> list=(List<?>)object;
    Object first=list.size() >= 1 ? list.get(0) : null;
    Object second=list.size() >= 2 ? list.get(1) : null;
    if (first instanceof String && second instanceof String) {
      AppleBundleDestination.SubfolderSpec subfolderSpec=enumTypeCoercer.coerce(buildTargetParser,filesystem,pathRelativeToProjectRoot,first);
      String subpath=stringTypeCoercer.coerce(buildTargetParser,filesystem,pathRelativeToProjectRoot,second);
      return AppleBundleDestination.of(subfolderSpec,Optional.of(subpath));
    }
  }
  throw CoerceFailedException.simple(object,getOutputClass());
}
