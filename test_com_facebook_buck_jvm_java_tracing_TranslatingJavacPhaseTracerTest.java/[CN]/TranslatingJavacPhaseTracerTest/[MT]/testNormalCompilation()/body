{
  mockLogger.beginParse("file1");
  mockLogger.endParse();
  mockLogger.beginParse("file2");
  mockLogger.endParse();
  mockLogger.beginEnter();
  mockLogger.endEnter(ImmutableList.of("file1","file2"));
  mockLogger.beginAnalyze("file1","type1");
  mockLogger.endAnalyze();
  mockLogger.beginGenerate("file1","type1");
  mockLogger.endGenerate();
  mockLogger.beginAnalyze("file2","type2");
  mockLogger.endAnalyze();
  mockLogger.beginGenerate("file2","type2");
  mockLogger.endGenerate();
  replay(mockLogger);
  tracer.beginParse("file1");
  tracer.endParse();
  tracer.beginParse("file2");
  tracer.endParse();
  tracer.beginEnter();
  tracer.endEnter(ImmutableList.of("file1","file2"));
  tracer.beginAnalyze("file1","type1");
  tracer.endAnalyze();
  tracer.beginGenerate("file1","type1");
  tracer.endGenerate();
  tracer.beginAnalyze("file2","type2");
  tracer.endAnalyze();
  tracer.beginGenerate("file2","type2");
  tracer.endGenerate();
  verify(mockLogger);
}
