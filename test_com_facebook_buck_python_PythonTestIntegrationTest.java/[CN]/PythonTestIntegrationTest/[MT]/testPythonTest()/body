{
  ProcessResult result1=workspace.runBuckCommand("test","//:test-success");
  result1.assertSuccess();
  workspace.resetBuildLogFile();
  ProcessResult runResult1=workspace.runBuckCommand("run","//:test-success");
  runResult1.assertSuccess("python test binary should exit 0 on success");
  ProcessResult result2=workspace.runBuckCommand("test","//:test-failure");
  result2.assertTestFailure();
  assertThat("`buck test` should fail because test_that_fails() failed.",result2.getStderr(),containsString("test_that_fails"));
  ProcessResult runResult2=workspace.runBuckCommand("run","//:test-failure");
  runResult2.assertExitCode("python test binary should exit with expected error code on failure",PythonRunTestsStep.TEST_FAILURES_EXIT_CODE);
}
