{
  CxxPythonExtensionDescription.Arg arg=getDefaultArg();
  arg.baseModule=Optional.absent();
  params=paramsForArg(arg,pythonDep.getBuildTarget());
  CxxPythonExtension normal=(CxxPythonExtension)desc.createBuildRule(params,new BuildRuleResolver(),arg);
  PythonPackageComponents normalComps=normal.getPythonPackageComponents(cxxPlatform);
  assertEquals(ImmutableSet.of(target.getBasePath().resolve(desc.getExtensionName(target))),normalComps.getModules().keySet());
  arg.baseModule=Optional.of("blah");
  params=paramsForArg(arg,pythonDep.getBuildTarget());
  CxxPythonExtension baseModule=(CxxPythonExtension)desc.createBuildRule(params,new BuildRuleResolver(),arg);
  PythonPackageComponents baseModuleComps=baseModule.getPythonPackageComponents(cxxPlatform);
  assertEquals(ImmutableSet.of(Paths.get(arg.baseModule.get()).resolve(desc.getExtensionName(target))),baseModuleComps.getModules().keySet());
}
