{
  BuildRuleResolver resolver=new BuildRuleResolver(TargetGraph.EMPTY,new BuildTargetNodeToBuildRuleTransformer());
  new CxxLibraryBuilder(PYTHON2_DEP_TARGET).build(resolver);
  new CxxLibraryBuilder(PYTHON3_DEP_TARGET).build(resolver);
  CxxPythonExtensionBuilder builder=new CxxPythonExtensionBuilder(BuildTargetFactory.newInstance("//:rule"),new FlavorDomain<>("Python Platform",ImmutableMap.of(PY2.getFlavor(),PY2,PY3.getFlavor(),PY3)),new CxxBuckConfig(FakeBuckConfig.builder().build()),CxxTestBuilder.createDefaultPlatforms());
  CxxPythonExtension rule=(CxxPythonExtension)builder.build(resolver);
  SharedNativeLinkTarget sharedNativeLinkTarget=rule.getNativeLinkTarget(PY2);
  assertThat(sharedNativeLinkTarget.getSharedNativeLinkTargetLibraryName(CxxPlatformUtils.DEFAULT_PLATFORM),Matchers.equalTo("rule.so"));
}
