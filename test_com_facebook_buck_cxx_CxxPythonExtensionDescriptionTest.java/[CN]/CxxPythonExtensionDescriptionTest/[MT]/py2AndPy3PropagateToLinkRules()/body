{
  BuildRuleResolver resolver=new BuildRuleResolver();
  ProjectFilesystem filesystem=new FakeProjectFilesystem();
  Set<TargetNode<?>> targetNodes=Sets.newHashSet();
  BuildTarget target=BuildTargetFactory.newInstance("//:target");
  CxxPythonExtension extension=(CxxPythonExtension)createBuilder(resolver,filesystem,targetNodes,target).build(resolver,filesystem,targetNodes);
  CxxLink py2Ext=(CxxLink)extension.getExtension(TargetGraphFactory.newInstance(ImmutableSet.copyOf(targetNodes)),PY2,CxxPlatformUtils.DEFAULT_PLATFORM);
  assertThat(py2Ext.getArgs(),Matchers.allOf(Matchers.hasItem("-lpython2"),Matchers.not(Matchers.hasItem("-lpython3"))));
  CxxLink py3Ext=(CxxLink)extension.getExtension(TargetGraphFactory.newInstance(ImmutableSet.copyOf(targetNodes)),PY3,CxxPlatformUtils.DEFAULT_PLATFORM);
  assertThat(py3Ext.getArgs(),Matchers.allOf(Matchers.hasItem("-lpython3"),Matchers.not(Matchers.hasItem("-lpython2"))));
}
