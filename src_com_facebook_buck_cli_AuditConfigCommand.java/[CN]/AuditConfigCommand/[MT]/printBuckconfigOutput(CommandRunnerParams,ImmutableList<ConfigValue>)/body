{
  ImmutableListMultimap<String,ConfigValue> iniData=FluentIterable.from(configs).filter(new Predicate<ConfigValue>(){
    @Override public boolean apply(    ConfigValue config){
      return config.getSection() != "" && config.getValue().isPresent();
    }
  }
).index(new Function<ConfigValue,String>(){
    @Override public String apply(    ConfigValue config){
      return config.getSection();
    }
  }
);
  for (  Map.Entry<String,Collection<ConfigValue>> entry : iniData.asMap().entrySet()) {
    params.getConsole().getStdOut().println(String.format("[%s]",entry.getKey()));
    for (    ConfigValue config : entry.getValue()) {
      params.getConsole().getStdOut().println(String.format("    %s = %s",config.getProperty(),config.getValue().get()));
    }
    params.getConsole().getStdOut().println("");
  }
}
