{
  DefectSubmitResult.Builder defectSubmitResult=DefectSubmitResult.builder();
  Optional<SlbBuckConfig> frontendConfig=rageConfig.getFrontendConfig();
  if (frontendConfig.isPresent()) {
    Optional<ClientSideSlb> slb=frontendConfig.get().tryCreatingHttpClientSideSlb(clock,buckEventBus,new CommandThreadFactory("RemoteLog.HttpLoadBalancer"));
    if (slb.isPresent()) {
      try {
        return uploadReport(defectReport,defectSubmitResult,slb.get());
      }
 catch (      IOException e) {
        defectSubmitResult.setReportSubmitErrorMessage(e.getMessage());
        defectSubmitResult.setUploadSuccess(false);
      }
    }
  }
  filesystem.mkdirs(filesystem.getBuckPaths().getBuckOut());
  Path defectReportPath=filesystem.createTempFile(filesystem.getBuckPaths().getBuckOut(),"defect_report",".zip");
  try (OutputStream outputStream=filesystem.newFileOutputStream(defectReportPath)){
    writeReport(defectReport,outputStream);
  }
   return defectSubmitResult.setReportSubmitLocation(defectReportPath.toString()).build();
}
