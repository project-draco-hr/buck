@classmethod
def _iter_supported_tags(cls, impl, version, platform):
    "Given a set of tags, iterate over supported tags.\n\n    :param impl: Python implementation tag e.g. cp, jy, pp.\n    :param version: E.g. '26', '33'\n    :param platform: Platform as from :function:`pkg_resources.get_supported_platform`,\n    for example 'linux-x86_64' or 'macosx-10.4-x86_64'.\n    :returns: Iterator over (pyver, abi, platform) tuples.\n    "
    abis = []
    if ((impl == 'cp') and version.startswith('3')):
        abis.extend([('cp%sm' % version), 'abi3'])
    major_version = int(version[0])
    minor_versions = []
    for minor in range(int(version[1]), (-1), (-1)):
        minor_versions.append(('%d%d' % (major_version, minor)))
    platforms = list(PEP425Extras.platform_iterator(cls.translate_platform_to_tag(platform)))
    for p in platforms:
        for abi in abis:
            yield (('%s%s' % (impl, version)), abi, p)
    for p in (platforms + ['any']):
        for i in ('py', impl):
            yield (('%s%d' % (i, major_version)), 'none', p)
            for minor_version in minor_versions:
                yield (('%s%s' % (i, minor_version)), 'none', p)
